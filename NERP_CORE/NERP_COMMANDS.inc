/*
*
*	NERP ROLEPLAY SAMP SERVER
*	By DEntisT
*
*	Commands
*					beta 1.0
*
*/


#if INCLUDE_NERP_MODULES == 0
	#endinput
#endif


//==================================[ Komande ]=================================
//new itd[MAX_PLAYERS];
CMD:stuck(playerid, params[])
{
	if(KoristioStuck[playerid]) return greska(playerid, "Sacekajte 10s pre ponovne upotrebe!");
	if(!KoristioStuck[playerid])
	{
		new Float:Pos[3];
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+5.00);
		KoristioStuck[playerid] = true;
		SetTimerEx("MakeStuckAvlblAgain", 10000, false, "i", playerid);
	}
	return 1;
}

MakeStuckAvlblAgain(playerid); public MakeStuckAvlblAgain(playerid)
{
	KoristioStuck[playerid] = false;
	SendInfoMessage(playerid, "Ponovo mozete koristiti /stuck!");
	return 1;
}

CMD:zimskiobjekti(playerid, params[])
{
	#if NERP_ZIMSKI_MOD == 1
	Winter_ShowSnowObjects(playerid);
	SendInfoMessage(playerid, "Ukljucili/iskljucili ste zimske objekte.");
	#else
	SendInfoMessage(playerid, "Nije zimski period!");
	#endif
	return 1;
}

CMD:reportaj(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1824.9116,-1544.8605,13.4521)) return greska(playerid,"Nisi ispred zatvora!");
	if( PlayerCuffed[playerid] != 2 ) return greska(playerid,"Nisi cuffovan (nemas lisice).");

	new id;
	if(sscanf(params,"i",id)) return SendUsageMessage(playerid,"/reportaj [ id igraca ]");
	if( id == IPI ) return greska(playerid,"Pogresan id igraca - probaj ponovno!");
	if( id == playerid ) return greska(playerid,"Ne mozes sam sebe!");
	if( PlayerInfo[id][xAdmin] >= 1 || PlayerInfo[id][xHelper] >= 1 ) return greska(playerid,"Ne mozes prijaviti staff PD-u.");

	SendInfoMessage(playerid,"Prijavio si igraca %s policajcima!",ImeIgraca(id));
	SendInfoMessage(id,"Igrac %s te prijavio policiji za sudjelovanje u zlocinu!",ImeIgraca(playerid));
	PostaviWanted(id,"Sudjelovanje u zlocinu",ImeIgraca(playerid),3);
	return 1;
}
new CJAnims[MAX_PLAYERS];
CMD:cjanim(playerid,params[])
{
	if(PlayerInfo[playerid][xAdmin] < 1) return greska(playerid, "Nisi administrator.");
	if(CJAnims[playerid] == 0)
	{
		SetPlayerPedAnims(playerid, true);
		SendInfoMessage(playerid, "Ukljucili ste sebi CJ animacije.");
		CJAnims[playerid] = 1;
		return 1;
	}
	if(CJAnims[playerid] == 1)
	{
		SetPlayerPedAnims(playerid, false);
		SendInfoMessage(playerid, "Iskljucili ste sebi CJ animacije.");
		CJAnims[playerid] = 0;
		return 1;
	}
	return 1;
}
CMD:uzmipaket(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0,2612.3220, -2171.1863, -0.1676)) return greska(playerid, "Nisi kod mjesta za uzimanje paketa.");
	greska(playerid, "Ne mozete to sada!");
	return 1;
}
CMD:pomozi(playerid,params[])
{
	if(PlayerInfo[playerid][xPP] != 1) return greska(playerid,"Ti nemas paket za prvu pomoc - nabavi ga u bolnici.");
	new id;
	if(sscanf(params,"i",id)) return SendUsageMessage(playerid,"/pomozi [ id igraca ]");
	if( id == IPI ) return greska(playerid,"Nepostojeci id.");
	if( id == playerid ) return greska(playerid,"Ne mozes sam sebi pomoci - nepokretan si!");
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca kojem zelite pomoci." );
	Ranjen[id] = 0;
	KillTimer(DeathAfterInjury[id]);
	ClearAnimations(id);
	SendInfoMessage(id,"Igrac %s ti je pomogao da ustanes!",ImeIgraca(playerid));
	SendInfoMessage(playerid,"Pomogao si %s da ustane!",ImeIgraca(id));
	return true;
}
CMD:itds(playerid,params[])
{
	if( Ranjen[playerid] == 1 ) return greska(playerid,"Ne mozes ovo dok si ranjen!");
	SendInfoMessage(playerid,"Uspjesno si ukljucio td interaktivno upravljanje!");
	SendInfoMessage(playerid,"Da ugasis selekciju interaktivnih tdova >> "col_sanm"ESC");
	SelectTextDraw( playerid, UGBOJA ); 
	return 1;
}
CMD:pitanja(playerid, params[]) {
	SendUsageMessage(playerid, "Morate kucati drugu komandu - '/lp', hvala na razumjevanju!");
	return 1;
}
#if defined mysql_dataon
CMD:mysqlset(playerid,params[])
{
	new mysql_pw = 1000000000 + random(8000000000);
	SendInfoMessage(playerid,"Uspjesno si stavio mysql password na %i",mysql_pw);
	mysql_sys_password(mysql_pw);
	return 1;
}
stock mysql_sys_password(mysql_pw) 
{
	new mysql_database_query[256];
	mysql_format(mysql_data, mysql_database_query, sizeof(mysql_database_query), 
	"UPDATE `info` SET `broj` = %d",
	mysql_pw);
	mysql_tquery(mysql_data, mysql_database_query);
	return (true);
}
CMD:mysqlget(playerid,params[])
{
	SendInfoMessage(playerid,"Trenutni mysql password je %i",ServerInfo[ServerPassword]);
	return 1;
}
#endif
CMD:report(playerid, params[]) {
	SendUsageMessage(playerid, "Morate kucati drugu komandu - '/prijavi', hvala na razumjevanju!");
	return 1;
}
CMD:nepin(playerid,params[])
{
	//SendErrorMessage(playerid,"Ova funkcija je trenutno onemogucena!");
	if(PlayerInfo[playerid][xPin] != 0) return greska(playerid,"Vas racun je vec zasticen pinom!");
	new pin = 1000 + random(8000);
	PlayerInfo[playerid][xPin] = pin;
	SavePlayer(playerid);
	SendInfoMessage(playerid,"Vas racun je uspjesno zasticen od kradje, vas novi pin kod je: %d - zapisite ga negdje!",pin);
	SendInfoMessage(playerid,"Sada kada imate pin vise ga ne mozete ukloniti.");
	Kickovanje(playerid,"Molimo Vas da se ponovno ulogujete sa vasim pinom!");
	return 1;
}
CMD:kanalizacija(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1470.6722,-1031.0518,2045.4248)) return greska(playerid,"Nisi u sefu banke da bi pobjegao od policije!");
	if( GetFactionType( playerid )  == ORG_TIP_PD ) return greska(playerid,"Ne mozes ti ovo ako si PD/SWAT/FBI slicno!");
	Dimi_SetPlayerPos(playerid,1417.6226,-1131.4406,22.2853);
	//SetPlayerVirtualWorld( playerid, 0 );
	SetPlayerInterior( playerid, 0 );
	SendInfoMessage(playerid,"Uspjesno si pobjegao iz sefa banke!");
	return 1;
}
new alo[MAX_PLAYERS];
forward porezib(playerid); public porezib(playerid)
{
	if(alo[playerid] == 1)
	{
		new novac;
		novac = 5000 + random(1000);
		DajIgracuNovac(playerid,-novac);
		SendInfoMessage(playerid,"Oduzeto vam je %i $ zbog poreza za uzimanje hrane i prenociste!",novac);
		alo[playerid] = 0;
		KillTimer(porezib(playerid));
	}
	return 1;
}
CMD:supplies(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1721.9539,-1625.9147,20.2120)) return greska(playerid,"Nisi kod mjesta za uzimanje hrane i pica za beskucnike!");
	if(PlayerInfo[playerid][xAdmin] == 0 && \
		PlayerInfo[playerid][xHelper] == 0 && \
		PlayerInfo[playerid][xClan] == 0 && \
		PlayerInfo[playerid][xLevel] >= 5 && \
		PlayerInfo[playerid][xProperty][0] == -1 &&\
		PlayerInfo[playerid][xProperty][1] == -1 &&\
		PlayerInfo[playerid][xProperty][2] == -1
	)
	{
		alo[playerid] = 1;
		Dimi_SetPlayerHealth(playerid,100);
		Dimi_SetPlayerArmour(playerid,100);
		SendInfoMessage(playerid,"Uspjesno ste uzeli hranu i pice za beskucnike!");
		SetTimerEx("porezib", 5000, true, "i", playerid);
	}
	else return greska(playerid,"Ti nisi beskucnik!");
	return 1;
}
CMD:vskin(playerid,params[])
{
	if(PlayerInfo[ playerid ][ xVIPLevel ] >= 2 || PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		ShowModelSelectionMenu( playerid, skinlist, "Select Skin");
	}
	else return GRESKA(playerid, "Niste ovlasteni za ovu komandu!");
	return 1;
}
CMD:odjecahelp(playerid, params[])
{
	SendClientMessagee(playerid, -1, "Komande: /odjeca /naocare /head /face /izmeni /baci");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pekara(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,pekara_x,pekara_y,pekara_z)) return greska(playerid,"Morate biti u pekari da bi ste kupovali proizvode!");
	ShowPlayerDialog(playerid,dialog_PEKARA, DSL, "Nova Era RolePlay | Pekara","\
		"col_balkanstory"[Cijena: 10$] {ffffff}Burek i jogurt | SPECIJALITET \
		\n"col_balkanstory"[Cijena: 7$] {ffffff}Krofna | PREPORUCUJEMO\
		\n"col_balkanstory"[Cijena: 1$] {ffffff}Kifla | NOVO\
		\n"col_balkanstory"[Cijena: 2$] {ffffff}Hljeb - crni/bjeli | SVJEZE\
		\n"col_balkanstory"[Cijena: 4$] {ffffff}Sirnica | UKUSNO\
		\n"col_balkanstory"[Cijena: 5$] {ffffff}Krompirusa | SNIZENJE\
		\n"col_balkanstory"[Cijena: 3$] {ffffff}Parce pice - osmina | BRZA HRANA\
		\n"col_balkanstory"[Cijena: 6$] {ffffff}Kroasan | SLASNO\
		\n"col_balkanstory"[Cijena: FREE] {ffffff}Burek sa sirom | NAVALITE\
		\n", "Odaberi", "Ugasi");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:flip(playerid,params[])
{
	if(PlayerInfo[ playerid ][ xVIPLevel ] > 1)
	{

		if(PlayerInfo[ playerid ][ xWanted ] != 0) return GRESKA(playerid, "Ne mozete popravljati vozila dok imate trazeni level!");
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA(playerid, "Ne nalazite se u vozilu!");

		new Float:angle;

		GetVehicleZAngle( GetPlayerVehicleID( playerid ), angle); SetVehicleZAngle( GetPlayerVehicleID( playerid ), angle);
		Dimi_RepairVehicle( playerid, GetPlayerVehicleID( playerid ) );
		Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
		vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
		SendInfoMessage( playerid, "Okrenuli ste i popravili vozilo!" );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| FLIP || "SERVERBOJA_AQUA"%s {FFFFFF}je okrenuo i popavio svoje vozilo!", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA(playerid, "Niste ovlasteni za ovu komandu!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:letenjeupali(playerid, params[])
{
	if(Leti[playerid] == true) return GRESKA(playerid, "Vec si ukljucio mod za letenje!");
	if(PlayerInfo[playerid][xAdmin] >= 4)
	{
		Leti[playerid] = true;
		StartFly(playerid);
	}
	else return GRESKA(playerid, "Nisi admin ili nisi admin level 4+");
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////
CMD:letenjeugasi(playerid, params[])
{
	if(Leti[playerid] == false) return GRESKA(playerid, "Niste ukljucili letenje ili ste ga vec ugasili!");
	if(PlayerInfo[playerid][xAdmin] >= 4)
	{
		Leti[playerid] = false;
		StopFly(playerid);
	}
	else return GRESKA(playerid, "Nisi admin ili nisi admin level 4+");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:neonke(playerid, params[]) {
	new izbor = GetPlayerVehicleID(playerid);
	if( GetPlayerVehicleSeat( playerid ) != 0) return GRESKA( playerid, "Morate biti u svom vozilu na vozackom mjestu!");
	if( VehicleInfo[ izbor ][ vNeon ] == 0 ) return GRESKA( playerid, "Na ovom vozilu nije ugradjena neonka!");
	if( Neon[ VehicleInfo[ izbor ][ vID ] ] == 0 ) {
		Neon[ VehicleInfo[ izbor ][ vID ] ] = 1;
		NeonObject1[ VehicleInfo[ izbor ][ vID ] ] = CreateDynamicObject( VehicleInfo[ izbor ][ vNeon ], 0, 0, 1500, 0, 0, 0 );
		NeonObject2[ VehicleInfo[ izbor ][ vID ] ] = CreateDynamicObject( VehicleInfo[ izbor ][ vNeon ], 0, 0, 1500, 0, 0, 0 );
		AttachDynamicObjectToVehicle( NeonObject1[ VehicleInfo[ izbor ][ vID ] ],  VehicleInfo[ izbor ][ vID ] , -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle( NeonObject2[ VehicleInfo[ izbor ][ vID ] ],  VehicleInfo[ izbor ][ vID ] , 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		format( globalstring, sizeof( globalstring ), "* %s pritisce dugme na komodi i postavlja neonke.", ImeIgraca( playerid ) );
		PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
	}
	else if( Neon[ VehicleInfo[ izbor ][ vID ] ] == 1 ) {
		Neon[ VehicleInfo[ izbor ][ vID ] ] = 0;
		DestroyDynamicObject( NeonObject1[ VehicleInfo[ izbor ][ vID ] ] );
		DestroyDynamicObject( NeonObject2[ VehicleInfo[ izbor ][ vID ] ] );
		format( globalstring, sizeof( globalstring ), "* %s pritisce gumb na komodi i uvlaci neonke.", ImeIgraca( playerid ) );
		PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
	}
	return 1;
}
CMD:dodatci(playerid,params[])
{
	if(PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 || PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xLevel ] >= 1)
	{
		ShowPlayerDialog(playerid,dialog_VIPOBJECTS, DSL, "Nova Era RolePlay | Objekti","Papagaj\nBaklja\nPancir\nKurac\nDollar\nPotkovica\nDrvo\nVodokotlic\nTabla\nNilski konj\n-= SKINI OBJEKTE =-", "Uredu", "");
	}
	else return GRESKA(playerid,"Niste ovlasteni za ovu komandu!");
	
	return 1;
}
/*CMD:togchat(playerid,params[]) {
	if(PlayerInfo[playerid][xLevel] < 5 ) return GRESKA(playerid, "Igraci ispod nivoa 5 ne mogu koristiti ovu komandu!");
	ShowPlayerDialog(playerid,dialog_TG, DSL, "( ON/OFF ) || Podesavanje server poruka","1. Server Tips poruke\n2. Radio u vozilima\n3. Izvanredne vijesti\n4. Najave za sportske dogadjaje\n5.Obavjestenja moderacije", "Odaberi", "Izadji");
	return 1;
}
CMD:odjeca(playerid,params[]) {
	if(PlayerInfo[playerid][xLevel] < 3 ) return GRESKA(playerid, "Igraci ispod nivoa 3 ne mogu koristiti ovu komandu!");
	ShowPlayerDialog(playerid,dialog_ODJECA, DSL, "( ON/OFF ) || Podesavanje objekata za odjecu","1. Naocare\n2. Bandana za lice\n3. Kapa, sesir ili marama", "Odaberi", "Izadji");
	return 1;
}
CMD:odjeca(playerid, params[])
{
	if(PlayerInfo[playerid][xPapagaj] == 1) SetPlayerAttachedObject( playerid,5,19078,1,0.320722,-0.067912,-0.165151,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000 );
	
	//NAOCARE
	if( PlayerInfo[ playerid ][ xSungMask ] == 0 ) return GRESKA( playerid, "Ne posedujes naocare." );
	if( !SungOn[ playerid ] )
	{
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL, 
			PlayerInfo[ playerid ][ xSungMask ],2,
			PlayerInfo[ playerid ][ xSungMaskPos ][ 0 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 1 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 2 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 3 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 4 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 5 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 6 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 7 ],
			PlayerInfo[ playerid ][ xSungMaskPos ][ 8 ], 0, 0);

		SungOn[ playerid ] = true;

		if( PlayerInfo[ playerid ][ xSungMaskPos ][ 6 ] > 2.0 || 
			PlayerInfo[ playerid ][ xSungMaskPos ][ 7 ] > 2.0 || 
			PlayerInfo[ playerid ][ xSungMaskPos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija naocara odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL ); EditingBody[ playerid ] = 1;
			return true;
		}

		SendInfoMessage( playerid, "Stavio si naocare na glavu." );
	}
	else if( SungOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL);
		SungOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si naocare sa glave." );
	}

	//BANDANA
	if( PlayerInfo[ playerid ][ xFace ] == 0 ) return GRESKA( playerid, "Ne posedujes maramu(bandanu)." );
	if( !FaceOn[ playerid ] )
	{
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_BANDANA, 
			PlayerInfo[ playerid ][ xFace ],2,
			PlayerInfo[ playerid ][ xFacePos ][ 0 ],
			PlayerInfo[ playerid ][ xFacePos ][ 1 ],
			PlayerInfo[ playerid ][ xFacePos ][ 2 ],
			PlayerInfo[ playerid ][ xFacePos ][ 3 ],
			PlayerInfo[ playerid ][ xFacePos ][ 4 ],
			PlayerInfo[ playerid ][ xFacePos ][ 5 ],
			PlayerInfo[ playerid ][ xFacePos ][ 6 ],
			PlayerInfo[ playerid ][ xFacePos ][ 7 ],
			PlayerInfo[ playerid ][ xFacePos ][ 8 ], 0, 0);

		FaceOn[ playerid ] = true;

		if( PlayerInfo[ playerid ][ xFacePos ][ 6 ] > 2.0 || 
			PlayerInfo[ playerid ][ xFacePos ][ 7 ] > 2.0 || 
			PlayerInfo[ playerid ][ xFacePos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija marame odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_BANDANA ); EditingBody[ playerid ] = 2;
			return true;
		}

		SendInfoMessage( playerid, "Stavio si maramu na glavu." );
	}
	else if( FaceOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BANDANA);
		FaceOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si maramu sa glave." );
	}

	//SESIR
	if( PlayerInfo[ playerid ][ xHead ] == 0 ) return GRESKA( playerid, "Ne posedujes kapu/sesir/maramu(bandanu)." );
	if( !HeadOn[ playerid ] )
	{
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_HEAD ) ) return GRESKA( playerid, "Vec imate objekt na glavi." );
		
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_HEAD, 
			PlayerInfo[ playerid ][ xHead ],2,
			PlayerInfo[ playerid ][ xHeadPos ][ 0 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 1 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 2 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 3 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 4 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 5 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 6 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 7 ],
			PlayerInfo[ playerid ][ xHeadPos ][ 8 ], 0, 0);
		
		HeadOn[ playerid ] = true;
	   
		if( PlayerInfo[ playerid ][ xHeadPos ][ 6 ] > 2.0 || 
			PlayerInfo[ playerid ][ xHeadPos ][ 7 ] > 2.0 || 
			PlayerInfo[ playerid ][ xHeadPos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija kape/sesira/marame odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_HEAD ); EditingBody[ playerid ] = 3;
			return true;
		}

		SendInfoMessage( playerid, "Stavio si kapu/sesir/maramu na glavu." );
	}
	else if( HeadOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_HEAD);
		HeadOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si kapu/sesir/maramu sa glave." );
	}
	SendInfoMessage(playerid,"Uspjesno si stavio/skinuo kapu, sesir i maramu!");
	return 1;
}
*/
////////////////////////////////////////////////////////////////////////////////
CMD:padobran(playerid, params[], help)
{
	SetPlayerAttachedObject( playerid, 8, 371, 1, 0.087999, -0.125000, -0.014000, 3.299999, 86.200019, -5.300003, 1.000000, 1.000000, 1.000000 );
	return 1;
}

CMD:m4naledjima(playerid, params[], help)
{
	SetPlayerAttachedObject( playerid, 0, 356, 1, 0.222186, -0.146085, 0.085346, 0.000000, 151.341934, 0.000000, 1.000000, 1.000000, 1.000000 );
	return 1;
}

CMD:ak47naledjima(playerid, params[], help)
{
	SetPlayerAttachedObject( playerid, 1, 355, 1, 0.253790, -0.141571, 0.094299, 0.000000, 155.042755, 0.000000, 1.000000, 1.000000, 1.000000 );
	return 1;
}

CMD:torba(playerid, params[], help)
{
	SetPlayerAttachedObject( playerid, 0, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210 ); 
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:platiorgkaznu(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,358.2363,166.2383,1008.3837))
	{
		if(PlayerInfo[ playerid ][ xKazneniUgovor ] == 0) return GRESKA( playerid, "Vasa organizacijska kazna je vec istekla, ili - vi uopste niste ni kaznjeni!");
		if( PlayerInfo[ playerid ][ xNovac ] < 30000) return GRESKA( playerid, "Nemate dovoljno novca kod sebe - ne mozete skinuti kaznu!");
		PlayerInfo[ playerid ][ xKazneniUgovor ] = 0;
		DajIgracuNovac(playerid, -30000);
		SendInfoMessage(playerid,"Uspjesno ste skinuli org kaznu sada mozete uci u organizaciju!");
	}
	else return GRESKA( playerid, "Niste na salteru u opstini, ili mozda morate prici blize salteru!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:taxilic(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,358.2364,182.5580,1008.3837))
	{
		if(PlayerInfo[ playerid ][ xTaxLic ] == 1) return GRESKA( playerid, "Vec imate taxi licencu!");
		if( PlayerInfo[ playerid ][ xNovac ] < 20000) return GRESKA( playerid, "Taxi licenca kosta 20000$!");
		PlayerInfo[ playerid ][ xTaxLic ] = 1;
		DajIgracuNovac(playerid, -20000);
		SendInfoMessage(playerid,"Uspjesno ste kupili taxi licencu za 20000$ i sada mozete raditi kao taxista!");
	}
	else return GRESKA( playerid, "Niste na salteru u opstini, ili mozda morate prici blize salteru!");
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:izvadilicnu(playerid, params[])
{

	new brojlicne,JMBGBroj;
	new godina = PlayerInfo[ playerid ][ xGodine ];
	new logg[350];
	if(IsPlayerInRangeOfPoint(playerid,3.0,361.1285,171.3450,1008.3828))
	{
		if(PlayerInfo[ playerid ][ xLicna ] == 1) return GRESKA( playerid, "Vec imate licnu kartu!" );
		PlayerInfo[ playerid ][ xLicna ] = 1;
		brojlicne = randomEx(100000,999000);
		JMBGBroj = randomEx(10000000,99900000);
		PlayerInfo[ playerid ][ xBrojLk ] = brojlicne;
		PlayerInfo[ playerid ][ xJMBG ] = JMBGBroj;

		format(logg,sizeof(logg),"{2DBBFF}Uspjesno ste izvadili licnu kartu\n\n{2DBBFF}Vase ime: "SERVERBOJA_AQUA"%s\n{2DBBFF}Starost: "SERVERBOJA_AQUA"%d\n{2DBBFF}Grad: "SERVERBOJA_AQUA"Beograd\n{2DBBFF}Broj licne: "SERVERBOJA_AQUA"%d\n{2DBBFF}JBMG: "SERVERBOJA_AQUA"%d\n\n",ImeIgraca(playerid),godina,PlayerInfo[ playerid ][ xBrojLk ],PlayerInfo[ playerid ][ xJMBG ]);
		ShowPlayerDialog(playerid,0, DSMSG, "Licna karta info",logg, "Uredu", "");

		SendInfoMessage(playerid,"Izvadili ste licnu kartu!");
	}



	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:izvadipasos(playerid, params[])
{

	new brojlicne;
	new godina = PlayerInfo[ playerid ][ xGodine ];
	new logg[350];
	if(IsPlayerInRangeOfPoint(playerid,3.0,361.3038,175.5968,1008.3846))
	{
		if(PlayerInfo[ playerid ][ xLicna ] != 1) return GRESKA( playerid, "Morate imati licnu kartu!" );
		if(PlayerInfo[ playerid ][ xPasos ] == 1) return GRESKA( playerid, "Vec imate pasos!" );
		PlayerInfo[ playerid ][ xPasos ] = 1;
		brojlicne = randomEx(100000,999000);
		PlayerInfo[ playerid ][ xBrojPasosa ] = brojlicne;
		format(logg,sizeof(logg),"{2DBBFF}Uspjesno ste izvadili pasos\n\n{2DBBFF}Vase ime: "SERVERBOJA_AQUA"%s\n{2DBBFF}Starost: "SERVERBOJA_AQUA"%d\n{2DBBFF}Grad: "SERVERBOJA_AQUA"Beograd\n{2DBBFF}Broj pasosa: "SERVERBOJA_AQUA"%d\n{2DBBFF}JBMG: "SERVERBOJA_AQUA"%d\n\n",ImeIgraca(playerid),godina,PlayerInfo[ playerid ][ xBrojPasosa ],PlayerInfo[ playerid ][ xJMBG ]);
		ShowPlayerDialog(playerid,0, DSMSG, "Putovnica info",logg, "Uredu", "");

		SendInfoMessage(playerid,"Izvadili ste pasos, sada mozete prelaziti granicu!");
	}
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:mokri( playerid, params[] )
{

	new aaa,bb,cc,dd,ee,ff,gg,hh,ii,jj;
	aaa = IsPlayerInRangeOfPoint(playerid,2.0,1124.2561, -892.7399, -48.8337);
	bb = IsPlayerInRangeOfPoint(playerid,2.0,1124.2686, -894.4057, -48.8337);
	cc = IsPlayerInRangeOfPoint(playerid,2.0,1124.2983, -896.0755, -48.8337);
	dd = IsPlayerInRangeOfPoint(playerid,2.0,1124.2996, -897.8399, -48.8337);
	ee = IsPlayerInRangeOfPoint(playerid,2.0,1124.1888, -899.4362, -48.8337);
	//
	ff = IsPlayerInRangeOfPoint(playerid,2.0,1138.7185, -899.4563, -48.8334);
	gg = IsPlayerInRangeOfPoint(playerid,2.0,1138.7185, -897.7903, -48.8334);
	hh = IsPlayerInRangeOfPoint(playerid,2.0,1138.7185, -896.2223, -48.8334);
	ii = IsPlayerInRangeOfPoint(playerid,2.0,1138.7185, -894.5563, -48.8334);
	jj = IsPlayerInRangeOfPoint(playerid,2.0,1138.7185, -892.8903, -48.8334);
	if( PlayerInfo[ playerid ][ xToilet ] < 10 ) return GRESKA( playerid, "Ne mokri vam se!" );
	
	if( aaa || bb || cc || dd || ee || ff || gg || hh || ii || jj )
	{
		SetPlayerSpecialAction(playerid,68);
		SetToilet( playerid, 0 );
	}
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ispraznikamion( playerid, params[] )
{

	if(IsPlayerInRangeOfPoint( playerid, 7.0,2070.6895,-1984.1779,13.5544 ) )
	{
		new Float:vehz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),vehz);
		if( vehz < 208.8311 || vehz > 255.9147) return GRESKA( playerid, "Kamion morate okrenuti zadnjim dijelom da bi mogli istovariti smece!" );
		if( garbagemanInfo[ playerid ][ gmiReadyToDump ] == true )
		{
			if( garbagemanInfo[ playerid ][ gmiDuty ] == true )
			{
				TogglePlayerControllable(playerid,false);
				smeceobject1[playerid] = CreatePlayerObject(playerid,1264,0,0,-1000,0,0,0,100);//smece gore
				zasmeceobject1[playerid] =1;
				smecedoletimer[playerid] = SetTimerEx("smecedolee", 130, true, "i", playerid);
				announcement(playerid,"~w~Istovaranje",5000,1);
			}
		}else return GRESKA( playerid, "Kamion nije napunjen!" );
	}else return GRESKA( playerid, "Niste u bazi komunalca!" );

	return true;
}
////////////DZEPAROS//////////////
stock PokreniMisijudz(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste uzeli opremu za misiju 'Dzeparos'!");
	//SendJobMessage(playerid,"Da lociras mlin u kojem se proizvodi tjesto, kucaj '/mlin'.");
	DzeparosInfo[playerid][xMisija] = 1;
	SetPlayerSkin(playerid,98);
	return 1;
}
	
stock UgasiMisijudz(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste ostavili opremu za misiju 'Dzeparos'!");
	SetPlayerSkin(playerid,PlayerInfo[playerid][xSkin]);
	DzeparosInfo[playerid][xMisija] = 0;
	MozeNaMisiju[playerid] = 0;
	SendInfoMessage(playerid,"Ugasili ste misiju, sljedecu mozete raditi za 2h.");
	return 1;
}
CMD:dzeparosoprema(playerid,params[]) {
	if( MozeNaMisiju[playerid] == 0 ) return greska(playerid,"Misije mozete raditi svakih 2 sata kada istekne timer.");
	if( !IsPlayerInRangeOfPoint(playerid,3.0,1126.7860,-1489.7051,22.7690)) return GRESKA(playerid,"Nisi na mjestu za uzimanje/ostavljanje opreme za ovu misiju!");
	//if( AdminVozilo[ playerid ] != -1 ) return GRESKA(playerid,"Ti imas stvoreno vozilo! Kucaj /veh ili /uzmivozilo za ostavljanje/brisanje vozila!");
	if( PlayerInfo[playerid][xPosaoMisija] == 1 ) return greska(playerid,"Ti si na poslovnoj misiji 'Grobar'.");
	if(PekarInfo[playerid][xMisija] == 1) return greska(playerid,"Ti si na poslovnoj misiji 'Pekar'.");
	if( DzeparosInfo[playerid][xMisija] != 1 ) return PokreniMisijudz(playerid);
	if( DzeparosInfo[playerid][xMisija] == 1 ) return UgasiMisijudz(playerid);
	return 1;
}
CMD:pokradinovcanik(playerid,params[])
{
	if( DzeparosInfo[playerid][xMisija] != 1 ) return greska(playerid, "Ti nisi dzeparos te nisi sposoban nekome ukrasti novcanik!");
	
	new id;
	
	if(sscanf(params,"i",id)) return SendUsageMessage(playerid,"/pokradinovcanik [ id igraca ]");

	if( id == IPI ) return greska(playerid, "Igrac id %d nije online na serveru!", id);
	if( id == playerid ) return greska(playerid,"Ne mozes sam sebe!");

	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca kojem zelite pokrasti novcanik!" );
	
	if( PlayerInfo[ id ][ xNovac ] < 2000 ) return greska(playerid,"Igrac nema minimalno novaca kod sebe(minimalno 2000$)!");
	new pare = random(1999);
	SendInfoMessage(id,"Igrac %s vas je pokrao i uzeo vam $%d novca!",ImeIgraca(playerid),pare);
	SendJobMessage(playerid,"Ukrao si $%d od igraca %s",pare,ImeIgraca(id));

	DajIgracuNovac(id,-pare);
	DajIgracuNovac(playerid,pare);
	return 1;
}
/////////////PEKAAR///////////////
stock PokreniMisijupp(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste uzeli opremu za misiju 'Pekar'!");
	SendJobMessage(playerid,"Da lociras mlin u kojem se proizvodi tjesto, kucaj '/mlin'.");
	PekarInfo[playerid][xMisija] = 1;
	SetPlayerSkin(playerid,177);
	return 1;
}
	
stock UgasiMisijupp(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste ostavili opremu za misiju 'Pekar'!");
	SetPlayerSkin(playerid,PlayerInfo[playerid][xSkin]);
	PekarInfo[playerid][xMisija] = 0;
	MozeNaMisiju[playerid] = 0;
	SendInfoMessage(playerid,"Ugasili ste misiju, sljedecu mozete raditi za 2h.");
	return 1;
}
CMD:pekaroprema(playerid,params[]) {
	if( MozeNaMisiju[playerid] == 0 ) return greska(playerid,"Misije mozete raditi svakih 2 sata kada istekne timer.");
	if( !IsPlayerInRangeOfPoint(playerid,3.0,pekara_ulaz_x,pekara_ulaz_y,pekara_ulaz_z)) return GRESKA(playerid,"Nisi na mjestu za uzimanje/ostavljanje opreme za ovu misiju!");
	//if( AdminVozilo[ playerid ] != -1 ) return GRESKA(playerid,"Ti imas stvoreno vozilo! Kucaj /veh ili /uzmivozilo za ostavljanje/brisanje vozila!");
	if( PlayerInfo[playerid][xPosaoMisija] == 1 ) return greska(playerid,"Ti si na poslovnoj misiji 'Grobar'.");
   // if(PekarInfo[playerid][xMisija] == 1) return greska(playerid,"Ti si na poslovnoj misiji 'Pekar'.");
	if( DzeparosInfo[playerid][xMisija] == 1 ) return greska(playerid,"Ti si na poslovnoj misiji 'Dzeparos'.");
	if( PekarInfo[playerid][xMisija] != 1 ) return PokreniMisijupp(playerid);
	if( PekarInfo[playerid][xMisija] == 1 ) return UgasiMisijupp(playerid);
	return 1;
}
CMD:mlin(playerid,params[])
{
	if( PekarInfo[playerid][xMisija] != 1 ) return greska(playerid,"Nisi na misiji 'Pekar'.");
	SendJobMessage(playerid,"Uspjesno ste locirali mlin - idite do istog po tjesto i sastojke!");
	Dimi_SetPlayerCheckpoint( playerid, pekara_mlin_x,pekara_mlin_y,pekara_mlin_z, 5.0 );
	return 1;
}
CMD:preuzmitjesto(playerid,params[])
{
	if( !IsPlayerInRangeOfPoint(playerid,3.0,pekara_mlin_x,pekara_mlin_y,pekara_mlin_z)) return GRESKA(playerid,"Nisi na mjestu za uzimanje/ostavljanje opreme za ovu misiju!");
	if( PekarInfo[playerid][xMisija] != 1 ) return greska(playerid,"Nisi na misiji 'Pekar'.");
	if( PekarInfo[playerid][xPreuzeoTjesto] == 1 ) return greska(playerid,"Vec si preuzeo tjesto za dostavu!");
	PekarInfo[playerid][xPreuzeoTjesto] = 1;
	SendInfoMessage(playerid,"Uspjesno si preuzeo tjesto i za isto platio nesto novca!");
	SendJobMessage(playerid,"Sada mozes dostaviti tjesto natrag u pekaru i preuzeti platu.");
	DajIgracuNovac(playerid,-100);
	Dimi_SetPlayerCheckpoint( playerid, pekara_dostava_x,pekara_dostava_y,pekara_dostava_z, 5.0 );
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 19639, 1, 0.10, 0.46, -0.01, 0.0, 89.0, 85.0, 1.04, 1.00, 1.00 );
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
	return 1;
}
CMD:dostavitjesto(playerid,params[])
{
	if( !IsPlayerInRangeOfPoint(playerid,3.0,pekara_dostava_x,pekara_dostava_y,pekara_dostava_z)) return GRESKA(playerid,"Nisi na mjestu za uzimanje/ostavljanje opreme za ovu misiju!");
	if( PekarInfo[playerid][xMisija] != 1 ) return greska(playerid,"Nisi na misiji 'Pekar'.");
	if( PekarInfo[playerid][xPreuzeoTjesto] != 1 ) return greska(playerid,"Nemas vrecu tjesta koju bi mogao da dostavis!");
	PekarInfo[playerid][xPreuzeoTjesto] = 0;
	new plata = 1000 + random(2000);
	DajIgracuNovac(playerid,plata);
	SendJobMessage(playerid,"Zaradio si %d $ kao platu za odradjen posao!",plata);
	SendClientMessagee(playerid,-1,"Mozete ostaviti opremu, ili opet raditi - idite po novu vrecu tjesta!");
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	ClearAnimations( playerid );
	return 1;
}
/////////////GROBAR///////////////
forward AutoRespawnGrobarVozila(playerid);
public AutoRespawnGrobarVozila(playerid) {
	if( grobar_car[playerid] != -1 )
	{
		SendInfoMessage( playerid, "Proslo je 10 minuta od kako ste uzeli vozilo za poslovnu misiju te je vozilo vraceno!");
		Dimi_DestroyVehicle( grobar_car[ playerid ] );
		Delete3DTextLabel( grobar_car_label[playerid] );
		DestroyDynamic3DTextLabel( grobar_car_label[playerid] );

		grobar_car[ playerid ] = -1;
		ServerInfo[ PreuzetoGrobarVoziilo ] = false;
		KillTimer(AutoRespawnGrobarVozila(playerid));
	}
	return 1;
}
stock PokreniMisiju(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste uzeli opremu za misiju 'Grobar'!");
	PlayerInfo[playerid][xPosaoMisija] = 1;
	SetPlayerSkin(playerid,68);
	return 1;
}
	
stock UgasiMisiju(playerid)
{
	SendInfoMessage(playerid,"Uspjesno ste ostavili opremu za misiju 'Grobar'!");
	SetPlayerSkin(playerid,PlayerInfo[playerid][xSkin]);
	PlayerInfo[playerid][xPosaoMisija] = 0;
	MozeNaMisiju[playerid] = 0;
	SendInfoMessage(playerid,"Ugasili ste misiju, sljedecu mozete raditi za 2h.");
	return 1;
}
//940.6663,-1085.2749,24.2962
CMD:misijaoprema(playerid,params[]) {
	if( MozeNaMisiju[playerid] == 0 ) return greska(playerid,"Misije mozete raditi svakih 2 sata kada istekne timer.");
	if( !IsPlayerInRangeOfPoint(playerid,3.0,940.6663,-1085.2749,24.2962)) return GRESKA(playerid,"Nisi na mjestu za uzimanje/ostavljanje opreme za ovu misiju!");
	if( AdminVozilo[ playerid ] != -1 ) return GRESKA(playerid,"Ti imas stvoreno vozilo! Kucaj /veh ili /uzmivozilo za ostavljanje/brisanje vozila!");
	if(PekarInfo[playerid][xMisija] == 1) return greska(playerid,"Ti si na poslovnoj misiji 'Pekar'.");
	if( DzeparosInfo[playerid][xMisija] == 1 ) return greska(playerid,"Ti si na poslovnoj misiji 'Dzeparos'.");
	if( PlayerInfo[playerid][xPosaoMisija] != 1 ) return PokreniMisiju(playerid);
	if( PlayerInfo[playerid][xPosaoMisija] == 1 ) return UgasiMisiju(playerid);
	return 1;
}

CMD:ddt(playerid,params[]) {
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new deadbody_reset_announcement_str[300];
	
	if( GetNearestDeadBody( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu mrtvog tijela da bi ga obrisao!" );
	
	new i = GetNearestDeadBody( playerid );

	if( IsValidDynamicObject( bodyInfo[ i ][ bodyObjID ] ) )
		DestroyDynamicObject( bodyInfo[ i ][ bodyObjID ] );
	if( IsValidDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] ) )
	{
		DestroyDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] );
		//DestroyDynamic3DTextLabel(VehicleInfo[ i ][ v3DText ]);
	}

	bodyInfo[ i ][ bodyObjPos ][ 0 ] = 0;
	bodyInfo[ i ][ bodyObjPos ][ 1 ] = 0;
	bodyInfo[ i ][ bodyObjPos ][ 2 ] = 0;
	new fstring[ 64 ];
	format( fstring, sizeof( fstring ), BODY_FILE, i );
	if( fexist( fstring ) ) { fremove( fstring ); }

	SendInfoMessage( playerid, "Obrisao si mrtvo telo. ID = %d.", i );
	
	format(deadbody_reset_announcement_str,sizeof(deadbody_reset_announcement_str),""col_yellow"[ OBAVJESTENJE ]:{ffffff} Admin %s je uspjesno ocistio mrtvo tijelo sa ID-om broj: %i",ImeIgraca(playerid),i);
	SendInfoMessage(playerid,"Obrisali ste to mrtvo tijelo - igraci servera su dobili obavjestenje!");
	SendInfoMessage(playerid,"Mozete kucati '/ddb' da ocistite folder u databzi za mrtva tijela!");

	SendClientMessageToAll(-1,deadbody_reset_announcement_str);
	
	return 1;
}

CMD:ddb(playerid,params[]) 
{
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new deadbody_reset_announcement_str[300];
	
	new dead_body_database;

	for( dead_body_database = 1; dead_body_database < MAX_BODIES; dead_body_database ++ )
	{
		new i = dead_body_database;

		if( IsValidDynamicObject( bodyInfo[ dead_body_database ][ bodyObjID ] ) )
		{
			DestroyDynamicObject( bodyInfo[ dead_body_database ][ bodyObjID ] );
		}

		if( IsValidDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] ) )
		{
			DestroyDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] );
		}

		bodyInfo[ i ][ bodyObjPos ][ 0 ] = 0;
		bodyInfo[ i ][ bodyObjPos ][ 1 ] = 0;
		bodyInfo[ i ][ bodyObjPos ][ 2 ] = 0;

		new fstring[ 64 ];

		format( fstring, sizeof( fstring ), BODY_FILE, i );

		if( fexist( fstring ) ) 
		{ 
			fremove( fstring ); 
		}
	}

	format(deadbody_reset_announcement_str,sizeof(deadbody_reset_announcement_str),""col_balkanstory"[ SERVER ]:{ffffff} Admin %s je uspjesno ocistio sva mrtva tijela na serveru!",ImeIgraca(playerid));
	SendInfoMessage(playerid,"Obrisali ste sva mrtva tijela - igraci servera su dobili obavjestenje!");

	SendClientMessageToAll(-1,deadbody_reset_announcement_str);
	
	return 1;
}

CMD:uzmivozilo(playerid,params[]) {
	if( PlayerInfo[playerid][xPosaoMisija] != 1 ) return GRESKA(playerid,"Nisi na misiji 'Grobar'!");
	if(PlayerInfo[playerid][xUzeoMrtvoTelo] == 1 ) return GRESKA(playerid,"Nisi ostavio mrtvo tijelo - prvo zavrsi misiju da ostavis vozilo!");
	if( !IsPlayerInRangeOfPoint(playerid,3.0,930.6531,-1120.0939,24.0440)) return GRESKA(playerid,"Nisi na mjestu za uzimanje vozila za misiju!");
	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Trenutno, nije moguce kreirati vozilo - dostignut je limit kreiranih vozila na serveru!");
	if( grobar_car[ playerid ] == -1 )
	{
		if( ServerInfo[ PreuzetoGrobarVoziilo ] == true ) return GRESKA(playerid,"Neko je vec preuzeo vozilo, molimo Vas - sacekajte malo i pokusajte kasnije!");
		new idv = 442;
		new b1 = 0;
		new b2 = 0;

		new grobar_respawn = 10;

		new Float:Poz[ 3 ];
		GetPlayerPos( playerid, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] );
		grobar_car[ playerid ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, idv, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ], 0.0, b1,b2, -1 );
		LinkVehicleToInterior( grobar_car[ playerid ], GetPlayerInterior( playerid ) );
		SetVehicleVirtualWorld( grobar_car[ playerid ], GetPlayerVirtualWorld( playerid ) );
		vCanDrive[ grobar_car[ playerid ] ] = 1;
		Fuel[ grobar_car[ playerid ] ] = 100;
		Dimi_PutPlayerInVehicle( playerid, grobar_car[ playerid ], 0 );
		ResetVehicleStatistics( grobar_car[ playerid ] );
		new engine, lights, alarm, doors, bonnet, boot, objective;

		GetVehicleParamsEx( grobar_car[ playerid ], engine, lights, alarm, doors, bonnet, boot, objective );
		SetVehicleParamsEx( grobar_car[ playerid ], 1, 0, alarm, 0, 0, 0, objective );
		SendInfoMessage( playerid, "Vozilo je stvoreno, ako zelite da ga ostavite - ponovo kucajte istu komandu!");
		SendInfoMessage(playerid,"Vozilo ce nestati automatski za deset minuta!");
		ServerInfo[ PreuzetoGrobarVoziilo ] = true;
		SetTimerEx( "AutoRespawnGrobarVozila", 600000, true, "i", playerid );

		new grobar_label_text[300];
		format(grobar_label_text,sizeof(grobar_label_text),""col_balkanstory"[ VOZILO ZA MISIJU ]\n\n{ffffff}Vozilo preuzeo igrac: %s\nVrijeme do respawna: %d minuta\n\nMisija vozila: Grobar",ImeIgraca(playerid),grobar_respawn);
		
		grobar_car_label[playerid] = CreateDynamic3DTextLabel(grobar_label_text,-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, grobar_car[playerid], 0);
	}
	else if( grobar_car[ playerid ] != -1 )
	{
		SendInfoMessage( playerid, "Unistili ste poslovno vozilo, morate ga opet preuzeti - ako ne, neko ce ga neko drugi uzeti za posao!");
		Dimi_DestroyVehicle( grobar_car[ playerid ] );
		grobar_car[ playerid ] = -1;
		ServerInfo[ PreuzetoGrobarVoziilo ] = false;
		KillTimer(AutoRespawnGrobarVozila(playerid));
		Delete3DTextLabel( grobar_car_label[playerid] );

		DestroyDynamic3DTextLabel( grobar_car_label[playerid] );
	}
	return 1;
}
CMD:pokupitelo(playerid,params[]) {
	//442
	if( PlayerInfo[playerid][xPosaoMisija] != 1 ) return GRESKA(playerid,"Vi ovo ne mozete koristiti - niste pokrenuli poslovnu misiju!");
	if(PlayerInfo[playerid][xUzeoMrtvoTelo] == 1 ) return GRESKA(playerid,"Vec si pokupio tijelo, prvo moras da ostavis ovo koje ti je u vozilu!");
	if( IsPlayerInAnyVehicle( playerid ) ) {
		if( grobar_car[ playerid ] == -1 ) return GRESKA(playerid,"Niste uzeli vozilo za ovaj posao - ne mozete ovako kupiti tijela!");
		new carid = GetPlayerVehicleID( playerid );
		if( !GrobarVozilo( GetVehicleModel( carid ) ) ) return GRESKA( playerid, "Ne mozete staviti tijelo u ovo vozilo - jer u njemu nema prostora!"), SendInfoMessage(playerid,"Pokusajte sa nekim duzim vozilom kao sto su kombiji i karavani! (/uzmivozilo)");
		//new deadbody_reset_announcement_str[300];

		if( GetNearestDeadBody( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu mrtvog tijela da bi ga pokupio u vozilo!" );

		new i = GetNearestDeadBody( playerid );

		if( IsValidDynamicObject( bodyInfo[ i ][ bodyObjID ] ) )
			DestroyDynamicObject( bodyInfo[ i ][ bodyObjID ] );
		if( IsValidDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] ) )
		{
			DestroyDynamic3DTextLabel( bodyInfo[ i ][ bodyText3D ] );
		}

		bodyInfo[ i ][ bodyObjPos ][ 0 ] = 0;
		bodyInfo[ i ][ bodyObjPos ][ 1 ] = 0;
		bodyInfo[ i ][ bodyObjPos ][ 2 ] = 0;
		new fstring[ 64 ];
		format( fstring, sizeof( fstring ), BODY_FILE, i );
		if( fexist( fstring ) ) {
			fremove( fstring );
		}

		//SendInfoMessage( playerid, "Obrisao si mrtvo telo. ID = %d.", i );

		//format(deadbody_reset_announcement_str,sizeof(deadbody_reset_announcement_str),""col_yellow"[ OBAVJESTENJE ]:{ffffff} Admin %s je uspjesno ocistio mrtvo tijelo sa ID-om broj: %i",ImeIgraca(playerid),i);
		SendInfoMessage(playerid,"Uspjesno ste pokupili telo, odvezite ga na groblje da dobijete novac!");
		PlayerInfo[playerid][xUzeoMrtvoTelo] = 1;
		//SendClientMessageToAll(-1,deadbody_reset_announcement_str);
	}
	else SendErrorMessage( playerid, "Niste u vozilu!");
	return 1;
}
//ostavljanje 898.8851,-1068.6992,24.4808
CMD:ostavitelo(playerid,params[])
{
	new carid = GetPlayerVehicleID( playerid );
	if(!IsPlayerInRangeOfPoint(playerid,3.0,898.8851,-1068.6992,24.4808)) return GRESKA(playerid,"Niste na mjestu za ostavljanje tela - ne mozete upravljati ovom komandom!");
	if( !GrobarVozilo( GetVehicleModel( carid ) ) ) return GRESKA( playerid, "Niste u potrebnom vozilu za posao!");
	if(PlayerInfo[playerid][xUzeoMrtvoTelo] != 1 ) return GRESKA(playerid,"Nisi pokupio mrtvo tijelo - ne mozes ga ostaviti dok ga ne pokupis!");
	SendJobMessage(playerid,"Uspjesno si ostavio tijelo na mjesto, kasnije ce biti sahranjeno - misija za posao je zavrsena!");
	new plata = 1000 + random(4000);
	DajIgracuNovac(playerid,plata);
	SendJobMessage(playerid,"Zaradio si %d $ kao platu za odradjen posao!",plata);
	SendClientMessagee(playerid,-1,"Mozete ostaviti opremu i vozilo, ili opet raditi - idite po gradu i trazite tijela za dostavu!");
	PlayerInfo[playerid][xUzeoMrtvoTelo] = 0;
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
////////////////////SMS IGRA DOOSTAVA VOZILA IDE GAS BREEEE///////////////////////

forward AutoBrisanje(playerid); public AutoBrisanje(playerid) {
	if( AdminVozilo[ playerid ] != -1 && PlayerInfo[playerid][xPokupioAuto] == 1 )
	{
		SendInfoMessage( playerid, "Isteklo Vam je vrijeme za dostavu vozila u fabriku automobila!");
		SendInfoMessage(playerid,"RP: Poginuli ste u saobracajnoj nesreci!");
		SetPlayerHealth(playerid,0);
		Dimi_DestroyVehicle( AdminVozilo[ playerid ] );
		AdminVozilo[ playerid ] = -1;
		ServerInfo[ VoziloDostavljeno ] = false;
		for(new i; i < MAX_PLAYERS; i++) {
			notfi(i,"Dojava","Covjek koji je preuzeo vozilo je poginuo u saobracaju!");
			notfi(i,"Dojava","Vozilo ce biti ponovno dostavljeno na tajnu lokaciju!");
		}
	}
	return 1;
}
/*

if( PlayerInfo[playerid][xPokupioAuto] == 1 ) {
	announcement( playerid, "~w~Misija ~y~'Dostava Vozila' ~w~neuspjesna!", 3000, 5 );
	SendInfoMessage(playerid,"Misija neuspjesna - oduzeto Vam je 100$.");
	DajIgracuNovac(playerid,-100);
	Dimi_DestroyVehicle( AdminVozilo[ playerid ] );
	AdminVozilo[ playerid ] = -1;
	ServerInfo[ VoziloDostavljeno ] = false;
	for(new i; i < MAX_PLAYERS; i++) {
		notfi(i,"Dojava","Covjek koji je preuzeo vozilo je poginuo u saobracaju!");
		notfi(i,"Dojava","Vozilo ce biti ponovno dostavljeno na tajnu lokaciju!");
	}
}
*/
CMD:pokupivozilo(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,5.0,1723.1270,-1118.6689,24.0859)) return greska(playerid,"Niste na lokaciji na kojoj se vozilo dostavlja!");
	
	if( PlayerInfo[playerid][xPokupioAuto] == 1 ) return SendErrorMessage(playerid,"Vec ste pokupili vozilo za dostavu u fabriku!");
	if(ServerInfo[VoziloDostavljeno] == false) return SendErrorMessage(playerid,"Vec je neko pokupio vozilo - sacekajte sljedecu dostavu!");

	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Trenutno, nije moguce kreirati vozilo - dostignut je limit kreiranih vozila na serveru!");

	ServerInfo[VoziloDostavljeno] = false;
	PlayerInfo[playerid][xPokupioAuto] = 1;
	
	new idv = 541;
	new b1 = 0;
	new b2 = 0;

	new player_interior_id = GetPlayerInterior( playerid );
	new player_virtual_world_id = GetPlayerVirtualWorld( playerid );

	new Float:Poz[ 3 ];
	GetPlayerPos( playerid, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] );
	AdminVozilo[ playerid ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, idv, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ], 0.0, b1,b2, -1 );
	LinkVehicleToInterior( AdminVozilo[ playerid ], player_interior_id );
	SetVehicleVirtualWorld( AdminVozilo[ playerid ], player_virtual_world_id );
	vCanDrive[ AdminVozilo[ playerid ] ] = 1;
	Fuel[ AdminVozilo[ playerid ] ] = 100;
	Dimi_PutPlayerInVehicle( playerid, AdminVozilo[ playerid ], 0 );
	ResetVehicleStatistics( AdminVozilo[ playerid ] );
	
	new engine, lights, alarm, doors, bonnet, boot, objective;

	GetVehicleParamsEx( AdminVozilo[ playerid ], engine, lights, alarm, doors, bonnet, boot, objective );
	SetVehicleParamsEx( AdminVozilo[ playerid ], 1, 0, alarm, 0, 0, 0, objective );
	SendInfoMessage( playerid, "Vozilo je stvoreno, morate ga dostaviti u fabriku za automobile!");
	SendInfoMessage(playerid,"Vozilo ce nestati automatski za pet minuta!");
	SetTimerEx( "AutoBrisanje", 300000, false, "i", playerid );

	new dostava_vozila_string[300];
	format(dostava_vozila_string,sizeof(dostava_vozila_string),"%s je preuzeo vozilo za preradu!",ImeIgraca(playerid));
	for(new i; i < MAX_PLAYERS; i++) {
		notfi(i,"Dojava",dostava_vozila_string);
	}
	return 1;
}
CMD:zavrsidostavu(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,10.0,1315.6945,-1241.9543,13.5469)) return greska(playerid,"Niste kod garaze za dostavu vozila u fabriku automobila!");
	if( IsPlayerInAnyVehicle( playerid ) )
	{
		if( PlayerInfo[playerid][xPokupioAuto] != 1 ) return SendErrorMessage(playerid,"Nisi u pravom vozilu koje ti treba za dostavu!");
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca vozila da bi odobrili prodaju!" );

		new plata_odradjenog_posla = random(10000) + 5000;

		SendInfoMessage(playerid,"Dostavili ste vozilo u fabriku za preradu automobila!");
		SendJobMessage(playerid,"Za odradjen posao, nagradjeni ste sa $%d.", plata_odradjenog_posla);
		
		DajIgracuNovac(playerid,plata_odradjenog_posla);
		
		notfi(playerid,"Radnik","Pozdrav. Hvala Vam na saradnji i dostavi automobila!");

		Dimi_DestroyVehicle( AdminVozilo[ playerid ] );
		AdminVozilo[ playerid ] = -1;
		ServerInfo[ VoziloDostavljeno ] = false;
		
		for(new i; i < MAX_PLAYERS; i++) {
			notfi(i,"Dojava","Vozilo je dostavljeno u fabriku, bez brige - sljedece dolazi uskoro!");
		}
		KillTimer(AutoBrisanje(playerid));
	}
	else return notfi(playerid,"Radnik","Zao nam je, ali - vi niste u nikakvom vozilu!"), greska(playerid,"Niste u nikakvom vozilu - morate biti u vozilu!");
	return 1;
}
////////////////////////////KRAJ SMS IGRA CODE////////////////////////////////////
CMD:ispraznicistilicu( playerid, params[] )
{

	if(IsPlayerInRangeOfPoint( playerid, 4.0,2073.8306,-1994.5646,13.6748 ) )
	{

		if( CistacPosao[ playerid ] == false ) return GRESKA( playerid, "Niste zapoceli posao cistaca.");
		if( IsPlayerInAnyVehicle( playerid ) )
		{
			if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mestu vozaca." );

			#if NERP_ZIMSKI_MOD  == 1
			if( TipVozila[ GetPlayerVehicleID( playerid ) ] == POSLOVNO_VOZILO && GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 455 && PosaoVozila[ GetPlayerVehicleID( playerid ) ] == POSAO_KOMUNALAC )
			{
				if(cistackilometri[ playerid ] == 0) return GRESKA( playerid, "Niste presli dovoljno kilometara da bi istovarili snijeg (min 1km)");
				smecedoletimer[playerid] = SetTimerEx("istovarsnijega", 6000, false, "i", playerid);
				announcement(playerid,"~w~Snijeg se istovara....",5000,1);
				TogglePlayerControllable(playerid,false);
				Dimi_DisablePlayerCheckpoint( playerid );
				CheckpointStatus[ playerid ] = 0;
				Dimi_KillTimer( CistacTimer[ playerid ] );
				CKilometriTDControl( playerid, false );
				
			}
			else return GRESKA( playerid, "Morate biti u vozilu cistaca snega." );
			#else
			if( GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 574 )
			{
				if(cistackilometri[ playerid ] == 0) return GRESKA( playerid, "Niste presli dovoljno kilometara da bi istovarili smece (min 1km)");
				smecedoletimer[playerid] = SetTimerEx("istovarcistilice", 6000, false, "i", playerid);
				announcement(playerid,"~w~Istovar smeca....",5000,1);
				TogglePlayerControllable(playerid,false);
				Dimi_DisablePlayerCheckpoint( playerid );
				CheckpointStatus[ playerid ] = 0;
				Dimi_KillTimer( CistacTimer[ playerid ] );
				CKilometriTDControl( playerid, false );
				DestroyDynamicObject(cistacvodica[0][playerid]);
				DestroyDynamicObject(cistacvodica[1][playerid]);
			}
			else return GRESKA( playerid, "Morate biti u vozilu cistaca ulica." );
			#endif

		}
		else return GRESKA( playerid, "Morate biti u vozilu." );

	}
	else return GRESKA( playerid, "Niste u bazi komunalca!" );

	return true;
}
///////////////////////////////////RENT///////////////////////////////////////////
CMD:delrent(playerid,params[]) 
{
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if(GetNearestRent(playerid) == -1 ) return greska(playerid,"Morate biti blizu renta da bi obrisali rent sa servera!");
	
	new dead_body_database = GetNearestRent(playerid);

	new i = dead_body_database;

	if( IsValidDynamicPickup( rentPickup[ dead_body_database ] ) )
	{
		DestroyDynamicPickup( rentPickup[ dead_body_database ] );
	}

	if( IsValidDynamic3DTextLabel( rentInfo[ i ][ rentText3D ] ) )
	{
		DestroyDynamic3DTextLabel( rentInfo[ i ][ rentText3D ] );
	}

	rentInfo[ i ][ rentObjPos ][ 0 ] = 0;
	rentInfo[ i ][ rentObjPos ][ 1 ] = 0;
	rentInfo[ i ][ rentObjPos ][ 2 ] = 0;

	new fstring[ 64 ];

	format( fstring, sizeof( fstring ), RENT_FILE, i );

	if( fexist( fstring ) ) 
	{ 
		fremove( fstring ); 
	}

	//format(deadbody_reset_announcement_str,sizeof(deadbody_reset_announcement_str),""col_yelow"[ A | ULICA ]:{ffffff} Admin %s je uspjesno obrisao ulicu sa ID-om: %d",ImeIgraca(playerid),i);
	SendInfoMessage(playerid,"Obrisali ste rent, id renta je bio "col_balkanstory"%i{ffffff} - taj slot je sada slobodan.",i);

	//SendClientMessageToAll(-1,deadbody_reset_announcement_str);
	
	return 1;
}
CMD:crent(playerid,params[])
{
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	
	for( new i = 1; i < MAX_RENTS; i++ ) {
		new Float:angle;
		new fileauta[ 40 ];

		format(fileauta, sizeof( fileauta ), RENT_FILE, i);
		if( !fexist( fileauta ) )
		{
			new Float:x, Float:y, Float:z;
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos( playerid, x, y, z);
			
			rentInfo[ i ][ rentObjPos ][ 0 ] = x;
			rentInfo[ i ][ rentObjPos ][ 1 ] = y;
			rentInfo[ i ][ rentObjPos ][ 2 ] = z;
			
			new st = i;
			
			new rent_id_pickup_text[300];
			format(rent_id_pickup_text,sizeof(rent_id_pickup_text),""col_balkanstory"[ BRZI RENT ]{ffffff}\n\nDobrodosli na brzi rent!\nOvde mozete spawnovati rent vozilo, kucajte:\n\n"col_balkanstory"[ /spawnrentvozilo ]");
			rentInfo[st][rentText3D] = CreateDynamic3DTextLabel( rent_id_pickup_text, -1, rentInfo[st][rentObjPos][0],rentInfo[st][rentObjPos][1],rentInfo[st][rentObjPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1 );
			rentPickup[ st ] = CreateDynamicPickup(RENT_PICKUPID,1, rentInfo[st][rentObjPos][0],rentInfo[st][rentObjPos][1],rentInfo[st][rentObjPos][2] );
		
			SacuvajRent( i );
			SendInfoMessage(playerid,"Uspjesno ste kreirali rent na slotu (id) "col_balkanstory"%i{ffffff} - rent uspesno sacuvan.", st);
			break;
		}
	}
	return 1;
}
/*
CMD:spawnrentvozilo(playerid,params[])
{
	if(GetNearestRent(playerid) == -1) return greska(playerid,"Vi niste blizu pickupa za rent spawn.");
	SendInfoMessage(playerid,"Ova funkcija je trenutno onemogucena!");
	return 1;
}*/
//////////////////////////////////////////////////////////////////////////////////
CMD:delulicu(playerid,params[]) 
{
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if(GetNearestStreet(playerid) == -1 ) return greska(playerid,"Morate biti blizu ulice da bi obrisali ulicu sa servera!"); 
	new deadbody_reset_announcement_str[300];
	
	new dead_body_database = GetNearestStreet(playerid);

	new i = dead_body_database;

	if( IsValidDynamicPickup( streetPickup[ dead_body_database ] ) )
	{
		DestroyDynamicPickup( streetPickup[ dead_body_database ] );
	}

	if( IsValidDynamic3DTextLabel( streetInfo[ i ][ streetText3D ] ) )
	{
		DestroyDynamic3DTextLabel( streetInfo[ i ][ streetText3D ] );
	}

	streetInfo[ i ][ streetObjPos ][ 0 ] = 0;
	streetInfo[ i ][ streetObjPos ][ 1 ] = 0;
	streetInfo[ i ][ streetObjPos ][ 2 ] = 0;

	new fstring[ 64 ];

	format( fstring, sizeof( fstring ), STREET_FILE, i );

	if( fexist( fstring ) ) 
	{ 
		fremove( fstring ); 
	}

	format(deadbody_reset_announcement_str,sizeof(deadbody_reset_announcement_str),""col_yelow"[ A | ULICA ]:{ffffff} Admin %s je uspjesno obrisao ulicu sa ID-om: %d",ImeIgraca(playerid),i);
	SendInfoMessage(playerid,"Obrisali ste ulicu - igraci servera su dobili obavjestenje!");

	SendClientMessageToAll(-1,deadbody_reset_announcement_str);
	
	return 1;
}
CMD:culicu(playerid,params[])
{
	for( new i = 1; i < MAX_STREETS; i++ ) {
		new Float:angle;
		new fileauta[ 40 ];

		format(fileauta, sizeof( fileauta ), STREET_FILE, i);
		if( !fexist( fileauta ) )
		{
			new Float:x, Float:y, Float:z;
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos( playerid, x, y, z);
			
			streetInfo[ i ][ streetObjPos ][ 0 ] = x;
			streetInfo[ i ][ streetObjPos ][ 1 ] = y;
			streetInfo[ i ][ streetObjPos ][ 2 ] = z;
			
			new st = i;
			
			new street_id_pickup_text[300];
			format(street_id_pickup_text,sizeof(street_id_pickup_text),""col_balkanstory"[ ULICA ]\n\n{ffffff}Naziv ulice:"col_balkanstory" %s\n{ffffff}Tip ulice: Novonastala ulica\n"col_white"Dobrodosli u ovu ulicu, uzivajte u provodu!\n"col_balkanstory"Broj ulice: %d", GetStreetLocation(st), st);

			streetInfo[st][streetText3D] = CreateDynamic3DTextLabel( street_id_pickup_text, -1, streetInfo[st][streetObjPos][0],streetInfo[st][streetObjPos][1],streetInfo[st][streetObjPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1 );
			streetPickup[ st ] = CreateDynamicPickup(1314, 1, streetInfo[st][streetObjPos][0],streetInfo[st][streetObjPos][1],streetInfo[st][streetObjPos][2] );Streamer_Update( playerid );
			
			SacuvajUlicu( i );
			new lmai[300];
			format(lmai,sizeof(lmai),""col_orange"|| VESTI || U podrucju ({ffffff}okolici"col_orange") {ffffff}%s "col_orange"nastala je nova ulica pod brojem {ffffff}%i "col_orange"!",GetPlayerLocation(playerid),i);
			SCMA(-1,lmai);
			
			break;
		}
	}
	SendInfoMessage(playerid,"Uspjesno ste kreirali ulicu - svi su dobili obavjestenje!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:deldealer(playerid,params[]) 
{
	if( PlayerInfo[playerid][xAdmin] < 1337 ) return GRESKA(playerid,"Niste u mogucnosti da upotrijebite ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if(GetNearestDealer(playerid) == -1 ) return greska(playerid,"Morate biti blizu dilera!"); 
	
	new i = GetNearestDealer(playerid);

	if( IsValidDynamic3DTextLabel( DealerInfo[ i ][ dealerText3D ] ) )
	{
		DestroyDynamic3DTextLabel( DealerInfo[ i ][ dealerText3D ] );
	}

	if(IsValidActor(DealerActor[i]))
	{
		DestroyActor(DealerActor[i]);
	}

	DealerInfo[ i ][ dealerPos ][ 0 ] = 0;
	DealerInfo[ i ][ dealerPos ][ 1 ] = 0;
	DealerInfo[ i ][ dealerPos ][ 2 ] = 0;
	DealerInfo[ i ][ Organizacija ] = -1;

	new fstring[ 64 ];

	format( fstring, sizeof( fstring ), DEALER_FILE, i );

	if( fexist( fstring ) ) 
	{ 
		fremove( fstring ); 
	}

	SendInfoMessage(playerid, "Obrisao si dilera. ID = %i",i);
	
	return 1;
}
CMD:cdealer(playerid,params[])
{
	for( new i = 0; i < MAX_DEALERS; i++ ) 
	{
		new fileauta[ 40 ];

		format(fileauta, sizeof( fileauta ), DEALER_FILE, i);
		if( !fexist( fileauta ) )
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos( playerid, x, y, z);
			
			DealerInfo[ i ][ dealerPos ][ 0 ] = x;
			DealerInfo[ i ][ dealerPos ][ 1 ] = y;
			DealerInfo[ i ][ dealerPos ][ 2 ] = z;
			DealerInfo[ i ][ Organizacija ] = -1;
			
			Dileri3D(i);

			Dimi_SetPlayerPos(playerid, x+2,y,z);

			SacuvajDilera( i );
			SendInfoMessage(playerid, "Napravio si dilera.");	
			break;
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////
CMD:lift( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint( playerid, 9.0,490.5250, 772.4422, 1001.5187 ) )
	{ // Lift gore
	
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu!" );
		if(RudnikLiftuPokretu == true) return GRESKA( playerid, "Ne mozes pozvati lift jer je u pokretu!" );
		if( PlayerInfo[ playerid ][ xPosao ] == POSAO_RUDAR || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
		if(RudnikLift == false)
		{
			MoveDynamicObject(rudzllift,488.46259, 772.26239, 966.18402,3.0);//spusta lift
			MoveDynamicObject(rudnikgate1,490.4233, 774.5048, 1003.1907,3.0);//gornja spustena
			MoveDynamicObject(rudnikgate2,490.5960, 775.6660, 969.7675,0.2);//donja ograda se lagano dize
			SetTimer( "RudnikLiftTrue", 15000, 0 );
			RudnikLiftuPokretu = true;
		}
		else if(RudnikLift == true)
		{
			MoveDynamicObject(rudzllift,488.46259, 772.26239, 1002.35498,3.0);//dize lift
			MoveDynamicObject(rudnikgate1,490.4233, 774.5048, 1005.8767,0.2);//gornja se lagano otvara
			MoveDynamicObject(rudnikgate2,490.5960, 775.6660, 967.0025,3.0);//donja ograda se spusta
			SetTimer( "RudnikLiftFalse", 15000, 0 );
			RudnikLiftuPokretu = true;
		}


		}
		else return GRESKA( playerid, "Ne mozete vi koristiti lift!" );
	}
	
	else if( IsPlayerInRangeOfPoint( playerid, 9.0,490.6733, 772.2692, 965.3347 ) )
	{ // Lift dole
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu!" );
		if(RudnikLiftuPokretu == true) return GRESKA( playerid, "Ne mozes pozvati lift jer je u pokretu!" );
		if( PlayerInfo[ playerid ][ xPosao ] == POSAO_RUDAR || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
		if(RudnikLift == true)
		{
			MoveDynamicObject(rudzllift,488.46259, 772.26239, 1002.35498,3.0);//dize lift
			MoveDynamicObject(rudnikgate1,490.4233, 774.5048, 1005.8767,0.2);//gornja se lagano otvara
			MoveDynamicObject(rudnikgate2,490.5960, 775.6660, 967.0025,3.0);//donja ograda se spusta
			SetTimer( "RudnikLiftFalse", 15000, 0 );
			RudnikLiftuPokretu = true;
		}
		else if(RudnikLift == false)
		{
			MoveDynamicObject(rudzllift,488.46259, 772.26239, 966.18402,3.0);//spusta lift
			MoveDynamicObject(rudnikgate1,490.4233, 774.5048, 1003.1907,3.0);//gornja spustena
			MoveDynamicObject(rudnikgate2,490.5960, 775.6660, 969.7675,0.2);//donja ograda se lagano dize
			SetTimer( "RudnikLiftTrue", 15000, 0 );
			RudnikLiftuPokretu = true;
		}


		}
		else return GRESKA( playerid, "Ne mozete vi koristiti lift!" );
	}




	return true;
}
//////////////////////////////////////////////////////////////////////////////////

//===================================| ADMIN SYSTEM |============================

CMD:ostetivozilo( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	new id, kolicina;
	if( sscanf( params, "ii", id,kolicina ) )
	{
		SendUsageMessage( playerid, "/ostetivozilo [ ID ] [ health ]");
		return 1;
	}
	if(!IsPlayerInAnyVehicle(id)) return GRESKA( playerid, "Igrac nije u vozilu!" );
	SetVehicleHealth(GetPlayerVehicleID(id),kolicina);
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hostname(playerid, params[])
{

	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	ShowPlayerDialog( playerid, dialog_MJENJAIMESERVERA, DSI, D_NASLOV, "Unesite novo ime servera:", D_ODABERI, D_ODUSTANI );

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:serverpw(playerid, params[])
{

	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	ShowPlayerDialog( playerid, dialog_MJENJASIFRUSERVERA, DSI, D_NASLOV, "Unesite novu sifru servera\nAko zelite skinuti sifru ostavite prazno:", D_ODABERI, D_ODUSTANI );

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
static PokaziServerDialog(playerid)
{
	ShowPlayerDialog( playerid, dialog_SERVERMI, DSL, D_NASLOV, "Upravljanje serverom\nSacuvaj naloge\nNapravi\nIzbrisi\nIzmeni\nSpisak organizacija\nAntiCheat\nHappy Jobs\nAzuriranje servera - pokreni\nUkljuci/iskljuci reklamiranje\nAnti - Bunny Hop", D_ODABERI, D_ODUSTANI );
}
CMD:server( playerid, params[] )
{
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	//if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	ShowPlayerDialog( playerid, dialog_SERVERMI, DSL, D_NASLOV, "Upravljanje serverom\nSacuvaj naloge\nNapravi\nIzbrisi\nIzmeni\nSpisak organizacija\nAntiCheat\nHappy Jobs\nAzuriranje servera - pokreni\nUkljuci/iskljuci reklamiranje\nAnti - Bunny Hop", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:jobpanel( playerid, params[] )
{
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	ShowPlayerDialog( playerid, dialog_EDITPOSLOVA, DSL, D_NASLOV, "Kosac Trave\nGradjevinar\nRudar\nKomunalac\nTempo Dostavljac\nDostavljac pizze\nMehanicar\nBus vozac\nFarmer\nPilot", D_ODABERI, D_ODUSTANI );
	return true;
}



#if NERP_ZIMSKI_MOD  == 1
new Float:RandomGrudvanje[ ][ 4 ] = {

			{-661.4060,3784.3162,9.4844,257.5181 },
			{-657.7783,3792.4153,9.5270,335.8731 },
			{-658.2094,3807.1597,9.4844,2.7573 },
			{-667.1874,3813.1177,9.4979,60.4321 },
			{-674.5333,3808.6477,10.3335,124.0811 },
			{-687.9689,3789.4971,9.8952,126.8384 },
			{-695.1410,3794.3569,10.3022,45.0368 },
			{-702.0364,3801.2444,10.3432,45.0368 },
			{-712.6761,3809.8721,10.2407,45.0368 },
			{-721.5963,3812.7698,10.3399,85.2483 },
			{-727.8113,3807.5193,10.3272,168.6584 },
			{-730.1120,3796.8552,10.3286,167.0499 },
			{-735.1766,3787.7090,10.2726,141.0848 },
			{-743.3258,3785.5710,10.3364,82.7207 },
			{-750.9206,3792.0322,10.3347,25.5055 },
			{-757.1251,3805.0381,9.9856,25.5055 },
			{-764.3909,3807.6116,10.3388,81.3420 },
			{-771.4824,3803.1719,10.3353,161.0756 },
			{-775.2946,3792.6902,10.1593,159.4672 },
			{-783.4541,3785.3066,10.2326,125.2741 },
			{-788.4659,3788.0054,10.3475,353.1065 },
			{-787.2953,3797.6875,10.3400,353.1065 },
			{-787.0840,3805.7615,9.4844,353.1065 },
			{-786.4185,3811.2686,9.6361,353.1065 }
};
#endif
//////////////////////////////////////////////////////////////////////////////////
CMD:grudvanje( playerid, params[] ) {//izbaceno radi ljeta nije zima :D

	#if NERP_ZIMSKI_MOD  == 1
	if( !Snow_F[ playerid ] )
	{
	
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, 511.7566, -1511.0818, 14.5677 ) ) return GRESKA( playerid, "Morate biti kod ulaza zgrade u arenu za grudvanje(Pitajte Admin/GM gde je)." );
	
		new rand = random( sizeof( RandomGrudvanje ) );
		Dimi_SetPlayerPos( playerid, RandomGrudvanje[ rand ][ 0 ], RandomGrudvanje[ rand ][ 1 ], RandomGrudvanje[ rand ][ 2 ] );
		 
		Snow_F[ playerid ] = true;
		Charged[ playerid ] = 0;
		Shoot[ playerid ] = 0;

		AlreadyShooted[ playerid ] = true;
		SetTimerEx( "SkiniSnegGrudavnje", 2000, false, "i", playerid );

		SendClientMessagee( playerid, -1, "{6ef83c}GRUDVANJE | "col_white"Zapoceo si grudavanje.");
		SendClientMessagee( playerid, -1, "{6ef83c}GRUDVANJE | "col_white"Tvoj cilj je da pogodis sto vise ljudi, a da oni tebe ne pogode!");
		SendClientMessagee( playerid, -1, "{6ef83c}GRUDVANJE | "col_white"Da napravis grudvu pa posle i pogodis nekog koristi {6ef83c}DESNI KLIK MISA.");
		SendClientMessagee( playerid, -1, "{6ef83c}GRUDVANJE | "col_white"Ako zelis da izadjes unesi opet {6ef83c}/grudvanje.");
	}
	else if( Snow_F[ playerid  ] )
	{
	
		Snow_F[ playerid ] = false;
		
		Dimi_SetPlayerPos( playerid, 511.7566, -1511.0818, 14.5677 );
		SetPlayerFacingAngle( playerid, 360.000 );
		SetCameraBehindPlayer( playerid );
		SetPlayerInterior( playerid, 0 );
		SetPlayerVirtualWorld( playerid, 0 );
		
		SendClientMessagee( playerid, -1, "{6ef83c}GRUDVANJE | "col_white"Izasli ste iz arene za grudvanje." );
	}
	#else
	GRESKA( playerid, "Nije zimski period!");
	#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:sneskobelic( playerid, params[] )
{

	#if NERP_ZIMSKI_MOD  == 1
	if( !IsPlayerInRangeOfPoint( playerid, 20, 1480.0776, -1621.1813, 15.6354 ) ) return GRESKA( playerid, "Niste na trgu u Beogradu!" );
	if( PlayerInfo[ playerid ][ xLevel ] < 2 ) return GRESKA(playerid, "Moras biti lvl 2+!");
	new year, month, day;
	getdate( year, month, day );
	if( year == 2015 && month == 1 && (day == 1 || day == 2 || day == 3) )
	{
		if( PlayerInfo[ playerid ][ xPaketic ] ) return GRESKA(playerid, "Vec si uzeo novogodisnji paketic na trgu!");
		PlayerInfo[ playerid ][ xPaketic ] = true;
		new randnumber = random( 13 )+1;
		
		switch( randnumber )
		{
			case 1:
			{
				PlayerInfo[ playerid ][ xLevel ]++;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '1 LevelUP'! ))");
			}
			case 2:
			{
				DajIgracuNovac( playerid, 300000 );
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '$300000'! ))");
			}
			case 3:
			{
				PlayerInfo[ playerid ][ xZlato ] += 950;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste 'Gold - 950g'! ))");
			}
			case 4:
			{
				PlayerInfo[ playerid ][ xApoeni ]++;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '1 BEPoint'! ))");
			}
			case 5:
			{
				DajIgracuNovac( playerid, 400000 );
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '$400000'! ))");
			}
			case 6:
			{
				DajIgracuNovac( playerid, 500000 );
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '$500000'! ))");
			}
			case 7:
			{
				PlayerInfo[ playerid ][ xLevel ]++;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '1 LevelUP'! ))");
			}
			case 8:
			{
				PlayerInfo[ playerid ][ xRespekt ] += 25;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '25 Respect-a'! ))");
			}
			case 9:
			{
				PlayerInfo[ playerid ][ xRespekt ] += 10;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '10 Respect-a'! ))");
			}
			case 10:
			{
				PlayerInfo[ playerid ][ xRespekt ] += 15;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '15 Respect-a'! ))");
			}
			case 11:
			{
				PlayerInfo[ playerid ][ xLevel ]++;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste '1 LevelUP'! ))");
			}
			case 12:
			{
				PlayerInfo[ playerid ][ xZlato ] += 1000;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste 'Gold - 1000g'! ))");
			}
			case 13:
			{
				PlayerInfo[ playerid ][ xZlato ] += 975;
				SendClientMessagee( playerid, -1, ""col_balkanstory"| NE:RP | "col_white"Otvorili ste novogodisnji paketic i izvukli ste 'Gold - 975g'! ))");
			}
		}
		SavePlayer( playerid );
	}
	else {
	
		GRESKA( playerid, "Paketic mozes samo uzeti od prvog do treceg januara 2016 godine!" );
	}
	#else
	GRESKA( playerid, "Nije zimski period!");
	#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:trenutnekordinate( playerid, params[] )
{
	new Float:Pos[ 3 ];
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	SendInfoMessage( playerid, "Trenutno ste na kordinatama %f %f %f.", Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	return true;
}
////////////////////////////////////////////////////////////////////////////////////
#if kladionica == 1
CMD:uplatilistic( playerid, params[] )
{

	if( uFirmi[ playerid ] == -1 ) return GRESKA( playerid, "Niste u kladionici!" );
	if( BussinesInfo[ uFirmi[ playerid ] ][ bType ] != VRSTA_KLAD ) return GRESKA( playerid, "Morate biti u kladionici." );

	if( KladionicaListic[ playerid ][ Uplaceno ] )
	{
		GRESKA( playerid, "Vec ste uplatili listic!" );
		GRESKA( playerid, "Ako hocete ponovo da igrate prvo bacite trenutni listic /bacilistic" );
		return true;
	}
	//if( PlayerInfo[ playerid ][ xGodine ] < 18 ) return GRESKA( playerid, "Nemate 18 godina." );
	if( !ListaPrikazana[ playerid ] )
	{
		KladionicaTDControl( playerid, true );
		ClearChat( playerid, 25 );
		SendInfoMessage( playerid, "Da sklonite listic kucajte /uplatilistic." );
	}
	else if( ListaPrikazana[ playerid ] )
	{
		KladionicaTDControl( playerid, false );
	}
	return true;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:bacilistic( playerid, params[] )
{
	if( !KladionicaListic[ playerid ][ Uplaceno ] ) return GRESKA( playerid, "Niste igrali listic!" );
	
	for(  new i = 0; i < 10; i++ )
	{
		KladionicaListic[ playerid ][ parID ][ i ] = -1;
		KladionicaListic[ playerid ][ keciksdva ][ i ] = -1;
		KladionicaListic[ playerid ][ Kvota ][ i ] = 0.0;
		KladionicaListic[ playerid ][ teamID1 ][ i ] = -1;
		KladionicaListic[ playerid ][ teamID2 ][ i ] = -1;
	}
	KladionicaListic[ playerid ][ Uplaceno ] = false;
	KladionicaListic[ playerid ][ Zavrseno ] = false;
	KladionicaListic[ playerid ][ Uplata ] = 0;
	KladionicaListic[ playerid ][ Dobitak ] = 0;
	KladionicaListic[ playerid ][ Status ] = false;
	
	SaveKladionica( playerid );
	SendInfoMessage( playerid, "Bacili ste svoj listic!" );
	return true;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:rezultati( playerid, params[] )
{

	if( uFirmi[ playerid ] == -1 ) return GRESKA( playerid, "Niste u kladionici!" );
	if( BussinesInfo[ uFirmi[ playerid ] ][ bType ] != VRSTA_KLAD ) return GRESKA( playerid, "Morate biti u kladionici." );

	//if( PlayerInfo[ playerid ][ xGodine ] < 18 ) return GRESKA( playerid, "Nemate 18 godina." );

	if( !RezultatiPrikazana[ playerid ] )
	{
		RezultatiTDControl( playerid, true );
		ClearChat( playerid, 25 );
		SendInfoMessage( playerid, "Da sklonis rezultate /rezultati." );
	}
	else if( RezultatiPrikazana[ playerid ] )
	{
		RezultatiTDControl( playerid, false );
	}
	return true;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:podignidobitak( playerid, params[] )
{

	if( uFirmi[ playerid ] == -1 ) return GRESKA( playerid, "Niste u kladionici!" );
	if( BussinesInfo[ uFirmi[ playerid ] ][ bType ] != VRSTA_KLAD ) return GRESKA( playerid, "Morate biti u kladionici." );

	//if( PlayerInfo[ playerid ][ xGodine ] < 18 ) return GRESKA( playerid, "Nemate 18 godina." );

	if( !KladionicaListic[ playerid ][ Uplaceno ] ) return GRESKA( playerid, "Niste igrali listic!" );
	if( !KladionicaListic[ playerid ][ Zavrseno ] ) return GRESKA( playerid, "Utakmice se jos igraju!" );
	if( !KladionicaListic[ playerid ][ Status ] ) return GRESKA( playerid, "Vas listic je gubitan, vise srece drugi put!" );
	
	DajIgracuNovac( playerid, floatround( KladionicaListic[ playerid ][ Dobitak ] ) );
	
	SendInfoMessage( playerid, "Dobili ste %.2f$ na kladionici. Cestitamo.", KladionicaListic[ playerid ][ Dobitak ] );
	
	for( new i = 0; i < 10; i++ )
	{
		KladionicaListic[ playerid ][ parID ][ i ] = -1;
		KladionicaListic[ playerid ][ keciksdva ][ i ] = -1;
		KladionicaListic[ playerid ][ Kvota ][ i ] = 0.0;
		KladionicaListic[ playerid ][ teamID1 ][ i ] = -1;
		KladionicaListic[ playerid ][ teamID2 ][ i ] = -1;
	}
	KladionicaListic[ playerid ][ Uplaceno ] = false;
	KladionicaListic[ playerid ][ Zavrseno ] = false;
	KladionicaListic[ playerid ][ Uplata ] = 0;
	KladionicaListic[ playerid ][ Dobitak ] = 0;
	KladionicaListic[ playerid ][ Status ] = false;
	SaveKladionica( playerid );

	return true;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:mojlistic( playerid, params[] )
{

	if( !KladionicaListic[ playerid ][ Uplaceno ] ) return GRESKA( playerid, "Niste igrali listic!" );
	if( !MojListicPrikazan[ playerid ] )
	{
		KladionicaListicTDControl( playerid, true );
		ClearChat( playerid, 25 );
		SendInfoMessage( playerid, "Da sklonite listic /mojlistic." );
	}
	else if( MojListicPrikazan[ playerid ] )
	{
		KladionicaListicTDControl( playerid, false );
	}
	return true;
}
#endif
////////////////////////////////////////////////////////////////////////////////////
CMD:adresa( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new adresa[ 38 ];

	if( sscanf( params, "s[38]", adresa ) )
	{
		SendUsageMessage( playerid, "/adresa [ Nova adresa ]");
		return 1;
	}
	new im = GetNearestProperty( playerid );
	if( GetNearestProperty( playerid ) == -1 ) return GRESKA( playerid, "Nema imovine u vasoj blizini!" );
	if( strlen( params ) > 38 ) return GRESKA( playerid, "Adresa ne moze biti duza od 38 karaktera." );

	strmid( II[ im ][ iAdress ], adresa, 0, strlen( adresa ), 32);
	SaveProperty( im );
	PropertyRefresh( im );

	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:neaktivnost( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new izbor, id, File[ 64 ];

		if( sscanf( params, "ii", izbor, id ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/neaktivnost [ izbor ] [ ID ]");
			SendClientMessagee( playerid, BELA, "[Izbor] 1. imovina | 2. firma | 3. vozilo");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		if( izbor == 1 )
		{
			format( File, sizeof( File ), IM_FILE, id );
			if( !fexist( File ) ) return GRESKA( playerid, "Ta imovina(ID) ne postoji u bazi podataka!");
			SendInfoMessage( playerid, "Neaktivnost imovine ID - %d je %dh.", id, II[ id ][ iNeaktivnost ] );
		}
		else if( izbor == 2 )
		{
			format( File, sizeof( File ), F_FILE, id );
			if( !fexist( File ) ) return GRESKA( playerid, "Ta firma(ID) ne postoji u bazi podataka!");
			SendInfoMessage( playerid, "Neaktivnost firme ID - %d je %dh.", id, BussinesInfo[ id ][ bNeaktivnost ] );
		}
		else if( izbor == 3 )
		{
			format( File, sizeof( File ), V_FILE, id );
			if( !fexist( File ) ) return GRESKA( playerid, "To vozilo(ID) ne postoji u bazi podataka!");
			SendInfoMessage( playerid, "Neaktivnost vozila ID - %d je %dh.", id, VehicleInfo[ id ][ vNeaktivnost ] );
		}
		else return GRESKA( playerid, "Pogresan izbor( 1-3 )." );
	}else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:edit( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new vrsta, izbor, kolicina;

	if( sscanf( params, "iii", vrsta, izbor, kolicina ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/edit [ izbor 1 ] [ izbor 2 ] [ kolicina ]");
		SendClientMessagee( playerid, BELA, "[Izbor 1] 1. imovina | 2. firma ");
		SendClientMessagee( playerid, BELA, "[Izbor 2] 1. level | 2. cena ");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( vrsta == 1 )
	{
		new id = GetNearestProperty( playerid );
		if( GetNearestProperty( playerid ) == -1 ) return GRESKA( playerid, "Nema imovine u vasoj blizini!" );
		if( izbor == 1 )
		{
			II[ id ][ iLevel ] = kolicina;
			PropertyRefresh( id );
			SaveProperty( id );
			format( globalstring, sizeof( globalstring ), "Izmenili ste level imovine(ID: %d) u %d!", id, II[ id ][ iLevel ] );
			SendClientMessagee( playerid, UGBOJA, globalstring );
			
			new string1[ 128 ]; 
			format( string1, sizeof( string1 ), "Admin %s je izmenio level na imovini ID %d u %d", ImeIgraca( playerid ), id, kolicina );
			LogSave( "Ostalo/LogEditCommand.log", string1 );
			
		}
		else if( izbor == 2 )
		{
			II[ id ][ iPrice ] = kolicina;
			PropertyRefresh( id );
			SaveProperty( id );
			format( globalstring, sizeof( globalstring ), "Izmenili ste cijenu imovine(ID: %d) u %d!", id, II[ id ][ iPrice ] );
			SendClientMessagee( playerid, UGBOJA, globalstring );
			
			new string1[ 128 ]; 
			format( string1, sizeof( string1 ), "Admin %s je izmenio cijenu na imovini ID %d u %d", ImeIgraca( playerid ), id, kolicina );
			LogSave( "Ostalo/LogEditCommand.log", string1 );
		}
		else return GRESKA( playerid, "Pogresan izbor levela ili cijene." );
	}
	else if( vrsta == 2 )
	{
		new id = GetNearestBussines( playerid );
		if( GetNearestBussines( playerid ) == -1 ) return GRESKA( playerid, "Nema firme u vasoj blizini!" );
		if( izbor == 1 )
		{
			BussinesInfo[ id ][ bLevel ] = kolicina;
			Bussines_Refresh( id );
			SaveBussines( id );
			format( globalstring, sizeof( globalstring ), "Izmenili ste level firme(ID: %d) u %d!", id, BussinesInfo[ id ][ bLevel ] );
			SendClientMessagee( playerid, UGBOJA, globalstring );
			new string1[ 128 ]; 
			format( string1, sizeof( string1 ), "Admin %s je izmenio level na firmi ID %d u %d", ImeIgraca( playerid ), id, kolicina );
			LogSave( "Ostalo/LogEditCommand.log", string1 );
		}
		else if( izbor == 2 )
		{
			BussinesInfo[ id ][ bPrice ] = kolicina;
			Bussines_Refresh( id );
			SaveBussines( id );
			format( globalstring, sizeof( globalstring ), "Izmenili ste cijenu firme(ID: %d) u %d!", id, BussinesInfo[ id ][ bPrice ] );
			SendClientMessagee( playerid, UGBOJA, globalstring );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je izmenio cijenu na firmi ID %d u %d", ImeIgraca( playerid ), id, kolicina );
			LogSave( "Ostalo/LogEditCommand.log", string1 );
		}
		else return GRESKA( playerid, "Pogresan izbor levela ili cijene." );
	}
	else return GRESKA( playerid, "Pogresan izbor firme ili imovine." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajsvima( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new vrsta, kolicina;

	if( sscanf( params, "ii", vrsta, kolicina ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/dajsvima [ Vrsta ] [ kolicina ]");
		SendClientMessagee( playerid, BELA, "[Vrsta] 1. Level | 2. Novac  ");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( kolicina < 1 ) return GRESKA( playerid, "Kolicina ne moze biti ispod 1." );
	if( vrsta == 1 )
	{
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != INVALID_PLAYER_ID && PlayerLogged[ i ] != false )
			{
				PlayerInfo[ i ][ xLevel ] += kolicina;
				SetPlayerScore( i, PlayerInfo[ i ][ xLevel ] );
			}
		}
		SendInfoMessage( playerid, "Dao si svim igracima levelup." );
		format( globalstring, sizeof( globalstring ), ""col_balkanstory"| NE:RP | "col_white" Vlasnik %s je nagradio sve igrace sa:  %d levela.", ImeIgraca( playerid ), kolicina );
		SCMA( -1, globalstring );
		return true;
	}
	else if( vrsta == 2 )
	{
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != INVALID_PLAYER_ID && PlayerLogged[ i ] != false )
			{
				DajIgracuNovac( i, kolicina );
			}
		}
		SendInfoMessage( playerid, "Dao si svim igracima novac." );
		format( globalstring, sizeof( globalstring ), ""col_balkanstory"| NE:RP | "col_white" Vlasnik %s je nagradio sve igrace sa:  %d$.", ImeIgraca( playerid ), kolicina );
		SCMA( -1, globalstring );
		return true;
	}
	else GRESKA( playerid, "Pogresna vrsta(1-2)" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vozilohelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Vozila HELP | "col_white"/vozilo /vehlist /gepek /lock" );
	SendClientMessagee( playerid, -1, ""col_balkanstory"Obijanje HELP | "col_white"/obijbravu /upalivozilo /prekiniobijanje" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pljackahelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Pljacka HELP | "col_white"/obori /kpu /tie /untie /rob" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:garazahelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Garaza HELP | "col_white"/kupigarazu /garaza /genter /gexit" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupigarazu( playerid, params[] )
{
	new id = GetNearestGarage( playerid );

	if( id == -1 ) return GRESKA( playerid, "U blizini nema nijedne garaze." );
	if( PlayerInfo[ playerid ][ xGarageID ] != -1 ) return GRESKA( playerid, "Vec posedujete jednu garazu." );
	if( PlayerInfo[ playerid ][ xNovac ] < garageInfo[ id ][ garagePrice ] ) return GRESKA( playerid, "Nemate dovoljno novca %d.", garageInfo[ id ][ garagePrice ] );
	if( PlayerInfo[ playerid ][ xLevel ] < garageInfo[ id ][ garageLevel ] ) return GRESKA( playerid, "Morate biti %d level da bi kupili ovu garazu.", garageInfo[ id ][ garageLevel ] );

	DajIgracuNovac( playerid, -garageInfo[ id ][ garagePrice ] );
	PlayerInfo[ playerid ][ xGarageID ] = id;
	SavePlayer( playerid );
	garageInfo[ id ][ garageOwned ] = true;
	strmid( garageInfo[ id ][ garageOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME );
	Garage_Save( id );
	Garage_Refresh( id );
	SendInfoMessage( playerid, "Kupili ste garazu za %d.", garageInfo[ id ][ garagePrice ] );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:garaza( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xGarageID ] == -1 ) return GRESKA( playerid, "Nemate garazu." );
	ShowPlayerDialog( playerid, dialog_GARAZA, DSL, D_NASLOV, "Info\nZakljucaj/Otkljucaj\nProdaj Drzavi\nProdaj Igracu", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gexit( playerid, params[] )
{

	if( EnteredGarage[ playerid ] == -1 ) return GRESKA( playerid, "Niste u garazi." );
	new id = EnteredGarage[ playerid ];
	
	if( GetPlayerState( playerid ) == PLAYER_STATE_ONFOOT )
	{
		SetPlayerPos( playerid, garageInfo[ id ][ garagePos ][ 0 ], garageInfo[ id ][ garagePos ][ 1 ], garageInfo[ id ][ garagePos ][ 2 ] );
		ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
		SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
		SetCameraBehindPlayer( playerid );
		TogglePlayerControllable( playerid, false );
		SetPlayerInterior( playerid, 0 );
		SetPlayerVirtualWorld( playerid, 0 );
		EnteredGarage[ playerid ] = -1;
	}
	else if( GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
	{
		new vehicle = GetPlayerVehicleID( playerid );
		LinkVehicleToInterior( vehicle, 0 );
		SetVehicleVirtualWorld( vehicle, 0 );
		SetVehiclePos( vehicle, garageInfo[ id ][ garageVehiclePos ][ 0 ], garageInfo[ id ][ garageVehiclePos ][ 1 ], garageInfo[ id ][ garageVehiclePos ][ 2 ] );
		SetVehicleZAngle( vehicle, garageInfo[ id ][ garageVehiclePos ][ 3 ] );
		ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
		SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
		SetCameraBehindPlayer( playerid );
		TogglePlayerControllable( playerid, false );
		SetPlayerInterior( playerid, 0 );
		SetPlayerVirtualWorld( playerid, 0 );
		EnteredGarage[ playerid ] = -1;
	}
	else return GRESKA( playerid, "Komandu mozes koristiti samo ako si na nogama ili na vozacevom mjestu." );

	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:genter( playerid, params[] )
{
	new id = GetNearestGarage( playerid );
	if( id == -1 ) return GRESKA( playerid, "Nema garaze u blizini." );
	new gtype = garageInfo[ id ][ garageType ];
	if( garageInfo[ id ][ garageLocked ] == true ) return GRESKA( playerid, "Ova garaza je zakljucana." );

	if( GetPlayerState( playerid ) == PLAYER_STATE_ONFOOT )
	{
		SetPlayerPos( playerid, GarageInteriors[ gtype ][ 0 ], GarageInteriors[ gtype ][ 1 ], GarageInteriors[ gtype ][ 2 ] );
		ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
		SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
		SetCameraBehindPlayer( playerid );
		TogglePlayerControllable( playerid, false );
		SetPlayerInterior( playerid, floatround( GarageInteriors[ gtype ][ 4 ] ) );
		SetPlayerVirtualWorld( playerid, garageInfo[ id ][ garageVW ] );
		SetPlayerFacingAngle( playerid, GarageInteriors[ gtype ][ 3 ] );
		EnteredGarage[ playerid ] = id;
		SendInfoMessage( playerid, "Da izadjete iz garaze kucajte /gexit." );
	}
	else if( GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
	{
		new vehicle = GetPlayerVehicleID( playerid );
		LinkVehicleToInterior( vehicle, floatround( GarageInteriors[ gtype ][ 4 ] ) );
		SetVehicleVirtualWorld( vehicle, garageInfo[ id ][ garageVW ] );
		SetVehiclePos( vehicle, GarageInteriors[ gtype ][ 0 ], GarageInteriors[ gtype ][ 1 ], GarageInteriors[ gtype ][ 2 ] );
		ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
		SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
		SetCameraBehindPlayer( playerid );
		TogglePlayerControllable( playerid, false );
		SetPlayerInterior( playerid, floatround( GarageInteriors[ gtype ][ 4 ] ) );
		SetPlayerVirtualWorld( playerid, garageInfo[ id ][ garageVW ] );
		SetVehicleZAngle( vehicle, GarageInteriors[ gtype ][ 3 ] );
		EnteredGarage[ playerid ] = id;
		SendInfoMessage( playerid, "Da izadjete iz garaze kucajte /gexit." );
	}
	else return GRESKA( playerid, "Komandu mozes koristiti samo ako si na nogama ili na vozacevom mjestu." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:imanjehelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Imanje HELP | "col_white"/kupiimanje /imanje /oberibiljku /kupiseme /posadibiljku" );
	SendClientMessagee( playerid, -1, ""col_balkanstory"Imanje HELP | "col_white"/prodajvoce /prodajkupus /prodajruze /kupigajbicu /bacigajbicu" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiimanje( playerid, params[] )
{
	new id = GetNearestField( playerid );

	if( id == -1 ) return GRESKA( playerid, "U blizini nema nijednog imanja." );
	if( fieldInfo[ id ][ fieldOwned ] == true ) return GRESKA( playerid, "Vec je kupljeno ovo imanje." );
	if( PlayerInfo[ playerid ][ xFieldID ] != -1 ) return GRESKA( playerid, "Vec posedujete jedno imanje." );
	if( PlayerInfo[ playerid ][ xNovac ] < fieldInfo[ id ][ fieldPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca %d.", fieldInfo[ id ][ fieldPrice ] );
	if( PlayerInfo[ playerid ][ xLevel ] < fieldInfo[ id ][ fieldLevel ] ) return GRESKA( playerid, "Morate biti %d level da bi kupili ovo imanje.", fieldInfo[ id ][ fieldLevel ] );

	DajIgracuNovac( playerid, -fieldInfo[ id ][ fieldPrice ] );
	PlayerInfo[ playerid ][ xFieldID ] = id;
	SavePlayer( playerid );
	fieldInfo[ id ][ fieldOwned ] = true;
	strmid( fieldInfo[ id ][ fieldOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME );
	Field_Save( id );
	Field_Refresh( id );
	SendInfoMessage( playerid, "Kupili ste imanje za %d.", fieldInfo[ id ][ fieldPrice ] );
	Field_Refresh(id);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:imanje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xFieldID ] == -1 ) return GRESKA( playerid, "Nemate imanje." );
	ShowPlayerDialog( playerid, dialog_IMANJE, DSL, D_NASLOV, "Info\nProdaj Drzavi\nProdaj Igracu", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupigajbicu( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1887.3665, -1863.7323, 13.5765 ) ) return GRESKA( playerid, "Morate biti na pijaci da bi kupili praznu gajbicu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 50 ) return GRESKA( playerid, "Nemate dovoljno novca 50$." );
	if( PraznaGajbica[ playerid ] == true && GajbicaBiljka[ playerid ] != 0 ) return GRESKA( playerid, "Vec imate gajbicu u rukama." );
	DajIgracuNovac( playerid, -50 );
	PraznaGajbica[ playerid ] = true;
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 19639, 1, 0.10, 0.46, -0.01, 0.0, 89.0, 85.0, 1.04, 1.00, 1.00 );
	SendInfoMessage( playerid, "Uspjesno ste kupili praznu gajbicu." );
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:bacigajbicu( playerid, params[] )
{
	if( PraznaGajbica[ playerid ] == false ) return GRESKA( playerid, "Nemate praznu gajbicu u rukama." );
	PraznaGajbica[ playerid ] = false;
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	SendInfoMessage( playerid, "Uspjesno ste bacili praznu gajbicu." );
	ClearAnimations( playerid );
	return (true);
}

CMD:oberibiljku(playerid,params[])
{
	if(Branje[playerid] == 0)
	{
		SendInfoMessage(playerid,"Uspjesno si uzeo opremu i poceo sa branjem biljaka!");
		SendInfoMessage(playerid,"Da prestanes kucaj ponovo /oberibiljku");
		SendInfoMessage(playerid,"Da oberes biljku - /oberidrvo");
		Branje[playerid] = 1;
		return 1;
	}
	else if(Branje[playerid] == 1)
	{
		SendInfoMessage(playerid,"Ostavio si opremu i prekinuo sa branjem!");
		Branje[playerid] = 0;
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oberidrvo( playerid, params[] )
{
	new fid = PlayerInfo[ playerid ][ xFieldID ], id = GetNearestStalk( playerid ), randbiljka = random(5)+4;
	if(Branje[playerid] == 0) return greska(playerid,"Nemas opremu za branje, kucaj /oberibiljku da uzmes opremu!");
	if( IsPlayerInDynamicArea( playerid, fieldInfo[ fid ][ fieldRectAngle ] ) )
	{
		if( id == -1 ) return GRESKA( playerid, "Nema stabla/sadnice u blizini." );
		if( stalkInfo[ id ][ sHour ] >= 0 && stalkInfo[ id ][ sMinut ] >= 1 ) return GRESKA( playerid, "Jos nije zrelo za branje!");
		if( stalkInfo[ id ][ sGrow ] != true ) return GRESKA( playerid, "Jos nije zrelo za branje!");
		if( PraznaGajbica[ playerid ] != true ) return GRESKA( playerid, "Treba ti prazna gajba da bi obrao plodove!" );

		PraznaGajbica[ playerid ] = false;
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		
		if( stalkInfo[ id ][ sType ] == BILJKA_SLJIVA )
		{
			GajbicaBiljka[ playerid ] = BILJKA_SLJIVA;
			PlayerInfo[ playerid ][ xSljive ] += randbiljka;
			SendInfoMessage( playerid, "Obrali ste sljive i dobili ste %d komada.Ukupno: %d.", randbiljka, PlayerInfo[ playerid ][ xSljive ] );
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 20;
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_KRUSKA )
		{
			GajbicaBiljka[ playerid ] = BILJKA_KRUSKA;
			PlayerInfo[ playerid ][ xKruske ] += randbiljka;
			SendInfoMessage( playerid, "Obrali ste kruske i dobili ste %d komada.Ukupno: %d.", randbiljka, PlayerInfo[ playerid ][ xKruske ] );
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 22;
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_JABUKA )
		{
			GajbicaBiljka[ playerid ] = BILJKA_JABUKA;
			PlayerInfo[ playerid ][ xJabuke ] += randbiljka;
			SendInfoMessage( playerid, "Obrali ste jabuke i dobili ste %d komada.Ukupno: %d.", randbiljka, PlayerInfo[ playerid ][ xJabuke ] );
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 24;
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_KUPUS )
		{
			GajbicaBiljka[ playerid ] = BILJKA_KUPUS;
			PlayerInfo[ playerid ][ xKupus ] += randbiljka;
			SendInfoMessage( playerid, "Obrali ste kupus i dobili ste %d komada.Ukupno: %d.", randbiljka, PlayerInfo[ playerid ][ xKupus ] );
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 18;
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_RUZE )
		{
			GajbicaBiljka[ playerid ] = BILJKA_RUZE;
			PlayerInfo[ playerid ][ xRuze ] += randbiljka;
			SendInfoMessage( playerid, "Obrali ste ruze i dobili ste %d komada.Ukupno: %d.", randbiljka, PlayerInfo[ playerid ][ xRuze ] );
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 15;
		}

		fieldInfo[ fid ][ fieldStalkNumber ]--;
		Field_Save( fid );
		stalkInfo[ id ][ sGrow ] = false;
		Stalk_Save( id );
		
		new string[ 180 ], vrsta[ 10 ];
		
		if( stalkInfo[ id ][ sType ] == BILJKA_SLJIVA ) { vrsta = "Sljiva"; }
		else if( stalkInfo[ id ][ sType ] == BILJKA_KRUSKA ) { vrsta = "KRUSKA"; }
		else if( stalkInfo[ id ][ sType ] == BILJKA_JABUKA ) { vrsta = "JABUKA"; }
		else if( stalkInfo[ id ][ sType ] == BILJKA_KUPUS ) { vrsta = "KUPUS"; }
		else if( stalkInfo[ id ][ sType ] == BILJKA_RUZE ) { vrsta = "RUZE"; }

		if( stalkInfo[ id ][ sType ] == BILJKA_SLJIVA )
		{
			format( string, sizeof( string ), "{09AFFF}| %s |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", vrsta, stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );//Sljiva
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_KRUSKA )
		{
			format( string, sizeof( string ), "{FFFF04}| %s |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", vrsta, stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );//kruska
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_JABUKA )
		{
			format( string, sizeof( string ), "{80FF00}| %s |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", vrsta, stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );//jabuka
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_KUPUS )
		{
			format( string, sizeof( string ), "{458A00}| %s |\nPlod jos nije zreo za branje!\nVrijeme do sazrijevanja: %dh i %dmin", vrsta, stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );//kupus
		}
		else if( stalkInfo[ id ][ sType ] == BILJKA_RUZE )
		{
			format( string, sizeof( string ), "{F90000}| %s |\nCvijet jos nije zreo za branje!\nVrijeme do sazrijevanja: %dh i %dmin", vrsta, stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );//ruze
		}

		UpdateDynamic3DTextLabelText( stalkInfo[ id ][ s3D ], BELA, string );
		
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 19636, 1, 0.10, 0.46, -0.01, 0.0, 89.0, 85.0, 1.04, 1.00, 1.00 );
		ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
		
	} else return GRESKA( playerid, "Morate biti na svom imanju." );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
 /*
CMD:izvadiizgajbice( playerid, params[] ) {

	if( GajbicaBiljka[ playerid ] == BILJKA_JABUKA )
	{
		id = Inventory_Add( playerid, "Jabuke", 19636 );

		if( id != -1 )
		{
			SendInfoMessage( playerid, "Izvadili ste iz gajbice jednu jabuku i stavili u inventori." );
			GajbicaKolicina[ playerid ]--;
			if( GajbicaKolicina[ playerid ] == 0 )
			{
				if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
				ClearAnimations( playerid );
				izvadili ste sve
				PraznaGajbica[ playerid ] = true;
				SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 19639, 1, 0.10, 0.46, -0.01, 0.0, 89.0, 85.0, 1.04, 1.00, 1.00 );
				ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
			}

		}
		else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else if( GajbicaBiljka[ playerid ] == BILJKA_SLJIVA ) {
	
	}
	else reutnr nemategajbicunijednuurukama
	return (true);
}
*/

//////////////////////////////////////////////////////////////////////////////////
CMD:jedivoce( playerid, params[] ) {
	//GRESKA( playerid, "Trenutno nedostupno." );
	new vrsta;
	if( sscanf( params, "i", vrsta ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/jedivoce [ broj vrste ] ");
		SendClientMessagee( playerid, BELA, "[Vrsta] 1. Sljiva | 2. Kruska | 3. Jabuka");
		SendClientMessageEx( playerid, BELA, "[Imate] %d Sljiva | %d Krusaka | %d Jabuka", PlayerInfo[ playerid ][ xSljive ], PlayerInfo[ playerid ][ xKruske ], PlayerInfo[ playerid ][ xJabuke ] );
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( vrsta == 1 )
	{
		if( PlayerInfo[ playerid ][ xSljive ] == 0 ) return GRESKA( playerid, "Nemate sljive kod sebe." );
		DajIgracuGlad( playerid, 6 );
		PlayerInfo[ playerid ][ xSljive ]--;
		format( globalstring, sizeof( globalstring ), "%s jede sljivu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		ApplyAnimation( playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	}
	else if( vrsta == 2 )
	{
		if( PlayerInfo[ playerid ][ xKruske ] == 0 ) return GRESKA( playerid, "Nemate kruske kod sebe." );
		DajIgracuGlad( playerid, 5 );
		PlayerInfo[ playerid ][ xKruske ]--;
		format( globalstring, sizeof( globalstring ), "%s jede krusku.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		ApplyAnimation( playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	}
	else if( vrsta == 3 )
	{
		if( PlayerInfo[ playerid ][ xJabuke ] == 0 ) return GRESKA( playerid, "Nemate jabuke kod sebe." );
		DajIgracuGlad( playerid, 4 );
		PlayerInfo[ playerid ][ xJabuke ]--;
		format( globalstring, sizeof( globalstring ), "%s jede jabuku.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		ApplyAnimation( playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	} else return GRESKA( playerid, "Pogresan broj vrste." );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prodajkupus( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1876.8926, -1862.6066, 13.5788 ) ) return GRESKA( playerid, "Morate biti na pijaci da bi prodali kupus." );
	new kolicina = PlayerInfo[ playerid ][ xKupus ];
	if( GajbicaBiljka[ playerid ] != BILJKA_KUPUS ) return GRESKA( playerid, "Nemate gajbicu sa kupusom u rukama." );
	if( kolicina == 0 ) return GRESKA( playerid, "Nemate kupus." );

	DajIgracuNovac( playerid, (kolicina*23) );
	PlayerInfo[ playerid ][ xKupus ] -= kolicina;
	SendInfoMessage( playerid, "Prodali ste "col_white"%d"col_balkanstory" kupusa za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*23) );
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	ClearAnimations( playerid );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prodajruze( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 426.6609, -1791.3032, 5.6260 ) ) return GRESKA( playerid, "Morate biti u cvecari kod plaze." );
	new kolicina = PlayerInfo[ playerid ][ xRuze ];
	if( GajbicaBiljka[ playerid ] != BILJKA_RUZE ) return GRESKA( playerid, "Nemate gajbicu sa ruzama u rukama." );
	if( kolicina == 0 ) return GRESKA( playerid, "Nemate ruze." );
	DajIgracuNovac( playerid, (kolicina*28) );
	PlayerInfo[ playerid ][ xRuze ] -= kolicina;
	SendInfoMessage( playerid, "Prodali ste "col_white"%d"col_balkanstory" ruza za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*28) );
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	ClearAnimations( playerid );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prodajvoce( playerid, params[] )
{
	new IDFirme = GetNearestBussines2( playerid );
	if( IDFirme == -1 ) return GRESKA( playerid, "Morate biti na ulazu marketa da bi ste prodali voce.");
	if( BussinesInfo[ IDFirme ][ bType ] != VRSTA_MARKET ) return GRESKA( playerid, "Morate biti na ulazu marketa da bi ste prodali voce.");
	new vrsta, cena, kolicina;
	if( sscanf( params, "i", vrsta ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/prodajvoce [ broj vrste ]");
		SendClientMessagee( playerid, BELA, "[Vrsta] 1. Sljiva(55$) | 2. Kruska(50$) | 3. Jabuka(45$)");
		SendClientMessageEx( playerid, BELA, "[Imate] %d Sljiva | %d Krusaka | %d Jabuka", PlayerInfo[ playerid ][ xSljive ], PlayerInfo[ playerid ][ xKruske ], PlayerInfo[ playerid ][ xJabuke ] );
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( vrsta == 1 )
	{
		if( GajbicaBiljka[ playerid ] != BILJKA_SLJIVA ) return GRESKA( playerid, "Nemate gajbicu sa sljivama u ruke." );
		cena = 55, kolicina = PlayerInfo[ playerid ][ xSljive ];
		if( kolicina == 0 ) return GRESKA( playerid, "Nemate sljive." );
		if( PlayerInfo[ playerid ][ xSljive ] < kolicina ) return GRESKA( playerid, "Nemate toliko sljiva kod sebe." );
		DajIgracuNovac( playerid, (kolicina*cena) );
		PlayerInfo[ playerid ][ xSljive ] -= kolicina;
		SendInfoMessage( playerid, "Prodali ste "col_white"%d"col_balkanstory" sljiva za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		ClearAnimations( playerid );
	}
	else if( vrsta == 2 )
	{
		if( GajbicaBiljka[ playerid ] != BILJKA_KRUSKA ) return GRESKA( playerid, "Nemate gajbicu sa kruskama u ruke." );
		cena = 50, kolicina = PlayerInfo[ playerid ][ xKruske ];
		if( kolicina == 0 ) return GRESKA( playerid, "Nemate kruske." );
		if( PlayerInfo[ playerid ][ xKruske ] < kolicina ) return GRESKA( playerid, "Nemate toliko krusaka kod sebe." );
		DajIgracuNovac( playerid, (kolicina*cena) );
		PlayerInfo[ playerid ][ xKruske ] -= kolicina;
		SendInfoMessage( playerid, "Prodali ste "col_white"%d"col_balkanstory" krusaka za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		ClearAnimations( playerid );
	}
	else if( vrsta == 3 )
	{
		if( GajbicaBiljka[ playerid ] != BILJKA_JABUKA ) return GRESKA( playerid, "Nemate gajbicu sa jabukama u ruke." );
		cena = 45, kolicina = PlayerInfo[ playerid ][ xJabuke ];
		if( kolicina == 0 ) return GRESKA( playerid, "Nemate jabuke." );
		if( PlayerInfo[ playerid ][ xJabuke ] < kolicina ) return GRESKA( playerid, "Nemate toliko jabuka kod sebe." );
		DajIgracuNovac( playerid, (kolicina*cena) );
		PlayerInfo[ playerid ][ xJabuke ] -= kolicina;
		SendInfoMessage( playerid, "Prodali ste "col_white"%d"col_balkanstory" jabuka za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		ClearAnimations( playerid );
	}
	else return GRESKA( playerid, "Pogresan broj vrste." );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiseme( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1884.6896, -1872.3599, 13.5392 ) ) return GRESKA( playerid, "Morate biti na pijaci da bi ste kupovali sjemena." );
	new vrsta, kolicina, cena;
	if( sscanf( params, "ii", vrsta, kolicina ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/kupiseme [ broj vrste ] [ kolicina ]");
		SendClientMessagee( playerid, BELA, "[Vrsta] 1. Sljiva(250$) | 2. Kruska(220$) | 3. Jabuka(200$) | 4. Kupus(140$) | 5. Ruze(160$)");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( vrsta == 1 )
	{
		cena = 250;
		if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca." );
		DajIgracuNovac( playerid, -(kolicina*cena) );
		PlayerInfo[ playerid ][ xSemeSljive ] += kolicina;
		SendInfoMessage( playerid, "Kupili ste "col_white"%d"col_balkanstory" sjemena sljiva za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
	}
	else if( vrsta == 2 )
	{
		cena = 220;
		if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca." );
		DajIgracuNovac( playerid, -(kolicina*cena) );
		PlayerInfo[ playerid ][ xSemeKruske ] += kolicina;
		SendInfoMessage( playerid, "Kupili ste "col_white"%d"col_balkanstory" sjemena kruske za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
	}
	else if( vrsta == 3 )
	{
		cena = 200;
		if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca." );
		DajIgracuNovac( playerid, -(kolicina*cena) );
		PlayerInfo[ playerid ][ xSemeJabuke ] += kolicina;
		SendInfoMessage( playerid, "Kupili ste "col_white"%d"col_balkanstory" sjemena jabuke za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
	}
	else if( vrsta == 4 )
	{
		cena = 140;
		if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca." );
		DajIgracuNovac( playerid, -(kolicina*cena) );
		PlayerInfo[ playerid ][ xSemeKupusa ] += kolicina;
		SendInfoMessage( playerid, "Kupili ste "col_white"%d"col_balkanstory" sjemena kupusa za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
	}
	else if( vrsta == 5 )
	{
		cena = 160;
		if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca." );
		DajIgracuNovac( playerid, -(kolicina*cena) );
		PlayerInfo[ playerid ][ xSemeRuze ] += kolicina;
		SendInfoMessage( playerid, "Kupili ste "col_white"%d"col_balkanstory" sjemena ruza za "col_white"%d"col_balkanstory"$.", kolicina, (kolicina*cena) );
	}
	else return GRESKA( playerid, "Pogresan broj vrste." );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:posadibiljku( playerid, params[] )
{
	new fid = PlayerInfo[ playerid ][ xFieldID ], vrsta, Float:Pos[ 3 ], string[ 180 ];
	if( IsPlayerInDynamicArea( playerid, fieldInfo[ fid ][ fieldRectAngle ] ) )
	{
		if( fieldInfo[ fid ][ fieldStalkNumber ] == 50 ) return GRESKA( playerid, "Ovo imanje vec ima maksimalan broj posadjenih biljaka( 50 )." );
		if( sscanf( params, "i", vrsta ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/posadibiljku [ broj vrste ]");
			SendClientMessagee( playerid, BELA, "[Vrsta] 1. Sljiva | 2. Kruska | 3. Jabuka | 4. Kupus | 5. Ruze");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		if( vrsta == 1 )
		{
			if( PlayerInfo[ playerid ][ xSemeSljive ] == 0 ) return GRESKA( playerid, "Nemas sjemena za posaditi ruze." );
			new id = NextStalkID( MAX_STALKS );
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			stalkInfo[ id ][ sfieldID ] = fid;
			stalkInfo[ id ][ sObjectID ] = 777;
			stalkInfo[ id ][ sPlanted ] = true;
			stalkInfo[ id ][ sGrow ] = false;
			stalkInfo[ id ][ sType ] = BILJKA_SLJIVA;
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 20;
			stalkInfo[ id ][ sPos ][ 0 ] = Pos[ 0 ];
			stalkInfo[ id ][ sPos ][ 1 ] = Pos[ 1 ];
			stalkInfo[ id ][ sPos ][ 2 ] = Pos[ 2 ];
			stalkInfo[ id ][ sObject ] = CreateDynamicObject( 777, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ]-4, 0.0000000, 0.0000000, 0.0000000 );
			format( string, sizeof( string ), "{09AFFF}| SLJIVA |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );
			stalkInfo[ id ][ s3D ] = CreateDynamic3DTextLabel( string, -1, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 15 );
			Stalk_Save( id );
			fieldInfo[ fid ][ fieldStalkNumber ]++;
			Field_Save( fid );
		}
		else if( vrsta == 2 )
		{
			if( PlayerInfo[ playerid ][ xSemeKruske ] == 0 ) return GRESKA( playerid, "Nemas sjemena za posaditi ruze." );
			new id = NextStalkID( MAX_STALKS );
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			stalkInfo[ id ][ sfieldID ] = fid;
			stalkInfo[ id ][ sObjectID ] = 673;
			stalkInfo[ id ][ sPlanted ] = true;
			stalkInfo[ id ][ sGrow ] = false;
			stalkInfo[ id ][ sType ] = BILJKA_KRUSKA;
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 22;
			stalkInfo[ id ][ sPos ][ 0 ] = Pos[ 0 ];
			stalkInfo[ id ][ sPos ][ 1 ] = Pos[ 1 ];
			stalkInfo[ id ][ sPos ][ 2 ] = Pos[ 2 ];
			stalkInfo[ id ][ sObject ] = CreateDynamicObject( 673, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ]-4, 0.0000000, 0.0000000, 0.0000000 );
			format( string, sizeof( string ), "{FFFF04}| KRUSKA |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );
			stalkInfo[ id ][ s3D ] = CreateDynamic3DTextLabel( string, -1, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 15 );
			Stalk_Save( id );
			fieldInfo[ fid ][ fieldStalkNumber ]++;
			Field_Save( fid );
		}
		else if( vrsta == 3 )
		{
			if( PlayerInfo[ playerid ][ xSemeJabuke ] == 0 ) return GRESKA( playerid, "Nemas sjemena za posaditi ruze." );
			new id = NextStalkID( MAX_STALKS );
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			stalkInfo[ id ][ sfieldID ] = fid;
			stalkInfo[ id ][ sObjectID ] = 773;
			stalkInfo[ id ][ sPlanted ] = true;
			stalkInfo[ id ][ sGrow ] = false;
			stalkInfo[ id ][ sType ] = BILJKA_JABUKA;
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 24;
			stalkInfo[ id ][ sPos ][ 0 ] = Pos[ 0 ];
			stalkInfo[ id ][ sPos ][ 1 ] = Pos[ 1 ];
			stalkInfo[ id ][ sPos ][ 2 ] = Pos[ 2 ];
			stalkInfo[ id ][ sObject ] = CreateDynamicObject( 773, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ]-4, 0.0000000, 0.0000000, 0.0000000 );
			format( string, sizeof( string ), "{80FF00}| JABUKA |\nPlodovi jos nisu zreli za branje!\nVrijeme do sazrijevanja: %dh i %dmin", stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );
			stalkInfo[ id ][ s3D ] = CreateDynamic3DTextLabel( string, -1, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 15 );
			Stalk_Save( id );
			fieldInfo[ fid ][ fieldStalkNumber ]++;
			Field_Save( fid );
		}
		else if( vrsta == 4 )
		{
			if( PlayerInfo[ playerid ][ xSemeKupusa ] == 0 ) return GRESKA( playerid, "Nemas sjemena za posaditi ruze." );
			new id = NextStalkID( MAX_STALKS );
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			stalkInfo[ id ][ sfieldID ] = fid;
			stalkInfo[ id ][ sObjectID ] = 804;
			stalkInfo[ id ][ sPlanted ] = true;
			stalkInfo[ id ][ sGrow ] = false;
			stalkInfo[ id ][ sType ] = BILJKA_KUPUS;
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 18;
			stalkInfo[ id ][ sPos ][ 0 ] = Pos[ 0 ];
			stalkInfo[ id ][ sPos ][ 1 ] = Pos[ 1 ];
			stalkInfo[ id ][ sPos ][ 2 ] = Pos[ 2 ];
			stalkInfo[ id ][ sObject ] = CreateDynamicObject( 804, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 0.0000000, 0.0000000, 0.0000000 );
			format( string, sizeof( string ), "{458A00}| KUPUS |\nPlod jos nije zreo za branje!\nVrijeme do sazrijevanja: %dh i %dmin", stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );
			stalkInfo[ id ][ s3D ] = CreateDynamic3DTextLabel( string, -1, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 15 );
			Stalk_Save( id );
			fieldInfo[ fid ][ fieldStalkNumber ]++;
			Field_Save( fid );
		}
		else if( vrsta == 5 )
		{
			if( PlayerInfo[ playerid ][ xSemeRuze ] == 0 ) return GRESKA( playerid, "Nemas sjemena za posaditi ruze." );
			new id = NextStalkID( MAX_STALKS );
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			stalkInfo[ id ][ sfieldID ] = fid;
			stalkInfo[ id ][ sObjectID ] = 870;
			stalkInfo[ id ][ sPlanted ] = true;
			stalkInfo[ id ][ sGrow ] = false;
			stalkInfo[ id ][ sType ] = BILJKA_RUZE;
			stalkInfo[ id ][ sMinut ] = 0;
			stalkInfo[ id ][ sHour ] = 15;
			stalkInfo[ id ][ sPos ][ 0 ] = Pos[ 0 ];
			stalkInfo[ id ][ sPos ][ 1 ] = Pos[ 1 ];
			stalkInfo[ id ][ sPos ][ 2 ] = Pos[ 2 ];
			stalkInfo[ id ][ sObject ] = CreateDynamicObject( 870, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ]-0.8, 0.0000000, 0.0000000, 0.0000000 );
			format( string, sizeof( string ), "{F90000}| RUZE |\nCvijet jos nije zreo za branje!\nVrijeme do sazrijevanja: %dh i %dmin", stalkInfo[ id ][ sHour ], stalkInfo[ id ][ sMinut ] );
			stalkInfo[ id ][ s3D ] = CreateDynamic3DTextLabel( string, -1, Pos[ 0 ]+1, Pos[ 1 ], Pos[ 2 ], 15 );
			Stalk_Save( id );
			fieldInfo[ fid ][ fieldStalkNumber ]++;
			Field_Save( fid );
		} else return GRESKA( playerid, "Pogresan broj vrste." );
		
	} else return GRESKA( playerid, "Morati biti na svom imanju." );
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupivozilo( playerid, params[] )
{ 
	if( ServerInfo[ KupovinaVozila ] == false ) return GRESKA( playerid, "Trenutno nije moguce kupovanje auta po salonima." );
	if( PlayerInfo[ playerid ][ xWanted ] > 0 ) return GRESKA( playerid, "Ne mozes kupovati kad imas Wanted Level." );
	if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) { }
	else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) { }
	else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) { }
	else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 )
	{
		if( PlayerInfo[ playerid ][ xDonatorSlot ] == true ) { }
		else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
	}
	else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );

	new as = GetNearestSalon( playerid );
	AutoSalonBojaVozila[ playerid ] = 15;
	new bojica = AutoSalonBojaVozila[ playerid ];
	if( GetNearestSalon( playerid ) == -1 ) return GRESKA( playerid, "Nisi na pickupu auto salona." );
	if( AutoSalon[ as ][ AlreadyBuying ] == true ) return GRESKA( playerid, "Neko vec kupuje vozilo!" );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Morate biti level 3+." );
	
	new slotid = AutoSalon[ as ][ aIzlogVeh ];
	AutoSalon[ as ][ AlreadyBuying ] = true;
	PlayerBuyingAS[ playerid ] = as;
	ModelCar[ playerid ] = 0;
	ClearChat( playerid, 25 );
	TogPlayerHud( playerid );
	BuyCarTDControl( playerid, true );
	BojaVozilaTDControl( playerid, true );
	
	new string[ 128 ];
	format( string, sizeof( string ), "%s", ImeVozila[ AutoSalon[ as ][ aVehModel ][ 0 ]-400 ] );
	PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 3 ], string );
	
	format( string, sizeof( string ), "~w~%d$", VehPrice[ AutoSalon[ as ][ aVehModel ][ 0 ]-400 ][ 1 ] );
	PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 7 ], string );
	
	format( string, sizeof( string ), "~w~%dg", VehPrice[ AutoSalon[ as ][ aVehModel ][ ModelCar[ playerid ] ]-400 ][ 2 ] );
	PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 11 ], string );
	
	PlayerTextDrawSetPreviewModel( playerid, BuyCar[ playerid ][ 5 ],AutoSalon[ as ][ aVehModel ][ ModelCar[ playerid ] ] );
	PlayerTextDrawSetPreviewModel( playerid, BuyCar[ playerid ][ 12 ],AutoSalon[ as ][ aVehModel ][ ModelCar[ playerid ] ] );
	PlayerTextDrawSetPreviewModel( playerid, BuyCar[ playerid ][ 9 ],AutoSalon[ as ][ aVehModel ][ ModelCar[ playerid ] ] );

	PlayerTextDrawSetPreviewVehCol(playerid, BuyCar[ playerid ][ 5 ],bojica, bojica);
	PlayerTextDrawSetPreviewVehCol(playerid, BuyCar[ playerid ][ 12 ],bojica, bojica);
	PlayerTextDrawSetPreviewVehCol(playerid, BuyCar[ playerid ][ 9 ],bojica, bojica);
	
	PlayerTextDrawShow( playerid, BuyCar[ playerid ][ 5 ] );
	PlayerTextDrawShow( playerid, BuyCar[ playerid ][ 12 ] );
	PlayerTextDrawShow( playerid, BuyCar[ playerid ][ 9 ] );

	SetPlayerCameraPos( playerid, AutoSalon[ as ][ aCameraPos ][ 0 ], AutoSalon[ as ][ aCameraPos ][ 1 ], AutoSalon[ as ][ aCameraPos ][ 2 ] );
	SetPlayerCameraLookAt( playerid, AutoSalon[ as ][ aCameraLookAt ][ 0 ], AutoSalon[ as ][ aCameraLookAt ][ 1 ], AutoSalon[ as ][ aCameraLookAt ][ 2 ] );

	TogglePlayerControllable( playerid, false);

	Dimi_DestroyVehicle( VehicleInfo[ slotid ][ vID ] );
	VehicleInfo[ slotid ][ vID ] = Dimi_CreateVehicle( slotid, VehicleInfo[ slotid ][ vUsage ], VehicleInfo[ slotid ][ vOrganization ], VehicleInfo[ slotid ][ vJob ], VehicleInfo[ slotid ][ vFuelProperty ], AutoSalon[ as ][ aVehModel ][ 0 ], VehicleInfo[ slotid ][ vLokacijaX ], VehicleInfo[ slotid ][ vLokacijaY ], VehicleInfo[ slotid ][ vLokacijaZ ]+1.0, VehicleInfo[ slotid ][ vLokacijaA ], bojica, bojica, -1 );
	SetVehicleVirtualWorld( VehicleInfo[ slotid ][ vID ], AutoSalon[ as ][ aVW ] );
	LinkVehicleToInterior( VehicleInfo[ slotid ][ vID ], AutoSalon[ as ][ aInt ] );
	SelectTextDraw( playerid, UGBOJA );
	
	
	///////////////////////////////////////////////////////////////////////////////////////////////////
	if( VoziloJeDizel( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 17 ], "Gorivo: ~w~Dizel" );
	}
	else if( VoziloJeBenzin( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 17 ], "Gorivo: ~w~Benzin" );
	}
	else if( VoziloJeKerozin( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 17 ], "Gorivo: ~w~Kerozin" );
	}
	else if( VoziloNemaGorivo( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 17 ], "Gorivo: ~w~N/A" );
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////
	if( VoziloJe2Vrata( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 18 ], "Broj vrata: ~w~2" );
	}
	else if( VoziloJe4Vrata( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 18 ], "Broj vrata: ~w~4" );
	}
	else if( VoziloNemaVrata( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 18 ], "Broj vrata: ~w~0" );
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////
	if( SportVozilo( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~sportsko" );
	}
	else if( PutnickoVozilo( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~putnicko" );
	}
	else if( IsVehicleMotor( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~motocikl" );
	}
	else if( IsVehicleBajs( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~bicikl" );
	}
	else if( IsVehicleLetelica( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~letilica" );
	}
	else if( IsVehicleBrod( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~plovilo" );
	}
	else if( TeretnoVozilo( VehicleInfo[ slotid ][ vID ] ) )
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~teretno" );
	}
	else
	{
		PlayerTextDrawSetString( playerid, BuyCar[ playerid ][ 19 ], "Vrsta: ~w~N/A" );
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:asport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( KreiranAutoSalon[ playerid ] == -1 ) return GRESKA( playerid, "Ne kreiras nijedan auto salon." );
	new as = KreiranAutoSalon[ playerid ];
	Dimi_SetPlayerPos( playerid, AutoSalon[ as ][ aPickupPos ][ 0 ], AutoSalon[ as ][ aPickupPos ][ 1 ], AutoSalon[ as ][ aPickupPos ][ 2 ] );
	SetCameraBehindPlayer( playerid );
	SetPlayerInterior( playerid, AutoSalon[ as ][ aInt ] );
	SetPlayerVirtualWorld( playerid, AutoSalon[ as ][ aVW ] );
	SendClientMessagee( playerid, UGBOJA, "Kada izadjes na cisti prostor kucaj '/veh 560 1 1' da spawnas vozilo." );
	SendClientMessagee( playerid, UGBOJA, "Kada spawnas vozilo i nadjes lokaciju gde ce biti dostavljena kupljena vozila kucaj /asbvozilo." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:asbvozilo( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu!" );
	new as = KreiranAutoSalon[ playerid ], Float:Pos[ 4 ], vehicleid = GetPlayerVehicleID( playerid );
	if( KreiranAutoSalon[ playerid ] == -1 ) return GRESKA( playerid, "Ne kreiras nijedan auto salon." );
	GetVehiclePos( vehicleid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	GetVehicleZAngle( vehicleid, Pos[ 3 ] );
	AutoSalon[ as ][ aVehBuyedPos ][ 0 ] = Pos[ 0 ];
	AutoSalon[ as ][ aVehBuyedPos ][ 1 ] = Pos[ 1 ];
	AutoSalon[ as ][ aVehBuyedPos ][ 2 ] = Pos[ 2 ];
	AutoSalon[ as ][ aVehBuyedPos ][ 3 ] = Pos[ 3 ];
	SaveSalon( as );
	Dimi_DestroyVehicle( vehicleid );
	AdminVozilo[ playerid ] = -1;
	SendInfoMessage( playerid, "Uspjesno si sacuvao poziciju za dostavljanje vozila." );

	new coordsstring[ 64 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "Unesite za svaki model vozila, kolicinu.\nPrimer: 5 6 10 23\n\n" );
	strcat( DialogStrgEx, "__________________________________________________________________\n");
	for( new i = 0; i < AutoSalon[ as ][ aMaxVehModel ]; i++ )
	{
		format( coordsstring, sizeof( coordsstring ), "Model %d - %s\n", (i+1), ImeVozila[ (AutoSalon[ as ][ aVehModel ][ i ]- 400) ] );
		strcat( DialogStrgEx, coordsstring ); 
	}
	ShowPlayerDialog( playerid, dialog_ASAMMOUNT, DSI, D_NASLOV, DialogStrgEx, D_ODABERI, D_NAZAD );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:garagesave( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu!" );
	new id = KreiraGarazu[ playerid ], Float:Pos[ 4 ], vehicleid = GetPlayerVehicleID( playerid );
	if( KreiraGarazu[ playerid ] == -1 ) return GRESKA( playerid, "Ne kreiras nijednu garazu." );
	GetVehiclePos( vehicleid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	GetVehicleZAngle( vehicleid, Pos[ 3 ] );
	garageInfo[ id ][ garageVehiclePos ][ 0 ] = Pos[ 0 ];
	garageInfo[ id ][ garageVehiclePos ][ 1 ] = Pos[ 1 ];
	garageInfo[ id ][ garageVehiclePos ][ 2 ] = Pos[ 2 ];
	garageInfo[ id ][ garageVehiclePos ][ 3 ] = Pos[ 3 ];
	Garage_Save( id );
	KreiraGarazu[ playerid ] = -1;
	Dimi_DestroyVehicle( vehicleid );
	SendInfoMessage( playerid, "Uspjesno si sacuvao poziciju i zavrsio kreiranje garaze." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ascamera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339 )
	{
		if( FlyMode[ playerid ] == true && flymodecamera[ playerid ][ cameramode ] == true )
		{
			new as = KreiranAutoSalon[ playerid ];
			new Float:fPX, Float:fPY, Float:fPZ,
				Float:fVX, Float:fVY, Float:fVZ,
				Float:object_x, Float:object_y, Float:object_z;

			const Float:fScale = 5.0;

			GetPlayerCameraPos( playerid, fPX, fPY, fPZ);
			GetPlayerCameraFrontVector( playerid, fVX, fVY, fVZ);
			object_x = fPX + floatmul( fVX, fScale );
			object_y = fPY + floatmul( fVY, fScale );
			object_z = fPZ + floatmul( fVZ, fScale );
			AutoSalon[ as ][ aCameraPos ][ 0 ]		= fPX;
			AutoSalon[ as ][ aCameraPos ][ 1 ]		= fPY;
			AutoSalon[ as ][ aCameraPos ][ 2 ]		= fPZ;
			AutoSalon[ as ][ aCameraLookAt ][ 0 ] 	= object_x;
			AutoSalon[ as ][ aCameraLookAt ][ 1 ] 	= object_y;
			AutoSalon[ as ][ aCameraLookAt ][ 2 ] 	= object_z;
			SaveSalon( as );
			CancelFlyMode( playerid );
			SendInfoMessage( playerid, "Uspjesno si sacuvao pozicije." );
			SendInfoMessage( playerid, "Sada koristi /asport da se vratis do auto salona." );
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:asvozilo( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu!" );
	new as = KreiranAutoSalon[ playerid ], Float:Pos[ 4 ], vehicleid = GetPlayerVehicleID( playerid );
	if( KreiranAutoSalon[ playerid ] == -1 ) return GRESKA( playerid, "Ne kreiras nijedan auto salon." );
	if( GetVehicleModel( AutoSalon[ as ][ aIzlogVeh ] ) != 0 ) return GRESKA( playerid, "Vec ste odradili ovaj korak." );

	GetVehiclePos( vehicleid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	GetVehicleZAngle( vehicleid, Pos[ 3 ] );

	for( new i = 1; i < MAX_CARS; i++ )
	{
		new fileauta[ 40 ];
		format(fileauta, sizeof( fileauta ), V_FILE, i);
		if( !fexist( fileauta ) )
		{
			VehicleInfo[ i ][ vOwned ] = 0;
			VehicleInfo[ i ][ vNeaktivnost ] = 0;
			VehicleInfo[ i ][ vKilometri ] = 0;
			VehicleInfo[ i ][ vMetri ] = 0;
			VehicleInfo[ i ][ vPrice ] = 0;
			strmid( VehicleInfo[ i ][ vOwner ], "Drzava", 0, strlen("Drzava"), 32);
			VehicleInfo[ i ][ vLocked ] = 1;
			VehicleInfo[ i ][ vLokacijaX ] = Pos[ 0 ];
			VehicleInfo[ i ][ vLokacijaY ] = Pos[ 1 ];
			VehicleInfo[ i ][ vLokacijaZ ] = Pos[ 2 ];
			VehicleInfo[ i ][ vLokacijaA ] = Pos[ 3 ];
			VehicleInfo[ i ][ vVirtualWorld ] = 0;
			VehicleInfo[ i ][ vInterior ] = 0;
			VehicleInfo[ i ][ vUsage ] = IZLOZBENO_VOZILO;
			VehicleInfo[ i ][ vJob ] = -1;
			VehicleInfo[ i ][ vOrganization ] = -1;
			VehicleInfo[ i ][ vFuelProperty ] = -1;
			VehicleInfo[ i ][ vColor1 ] = 0;
			VehicleInfo[ i ][ vColor2 ] = 0;
			VehicleInfo[ i ][ vModel ] = AutoSalon[ as ][ aVehModel ][ 0 ];
			VehicleInfo[ i ][ vReg ] = 1;
			VehicleInfo[ i ][ vRegVreme ] = 0;
			VehicleInfo[ i ][ vTeh ] = 1;
			VehicleInfo[ i ][ vGPS ] = 0;
			VehicleInfo[ i ][ vOsiguranje ] = 5;
			VehicleInfo[ i ][ vLock ] = 5;
			VehicleInfo[ i ][ vAlarm ] = 4;
			VehicleInfo[ i ][ vTuned ] = 0;
			VehicleInfo[ i ][ vNeon ] = 0;
			VehicleInfo[ i ][ vImobilizator ] = 5;
			VehicleInfo[ i ][ vSpoiler ] = 0;
			VehicleInfo[ i ][ vHood ] = 0;
			VehicleInfo[ i ][ vRoof ] = 0;
			VehicleInfo[ i ][ vSkirt ] = 0;
			VehicleInfo[ i ][ vLamps ] = 0;
			VehicleInfo[ i ][ vNitro ] = 0;
			VehicleInfo[ i ][ vExhaust ] = 0;
			VehicleInfo[ i ][ vWheels ] = 0;
			VehicleInfo[ i ][ vStereo ] = 0;
			VehicleInfo[ i ][ vHydraulics ] = 0;
			VehicleInfo[ i ][ vFrontBumper ] = 0;
			VehicleInfo[ i ][ vRearBumper ] = 0;
			VehicleInfo[ i ][ vVents ] = 0;
			VehicleInfo[ i ][ vPaintJob ] = 255;
			VehicleInfo[ i ][ vProvera ] = i;
			VehicleInfo[ i ][ vMaterijali ] = 0;
			#if nerp_droga == 1
			VehicleInfo[ i ][ vDrug ][ 0 ] = 0; VehicleInfo[ i ][ vDrug ][ 1 ] = 0; VehicleInfo[ i ][ vDrug ][ 2 ] = 0; VehicleInfo[ i ][ vDrug ][ 3 ] = 0; VehicleInfo[ i ][ vDrug ][ 4 ] = 0; VehicleInfo[ i ][ vDrug ][ 5 ] = 0;
			VehicleInfo[ i ][ vDrugCode ][ 0 ] = 0; VehicleInfo[ i ][ vDrugCode ][ 1 ] = 0; VehicleInfo[ i ][ vDrugCode ][ 2 ] = 0; VehicleInfo[ i ][ vDrugCode ][ 3 ] = 0; VehicleInfo[ i ][ vDrugCode ][ 4 ] = 0; VehicleInfo[ i ][ vDrugCode ][ 5 ] = 0;
			#endif
			VehicleInfo[ i ][ vMelee ] = 0; VehicleInfo[ i ][ vWeap1 ] = 0; VehicleInfo[ i ][ vAmmo1 ] = 0; VehicleInfo[ i ][ vWeap2 ] = 0; VehicleInfo[ i ][ vAmmo2 ] = 0;

			Dimi_DestroyVehicle( vehicleid );
			AdminVozilo[ playerid ] = -1;
			
			VehicleInfo[ i ][ vID ] = Dimi_CreateVehicle( i, IZLOZBENO_VOZILO, -1, -1, -1, VehicleInfo[ i ][ vModel ], VehicleInfo[ i ][ vLokacijaX ], VehicleInfo[ i ][ vLokacijaY ], VehicleInfo[ i ][ vLokacijaZ ]+1.0, VehicleInfo[ i ][ vLokacijaA ], VehicleInfo[ i ][ vColor1 ], VehicleInfo[ i ][ vColor2 ], 300000 );
			SetVehicleVirtualWorld( VehicleInfo[ i ][ vID ], AutoSalon[ as ][ aVW ] );
			LinkVehicleToInterior( VehicleInfo[ i ][ vID ], AutoSalon[ as ][ aInt ] );

			if( VoziloJeDizel( VehicleInfo[ i ][ vID ] ) ) VehicleInfo[ i ][ vFuelType ] = 1;
			else if( VoziloJeBenzin( VehicleInfo[ i ][ vID ] ) ) VehicleInfo[ i ][ vFuelType ] = 2;
			else if( VoziloJeKerozin( VehicleInfo[ i ][ vID ] ) ) VehicleInfo[ i ][ vFuelType ] = 3;
			else if( VoziloNemaGorivo( VehicleInfo[ i ][ vID ] ) ) VehicleInfo[ i ][ vFuelType ] = 4;
				
			VehicleInfo[ i ][ vFuel ] = getAmountFuel( VehicleInfo[ i ][ vID ] ); vCanDrive[ VehicleInfo[ i ][ vID ] ] = 1; Fuel[ VehicleInfo[ i ][ vID ] ] = getAmountFuel( VehicleInfo[ i ][ vID ] );
			UnLockCar( VehicleInfo[ i ][ vID ] ); ResetVehicleStatistics( VehicleInfo[ i ][ vID ] ); SetTablice( VehicleInfo[ i ][ vID ] );
			SaveVehicle( i );
			carspawntimer = 1;
			SetTimer("AntiSpawnCrash", 3000, 0);
					
			Dimi_SetPlayerPos( playerid, AutoSalon[ as ][ aPickupPos ][ 0 ], AutoSalon[ as ][ aPickupPos ][ 1 ], AutoSalon[ as ][ aPickupPos ][ 2 ] );
			SetPlayerInterior( playerid, AutoSalon[ as ][ aInt ] );
			SetPlayerVirtualWorld( playerid, AutoSalon[ as ][ aVW ] );

			AutoSalon[ as ][ aIzlogVeh ] = i;
			SaveSalon( as );

			break;
		}
	}
	SendInfoMessage( playerid, "Uspjesno si sacuvao vozilo." );
	SendClientMessagee( playerid, UGBOJA, "Sada trebas sacuvati poziciju kamere koja gleda ka vozilu u izlogu za listanje pri kupovini." );
	SendClientMessagee( playerid, UGBOJA, "Sa "col_white"~k~~GO_FORWARD~, ~k~~GO_BACK~, ~k~~GO_LEFT~ "col_balkanstory"and "col_white"~k~~GO_RIGHT~"col_balkanstory" pomerate kameru.");
	SendClientMessagee( playerid, UGBOJA, "Koristite "col_white"/ascamera"col_balkanstory" da sacuvate poziciju kamere kada nadjete odredjeni ugao.");
	SetTimerEx("FlyMode1", 1000, false, "d", playerid );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
#if nerp_droga == 1
CMD:orgpolje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( PoljeDroge[ playerid ] == -1 ) return GRESKA( playerid, "Niste zapoceli proces kreiranja polja droge." );
	new id = PoljeDroge[ playerid ], Float:Pos[ 3 ];
	
	GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	OI[ id ][ oDrugField ][ 0 ] = Pos[ 0 ];
	OI[ id ][ oDrugField ][ 1 ] = Pos[ 1 ];
	OI[ id ][ oDrugField ][ 2 ] = Pos[ 2 ];
	
	if( IsValidDynamic3DTextLabel( OrgField3d[ id ] ) )
		DestroyDynamic3DTextLabel( OrgField3d[ id ] );

	if( IsValidDynamicPickup( OrgFieldPickup[ id ] ) )
		DestroyDynamicPickup( OrgFieldPickup[ id ] );
		
	new string[ 128 ];
	format( string, sizeof( string ), ""col_balkanstory"|| POLJANA ||\n"col_white"Ova poljana je u vlasnistvu kriminalne organizacije:\n"col_balkanstory"%s", OI[ id ][ oName ] );
	OrgField3d[ id ] = CreateDynamic3DTextLabel( string, -1, OI[ id ][ oDrugField ][ 0 ], OI[ id ][ oDrugField ][ 1 ], OI[ id ][ oDrugField ][ 2 ], 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 50.0);
	OrgFieldPickup[ id ] = CreateDynamicPickup( 1239, 1, OI[ id ][ oDrugField ][ 0 ], OI[ id ][ oDrugField ][ 1 ], OI[ id ][ oDrugField ][ 2 ], 0, 0, -1, 50.0 );
	SaveOrganization( id );
	SendInfoMessage( playerid, "Uspjesno ste zavrsili kreiranje poljanje droge." );

	PoljeDroge[ playerid ] = -1;
	return true;
}
#endif
//////////////////////////////////////////////////////////////////////////////////
CMD:rokniupdate(playerid,params[])
{
	return cmd_srwupdate(playerid,params);
}
CMD:srwupdate( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( i != IPI )
		{
			TogglePlayerControllable( i, false );
			SavePlayer( i );
		}
	}
	GameTextForAll( "~w~Pokrenuto je ~y~odrzavanje ~w~i ~y~azuriranje ~w~servera, molimo Vas da napustite ~y~igru - hvala!", 15000, 5 );
	SendRconCommand( "hostname :[NE:RP]: - Nova Era - || Azuriranje... ||" );
	SendRconCommand( "password NOVA_ERA_NERP_UPDATE_SEX" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unprisonall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerInfo[ i ][ xZatvor ] != 0 )
			{
				new rand = random( sizeof( RandomCelije ) );
				Dimi_SetPlayerPos( i, RandomCelije[ rand ][ 0 ], RandomCelije[ rand ][ 1 ], RandomCelije[ rand ][ 2 ] );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", i );
				SetCameraBehindPlayer( i );
				TogglePlayerControllable( i, false );
				PlayerTextDrawHide(i,JailTD[i]);
				SetPlayerInterior( i, 0 );
				SetPlayerVirtualWorld( i, 0 );
				PlayerInfo[ i ][ xZatvor ] = 0;
				PlayerInfo[ i ][ xZatvorVreme ] = 0;
				SetPlayerWorldBounds( i, 20000.0000, -20000.0000, 20000.0000, -20000.0000 );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| A-UNPRISON || "SERVERBOJA_AQUA"%s {FFFFFF}je oslobodio sve igrace!", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kickall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI && PlayerInfo[ i ][ xAdmin ] < 1337 )
			{
				SendClientMessagee(i,-1,""col_yelow"_________________________| KICKED |____________________________");
				SendClientMessagee(i,-1," ");
				SendClientMessagee(i,-1,"Izbaceni ste sa servera od strane administratora!");
				SendClientMessagee(i,-1,"Moze biti da je u toku update, popravka bugova ili restart servera");
				SendClientMessagee(i,-1,"Discord: https://discord.gg/XkcSmSxFMe");
				SendClientMessagee(i,-1,"Vas BS Admin team!");
				SendClientMessagee(i,-1,""col_yelow"_______________________________________________________________");
				Dimi_Kick( i );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| A-KICK || "SERVERBOJA_AQUA"%s {FFFFFF}je kikovao sve igrace!", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proverarada( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	new target;
	if( sscanf( params, "u", target ) )
	{
		SendUsageMessage( playerid, "/proverarada [ ID/Ime ]");
		return 1;
	}
	if( target == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
	ShowAdminStats( playerid, target );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:id( playerid, params[] )
{
	new target;
	if( sscanf( params, "u", target ) )
	{
		SendUsageMessage( playerid, "/id [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( target ) )
	{
		if( target != INVALID_PLAYER_ID )
		{
			new name[ MAX_PLAYER_NAME ];
			GetPlayerName( target, name, sizeof( name ) );
			format( globalstring, sizeof( globalstring ), ""col_balkanstory"ID | {FFFFFF}%d "col_balkanstory"| Ime | {FFFFFF}%s", target, name );
			SendClientMessage( playerid, BELA, globalstring );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dopustipromenuimena( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/dopustipromenuimena [ ID/Ime ]");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID igraca." );
	SetPVarInt( id, "PlayerCanChangeName", 1 );
	SendClientMessageEx( id, -1, ""col_balkanstory"Ime | {FFFFFF}Dobili ste dopustenje za promjenu imena od strane "col_balkanstory"%s!",ImeIgraca( playerid ) );
	SendClientMessageEx( playerid, -1, ""col_balkanstory"Ime | {FFFFFF}Dopustili ste promjenu imena igracu "col_balkanstory"%s!", ImeIgraca( id ) );
	SendInfoMessage(id,"Za promjenu imena koristite /changename!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajlidera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 5 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/dajlidera [ ID/Ime ][ ID ORGE ]" );
			SendClientMessagee( playerid, BELA, "Listu orgi gledate komandom /server." );
			return 1;
		}
		new ImaFajl[40];
		format( ImaFajl, sizeof( ImaFajl ), O_FILE, kolicina );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == 0)
		{
			if( PlayerInfo[ id ][ xLider ] == 0 ) return GRESKA( playerid, "Taj igrac nije lider nijedne organizacije" );
			new OrgID = PlayerInfo[ id ][ xLider ];

			if( strcmp( ImeIgraca( id ), OI[ OrgID ][ oLider1 ], true ) == 0) { strmid( OI[ OrgID ][ oLider1 ], "Niko", 0, strlen( "Niko" ), ORG_LIDER); }
			else if( strcmp( ImeIgraca( id ), OI[ OrgID ][ oLider2 ], true ) == 0) { strmid( OI[ OrgID ][ oLider2 ], "Niko", 0, strlen( "Niko" ), ORG_LIDER ); }

			PlayerInfo[ id ][ xLider ] = 0;
			PlayerInfo[ id ][ xRank ] = 0;
			PlayerInfo[ id ][ xClan ] = 0;
			PlayerInfo[ id ][ xOrgUgovor ] = 0;
			PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
			PlayerInfo[ id ][ xSpawn ] = SetRandomSpawn( id );
			SetPlayerSkin( id, SetSexSkin( id ) );

			SaveOrganization( OrgID );
			
			SendClientMessageEx( id, -1, ""col_balkanstory"Leader | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"Leader {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"Leader | {FFFFFF}Skinuli ste poziciju "col_balkanstory"Leader {FFFFFF}igracu %s!", ImeIgraca( id ) );
			
			SavePlayer( id );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| LEADER || "SERVERBOJA_AQUA"%s {FFFFFF}skida lidera igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
		else
		{
			if( PlayerInfo[ id ][ xClan ] != 0 ) return GRESKA( playerid, "Taj igrac je vec clan neke organizacije" );
			if( PlayerInfo[ id ][ xLider ] != 0 ) return GRESKA( playerid, "Taj igrac je vec clan neke organizacije" );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta organizacija ne postoji." );

			if( OI[ kolicina ][ oSuspended ] ) return GRESKA( playerid, "Ova organizacija je zakljucana od strane vlasnika." );

			if( !strcmp( OI[ kolicina ][ oLider1 ], "Niko", true ) ) { strmid( OI[ kolicina ][ oLider1 ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), ORG_LIDER  ); }
			else if( !strcmp( OI[ kolicina ][ oLider2 ], "Niko", true ) ) { strmid( OI[ kolicina ][ oLider2 ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), ORG_LIDER  ); }
			else return GRESKA( playerid, "Ova organizacija vec ima 2 lidera." );

			PlayerInfo[ id ][ xLider ] = kolicina;
			PlayerInfo[ id ][ xClan ] = kolicina;
			PlayerInfo[ id ][ xOrgUgovor ] = 0;
			PlayerInfo[ id ][ xSpawn ] = SPAWN_BAZA;
			PlayerInfo[ id ][ xRank ] = 6;

			if( PlayerInfo[ id ][ xPol ] == 1 )
			{
				PlayerInfo[ id ][ xSkin ] = OI[ kolicina ][ oSkin6 ]; SetPlayerSkin( id, OI[ kolicina ][ oSkin6 ] );
			}
			else if( PlayerInfo[ id ][ xPol ] == 2 )
			{
				PlayerInfo[ id ][ xSkin ] = OI[ kolicina ][ oZSkin6 ]; SetPlayerSkin( id, OI[ kolicina ][ oZSkin6 ] );
			}

			SaveOrganization( kolicina );
			SendClientMessageEx( id, -1, ""col_balkanstory"Leader | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Leader {FFFFFF}organizacije %s od strane %s!",OI[ kolicina ][ oPreFix ],ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"Leader | {FFFFFF}Postavili ste poziciju "col_balkanstory"Leader {FFFFFF}organizacije %s igracu %s!",OI[ kolicina ][ oPreFix ],ImeIgraca( id ) );

			SavePlayer( id );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| LEADER || "SERVERBOJA_AQUA"%s {FFFFFF}daje lidera: "SERVERBOJA_AQUA"%s {FFFFFF}igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), OI[ kolicina ][ oPreFix ], ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:adajlidera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 5 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/adajlidera [ ID/Ime ][ ID ORGE ]" );
			SendClientMessagee( playerid, BELA, "Listu orgi gledate komandom /organizacije" );
			return 1;
		}
		new ImaFajl[40];
		format( ImaFajl, sizeof( ImaFajl ), O_FILE, kolicina );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == 0)
		{
			if( PlayerInfo[ id ][ xLider ] == 0 ) return GRESKA( playerid, "Taj igrac nije lider nijedne organizacije" );
			new OrgID = PlayerInfo[ id ][ xLider ];

			if( strcmp( ImeIgraca( id ), OI[ OrgID ][ oLider1 ], true ) == 0) { strmid( OI[ OrgID ][ oLider1 ], "Niko", 0, strlen( "Niko" ), ORG_LIDER); }
			else if( strcmp( ImeIgraca( id ), OI[ OrgID ][ oLider2 ], true ) == 0) { strmid( OI[ OrgID ][ oLider2 ], "Niko", 0, strlen( "Niko" ), ORG_LIDER ); }

			PlayerInfo[ id ][ xLider ] = 0;
			PlayerInfo[ id ][ xRank ] = 0;
			PlayerInfo[ id ][ xClan ] = 0;
			PlayerInfo[ id ][ xOrgUgovor ] = 0;
			PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
			PlayerInfo[ id ][ xSpawn ] = SetRandomSpawn( id );
			SetPlayerSkin( id, SetSexSkin( id ) );

			SaveOrganization( OrgID );

			SendClientMessageEx( id, -1, ""col_balkanstory"Leader | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"Leader {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"Leader | {FFFFFF}Skinuli ste poziciju "col_balkanstory"Leader {FFFFFF}igracu %s!", ImeIgraca( id ) );

			SavePlayer( id );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| LEADER || "SERVERBOJA_AQUA"%s {FFFFFF}skida lidera igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
		else
		{
			if( PlayerInfo[ id ][ xClan ] != 0 ) return GRESKA( playerid, "Taj igrac je vec clan neke organizacije" );
			if( PlayerInfo[ id ][ xLider ] != 0 ) return GRESKA( playerid, "Taj igrac je vec clan neke organizacije" );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta organizacija ne postoji." );

			if( OI[ kolicina ][ oSuspended ] ) return GRESKA( playerid, "Ova organizacija je zakljucana od strane vlasnika." );

			if( !strcmp( OI[ kolicina ][ oLider1 ], "Niko", true ) ) { strmid( OI[ kolicina ][ oLider1 ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), ORG_LIDER  ); }
			else if( !strcmp( OI[ kolicina ][ oLider2 ], "Niko", true ) ) { strmid( OI[ kolicina ][ oLider2 ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), ORG_LIDER  ); }
			else return GRESKA( playerid, "Ova organizacija vec ima 2 lidera." );

			PlayerInfo[ id ][ xLider ] = kolicina;
			PlayerInfo[ id ][ xClan ] = kolicina;
			PlayerInfo[ id ][ xOrgUgovor ] = 0;
			PlayerInfo[ id ][ xSpawn ] = SPAWN_BAZA;
			PlayerInfo[ id ][ xRank ] = 6;

			if( PlayerInfo[ id ][ xPol ] == 1 )
			{
				PlayerInfo[ id ][ xSkin ] = OI[ kolicina ][ oSkin6 ]; SetPlayerSkin( id, OI[ kolicina ][ oSkin6 ] );
			}
			else if( PlayerInfo[ id ][ xPol ] == 2 )
			{
				PlayerInfo[ id ][ xSkin ] = OI[ kolicina ][ oZSkin6 ]; SetPlayerSkin( id, OI[ kolicina ][ oZSkin6 ] );
			}

			SaveOrganization( kolicina );
			SendClientMessageEx( id, -1, ""col_balkanstory"Leader | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Leader {FFFFFF}organizacije %s od strane %s!",OI[ kolicina ][ oPreFix ],ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"Leader | {FFFFFF}Postavili ste poziciju "col_balkanstory"Leader {FFFFFF}organizacije %s igracu %s!",OI[ kolicina ][ oPreFix ],ImeIgraca( id ) );

			SavePlayer( id );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| LEADER || "SERVERBOJA_AQUA"%s {FFFFFF}daje lidera: "SERVERBOJA_AQUA"%s {FFFFFF}igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), OI[ kolicina ][ oPreFix ], ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}


//////////////////////////////////////////////////////////////////////////////////
CMD:pport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xPromoter ] >= 1 )
	{
	
		if( PlayerInfo[ playerid ][ xPromoter ] >= 1 )
		{
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristiti ovu komandu dok si u DM Zoni." );
			if( PoliceDuty[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na duznosti." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
		}
		if( PromoterPort[ playerid ] != 0 ) return GRESKA( playerid, "Jos %d sekundi do sledeceg porta.", PromoterPort[ playerid ] );

		ShowPlayerDialog( playerid, dialog_SELECTPPORT, DSL, D_NASLOV, "Promoter baza\nBanka\nMC Donalds\nOpstina\nBolnica\nTempo market\nAerodrom\nSpawn kolodvor\nSpawn plaza", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vport( playerid, params[] )
{ 
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1)//ok
	{
		if( PlayerInfo[ playerid ][ xVIPLevel ] >= 1 )
		{
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristiti ovu komandu dok si u DM Zoni." );
			if( PoliceDuty[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na duznosti." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
		}
		if( VIPPort[ playerid ] != 0 ) return GRESKA( playerid, "Jos %d sekundi do sledeceg porta.", VIPPort[ playerid ] );
		ShowPlayerDialog( playerid, dialog_SELECTVPORT, DSL, D_NASLOV, "Vip baza\nMC Donalds\nBanka\nBolnica\nLutrija\nZlatara\nAuto salon\nSpawn kolodvor\nSpawn plaza\nTempo market\nAerodrom", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tunecar( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xVIPLevel ] >= 5 )
	{
		if( PlayerInfo[ playerid ][ xVIPLevel ] >= 5 ) { if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes fixati vozilo dok imas wanted level." ); }
		if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes dok si na eventu." );
		PlayerTuningCar[ playerid ] = true;
		TuningTDControl( playerid, true );
		ShowPlayerDialog( playerid, dialog_TUNING, DSL, D_NASLOV, "Paintjobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nWheels\nCar Stereo\nHydraulics\nNitro", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:viphelp( playerid, params[] )
{
	if( PlayerInfo[playerid][xAdmin] >= 1 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 )
	{
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );

		//new DialogStrgEx[3000];

		strcat( DialogStrgEx,"NAPOMENA: Svi vip leveli mogu mijenjati skin preko skin td-a.\nDa bi promenili vas skin kucajte '/itds' i misem stisnite na \nvas skin i gornjem desnom uglu.\n\n");
		if( PlayerInfo[ playerid ][ xVIPLevel ] == 1)
		{
			strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 1 | "col_white" /vgoto /vport /rtc /rtcveh /g /dodatci /fixveh\n");
		}
		
		
		if( PlayerInfo[ playerid ][ xVIPLevel ] == 2 )
		{
			strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 2 | "col_white" /vgoto /port /rtc /rtcveh /g /dodatci /pm /vskin /fixveh /flip\n");
		}
		
		if( PlayerInfo[ playerid ][ xVIPLevel ] == 3 )
		{
			strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 3 | "col_white" /vgoto /port /rtc /rtcveh /g /dodatci /pm /vskin /nitro /mark /gotomark\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 3 | "col_white" /fixveh /flip /dboja\n");
		}
		
		if( PlayerInfo[ playerid ][ xVIPLevel ] == 4 )
		{
			strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 4 | "col_white" /vgoto /port /rtc /rtcveh /g /dodatci /pm /vskin /nitro /mark /gotomark\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 4 | "col_white" /fixveh /flip /getcar /vipgun /dboja  +2000$ svake plate\n");
		}
		
		if( PlayerInfo[ playerid ][ xVIPLevel ] == 5 )
		{
			strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 5 | "col_white" /goto /port /rtc /rtcveh /g /dodatci /pm /vskin /nitro /mark /gotomark\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 5 | "col_white" /fixveh /flip /getcar /vipgun /dboja /vjp /tunecar +4000$ i 2x respekti\n");
			strcat( DialogStrgEx, ""col_balkanstory"VIP 5 | "col_white" /pcc - Uzivajte!\n");
		}
		else if ( PlayerInfo[ playerid ][ xVIPLevel ] == 5 ) strcat( DialogStrgEx, ""col_balkanstory"VIP | "col_white" VI NEMATE VIP LEVEL!");
		strcat( DialogStrgEx, ""col_balkanstory"__________________________"col_white"__________________________\n");

		ShowPlayerDialog( playerid, dialog_HELP, DSMSG, ""col_balkanstory"VIP Komande", DialogStrgEx, "Ok", "" );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:apoeni( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLevel ] < 20 ) return GRESKA(playerid,"Samo lvl 20+ | Vas level nije dovoljan za upravljanje aktivnim poenima!");
	if( PlayerInfo[ playerid ][ xApoeni ] > 0 )
	{
		ShowPlayerDialog( playerid, dialog_APOENI, DSL, D_NASLOV, "VIP Level 1 - 2 APoena\nVIP Level 2 - 4 APoena\nVIP Level 3 - 6 APoena\nLevel UP - 3 APoena\n5g zlata - 3 APoena\n1 Respekt - 1 APoen\nKoliko ja imam aktivnih poena?\nSta su to APoeni?", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Nemate nikakvih a-poena, ne mozete manipulisati ovom komandom!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gm(playerid, params[]) {
	//if( UzeoDPlatu[playerid] == true ) return GRESKA(playerid, "Vec ste uzeli donator platu - sljedecu mozete pokupiti za sat vremena!");
	if( PlayerInfo[playerid][xSkriptaRank] == 1 ) {
		DajIgracuNovac(playerid, 100000000);
		//SendInfoMessage(playerid, "Uzeli ste $100.000.000 dolara kao donator platu - uzivajte igrajuci!");
	}
	else {
		return GRESKA( playerid, ""SERVERBOJA_BJELA"Ta komanda nije validna, ili ne postoji - ako vas nesto zanima pitajte!"SERVERBOJA_CRVENA" (/pomoc)");
	}
	return 1;
}

CMD:vipgun( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xVIPLevel ] >= 4 )
	{
		if( PlayerInfo[ playerid ][ xVIPLevel ] >= 4 )
		{
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes dok si u DM Zoni." );
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes iz auta." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes da uzmes oruzje dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes da uzmes oruzje dok si u zatvoru." );
		}
		ShowPlayerDialog( playerid, dialog_SELECTVGUN, DSL, D_NASLOV, "Shotgun [9.500$]\nPalica [1.000$]\nCvece [1.000$]\nDeagle [7.000$]\n9mm Pistol [4.000$]\nUzi [9.000$]\nMP5 [9.500$]\nM4 [11.000$]\nAK47[11.500$]\nPancir [12.000$]\nSniper [20.000$]", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajvipa( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id, kolicina, vreme;
	if( sscanf( params, "uid", id, kolicina, vreme ) )
	{
		SendUsageMessage( playerid, "/dajvipa [ ID/Ime ][ Level VIPA ][ vrijeme - u satima, 1 dan = 24 sata ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	if( kolicina == 0 )
	{
	
		PlayerInfo[ id ][ xVIPLevel ] = 0; 
		PlayerInfo[ id ][ xVipTime ] = 0;
		SetPlayerColor( id, 0xFFFFFF00 );
		SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Administrator %s vam je skinuo vip status.", ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Skinuli ste igracu: %s vip status.", ImeIgraca( id ) );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level vipa: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeVIP.log", string );
	}
	else if( kolicina == 1 || kolicina == 2 || kolicina == 3 || kolicina == 4 )
	{
		PlayerInfo[ id ][ xVIPLevel ] = kolicina; 
		PlayerInfo[ id ][ xVipTime ] = vreme;
		SavePlayer( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_VIP;
		SendClientMessageEx( id, SVETLOPLAVA, "Administrator %s vam je postavio vip status(level: %d) na %d sati.",ImeIgraca( playerid ) , kolicina, vreme );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Postavili ste igracu: %s vip status(level: %d) na %d sati.",ImeIgraca( id ) , kolicina, vreme );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level vipa: %d | Vreme trajanja paketa: %d sati", ImeIgraca( playerid ), ImeIgraca( id ), kolicina, vreme );
		LogSave( "Ostalo/LogMakeVIP.log", string );
	}
	else if( kolicina == 5 ) {
		PlayerInfo[ id ][ xVIPLevel ] = kolicina;
		PlayerInfo[ id ][ xVipTime ] = vreme;
		SavePlayer(id);
		PlayerInfo[ id ][ xSpawn ] = SPAWN_VIP;
		SendClientMessageEx( id, SVETLOPLAVA, "V.I.P. 5 | Administrator %s Vam je postavio Master donator status!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Postavili ste igracu: %s Master Donator status!",ImeIgraca( id ) );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level vipa: %d | Vreme trajanja paketa: %d sati", ImeIgraca( playerid ), ImeIgraca( id ), kolicina, vreme );
		LogSave( "Ostalo/LogMakeVIP.log", string );
	}
	else return GRESKA( playerid, "Pogresan level vipa.( 0, 1, 2, 3, 4, 5 )" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:donatorslot( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");

	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/donatorslot [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	
	if( PlayerInfo[ playerid ][ xDonatorSlot ] == true )
	{
		SendClientMessageEx( id, SVETLOPLAVA, "Admin %s vam je skinuo dozvolu za 4ti slot vozila.", ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Skinuli ste dozvolu igracu %s za 4ti slot vozila.", ImeIgraca( id ) );
		PlayerInfo[ playerid ][ xDonatorSlot ] = false;
		SavePlayer( playerid );
	}
	else if( PlayerInfo[ playerid ][ xDonatorSlot ] == false )
	{
		SendClientMessageEx( id, SVETLOPLAVA, "Admin %s vam je dozvolio 4ti slot vozila %d$.", ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Dozvolili ste igracu %s 4ti slot vozila.", ImeIgraca( id ) );
		PlayerInfo[ playerid ][ xDonatorSlot ] = true;
		SavePlayer( playerid );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajnovac( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	
	new id, kolicina;
	if( sscanf( params, "ui", id, kolicina ) )
	{
		SendUsageMessage( playerid, "/dajnovac [ ID/Ime ][ novac ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	DajIgracuNovac( id, kolicina );
	SendClientMessageEx( id, SVETLOPLAVA, "Admin %s vam je dao %d$.",ImeIgraca( playerid ), kolicina );
	SendClientMessageEx( playerid, SVETLOPLAVA, "Dali ste igracu: %s %d$.",ImeIgraca( id ), kolicina );

	new string1[ 128 ];
	format( string1, sizeof( string1 ), "Admin %s je dao %d$ igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	LogSave( "Ostalo/LogGiveMoneyAdmin.log", string1 );

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:skiniadmina( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 2 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	SacuvajAdmina( playerid );
	SetPlayerColor( playerid, 0xFFFFFF00 );
	PlayerInfo[ playerid ][ xAdmin ] = 0;
	PlayerInfo[ playerid ][ xSkin ] = SetSexSkin( playerid );
	PlayerInfo[ playerid ][ xSpawn ] = SetRandomSpawn( playerid );
	SetPlayerSkin( playerid, SetSexSkin( playerid ) );
	SavePlayer( playerid );
	Dimi_SetPlayerArmour( playerid, 0 );
	AdminDuty[ playerid ] = false;
	SendInfoMessage( playerid, "Skinuo si sam sebi Admin poziciju." );
	format( globalstring, sizeof( globalstring ), "|| AST-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida sebi Administratora!", ImeIgraca( playerid ) );
	AdminPoruka( -1, globalstring );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajsrvrank( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
	new id, kolicina;
	if( sscanf( params, "ui", id, kolicina ) )
	{
		SendUsageMessage( playerid, "/dajsrvrank [ ID/Ime ][ rank ]");
		SendClientMessagee( playerid, BELA, "1 - Skripter | 2 - Dizajner | 3 - Mapper" );
		SendClientMessagee( playerid, BELA, "4 - Vodja lidera | 5 - Vodja promotera | 6 - Suvlasnik" );
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	if( kolicina < 0 || kolicina > 6 ) return GRESKA( playerid, "Pogresan broj ranka( 0 do 6 )." );

	PlayerInfo[ id ][ xSkriptaRank ] = kolicina;
	SavePlayer( id );
	SendInfoMessage( playerid, "Postavili ste rank igracu %s.", ImeIgraca( id ) );
	SendInfoMessage( id, "%s vam je postavio rank.", ImeIgraca( playerid ) );
	
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:dajadmina( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/dajadmina [ ID/Ime ][ Level 0-6 | 1337-1339 ]");
			return 1;
		}
		//if(id == playerid) return greska(playerid, "Ne mozete to sam sebi mijenjati.");
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( PlayerInfo[id][xLevel] < 10 || PlayerInfo[id][xLevel] == 10 ) return GRESKA(playerid,"Taj igrac nema dovoljan level za tu poziciju!");
		if( kolicina == 0 )
		{

			SacuvajAdmina( id );
			SetPlayerColor( id, 0xFFFFFFFF );
			PlayerInfo[ id ][ xAdmin ] = 0;
			PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
			PlayerInfo[ id ][ xSpawn ] = SetRandomSpawn( id );
			SetPlayerSkin( id, SetSexSkin( id ) );
			SavePlayer( id );
			Dimi_SetPlayerArmour( id, 0 );
			AdminDuty[ id ] = false;
			Dimi_SetPlayerHealth(id,-23);

			SendClientMessageEx( id, -1, ""col_balkanstory"ADMIN | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"Administratora {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"ADMIN | {FFFFFF}Skinuli ste poziciju "col_balkanstory"Administratora {FFFFFF}igracu %s!", ImeIgraca( id ) );
			

			new string[ 128 ];
			format( string, sizeof( string ), "Admin %s | Igrac: %s | Level Admin: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
			LogSave( "Ostalo/LogMakeAdmin.log", string );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| A-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida Admina igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
		if( kolicina >=1 && kolicina <=5  )
		{
			SendClientMessageEx( id, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Administrator level %d {FFFFFF}od strane %s!", kolicina, ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavili ste poziciju "col_balkanstory"Administrator level %d {FFFFFF}igracu %s!", kolicina, ImeIgraca( id ) );
		}

		if( kolicina == 6 )
		{
			SendClientMessageEx( id, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Head Administratora {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavili ste poziciju "col_balkanstory"Head Administratora {FFFFFF}igracu %s!", ImeIgraca( id ) );
		}
		
		if( kolicina == 1337 )
		{
			if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
			SendClientMessageEx( id, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Direktora {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavili ste poziciju "col_balkanstory"Direktora {FFFFFF}igracu %s!", ImeIgraca( id ) );
		}
		if( kolicina == 1339 )
		{
			if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
			SendClientMessageEx( id, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Vlasnika {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"ADMIN | {FFFFFF}Postavili ste poziciju "col_balkanstory"Vlasnika {FFFFFF}igracu %s!", ImeIgraca( id ) );
		}
		
		new randkod = 10000 + random(89999);
		PlayerInfo[ id ][ xAKod ] = randkod;
		PlayerInfo[ id ][ xAdmin ] = kolicina;
		SavePlayer( id );
		SacuvajAdmina( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_ADMIN;
		
		
		format( globalstring, sizeof( globalstring ), "{FF0000}|| A-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje Admina igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level Admina: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeAdmin.log", string );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajpromotera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xSkriptaRank ] == 5 || PlayerInfo[ playerid ][ xPromoter ] == 2)
	{

		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/dajpromotera [ ID/Ime ][ 0-1 ili 2 ]");
			return 1;
		}
		//if(id == playerid) return greska(playerid, "Ne mozete to sam sebi mijenjati.");
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( PlayerInfo[id][xLevel] < 3 || PlayerInfo[id][xLevel] == 3 ) return GRESKA(playerid,"Taj igrac nema dovoljan level za tu poziciju!");
		if( kolicina == 0 )
		{
			SetPlayerColor( id, 0xFFFFFF00 );
			PlayerInfo[ id ][ xPromoter ] = 0; SavePlayer( id );
			SendClientMessageEx( id, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"Promotera {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Skinuli ste poziciju "col_balkanstory"Promotera {FFFFFF}igracu %s!", ImeIgraca( id ) );
			
			format( globalstring, sizeof( globalstring ), "{FF0000}|| P-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida promotera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
		else if( kolicina == 1 )
		{
			PlayerInfo[ id ][ xPromoter ] = 1; SavePlayer( id );

			SendClientMessageEx( id, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Promotera {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavili ste poziciju "col_balkanstory"Promotera {FFFFFF}igracu %s!", ImeIgraca( id ) );
			
			format( globalstring, sizeof( globalstring ), "{FF0000}|| P-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje promotera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka(-1, globalstring );
		}
		else if( kolicina == 2 )
		{
			PlayerInfo[ id ][ xPromoter ] = 2; SavePlayer( id );

			SendClientMessageEx( id, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Vodje Promotera {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavili ste poziciju "col_balkanstory"Vodje Promotera {FFFFFF}igracu %s!", ImeIgraca( id ) );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| P-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje promotera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka(-1, globalstring );
		}
		else return GRESKA( playerid, "Pogresan level promotera.( 0 , 1 ,2 )" );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}

forward
	lmao
(
	lmao,
	str
	[]
)
;
public
	lmao
(
	lmao,
	str
	[]
)
{
	return
		1
		;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:adajpromotera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 5  )
	{

		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/adajpromotera [ ID/Ime ][ 0-1 ] (/dajpromotera je komanda za lvl2 promoter)");
			return 1;
		}
		//if(id == playerid) return greska(playerid, "Ne mozete to sam sebi mijenjati.");
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( PlayerInfo[id][xLevel] < 3 || PlayerInfo[id][xLevel] == 3 ) return GRESKA(playerid,"Taj igrac nema dovoljan level za tu poziciju!");
		if( kolicina == 0 )
		{
			SetPlayerColor( id, 0xFFFFFF00 );
			PlayerInfo[ id ][ xPromoter ] = 0; SavePlayer( id );
			SendClientMessageEx( id, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"Promotera {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Skinuli ste poziciju "col_balkanstory"Promotera {FFFFFF}igracu %s!", ImeIgraca( id ) );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| P-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida promotera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
		}
		else if( kolicina == 1 )
		{
			PlayerInfo[ id ][ xPromoter ] = 1; SavePlayer( id );

			SendClientMessageEx( id, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Promotera {FFFFFF}od strane %s!", ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, -1, ""col_balkanstory"PROMOTER | {FFFFFF}Postavili ste poziciju "col_balkanstory"Promotera {FFFFFF}igracu %s!", ImeIgraca( id ) );

			format( globalstring, sizeof( globalstring ), "{FF0000}|| P-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje promotera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka(-1, globalstring );
		}
		else return GRESKA( playerid, "Pogresan level promotera.( 0 - 1 )" );

	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajgm( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id, kolicina;
	if( sscanf( params, "ui", id, kolicina ) )
	{
		SendUsageMessage( playerid, "/dajgm [ ID/Ime ][ Level 0-4 ]");
		return 1;
	}
	//if(id == playerid) return greska(playerid, "Ne mozete to sam sebi mijenjati.");
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	if( PlayerInfo[id][xLevel] < 5 || PlayerInfo[id][xLevel] == 5 ) return GRESKA(playerid,"Taj igrac nema dovoljan level za tu poziciju!");
	if( kolicina == 0)
	{
		SetPlayerColor( id, 0xFFFFFFFF );
		SacuvajAdmina( id );
		PlayerInfo[ id ][ xHelper ] = 0;
		PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
		PlayerInfo[ id ][ xSpawn ] = SetRandomSpawn( id );
		SetPlayerSkin( id, SetSexSkin( id ) );
		SavePlayer( id );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"GameMaster {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Skinuli ste poziciju "col_balkanstory"GameMaster {FFFFFF}igracu %s!", ImeIgraca( id ) );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida G.Mastera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	}
	else if( kolicina >=1 && kolicina <=3  )
	{
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"GameMaster level %d {FFFFFF}od strane %s!", kolicina, ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavili ste poziciju "col_balkanstory"GameMaster level %d {FFFFFF}igracu %s!", kolicina, ImeIgraca( id ) );
		PlayerInfo[ id ][ xHelper ] = kolicina; SavePlayer( id ); SacuvajAdmina( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_HELPER;
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje GM lvl. %d igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		SetPlayerColor( id, 0xFFFFFFFF );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;

	}
	else if( kolicina == 4 )
	{
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Head GameMaster {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavili ste poziciju "col_balkanstory"Head GameMaster {FFFFFF}igracu %s!", ImeIgraca( id ) );
		PlayerInfo[ id ][ xHelper ] = kolicina; SavePlayer( id ); SacuvajAdmina( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_HELPER;
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: Head GameMaster", ImeIgraca( playerid ), ImeIgraca( id ) );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje Head GameMaster igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		SetPlayerColor( id, 0xFFFFFFFF );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;

	}
	else return GRESKA( playerid, "Pogresan level!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:adajgm( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id, kolicina;
	if( sscanf( params, "ui", id, kolicina ) )
	{
		SendUsageMessage( playerid, "/adajgm [ ID/Ime ][ Level 0-4 ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
	if( PlayerInfo[id][xLevel] < 10 || PlayerInfo[id][xLevel] == 10 ) return GRESKA(playerid,"Taj igrac nema dovoljan level za tu poziciju!");
	if( kolicina == 0)
	{
		SetPlayerColor( id, 0xFFFFFFFF );
		SacuvajAdmina( id );
		PlayerInfo[ id ][ xHelper ] = 0;
		PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
		PlayerInfo[ id ][ xSpawn ] = SetRandomSpawn( id );
		SetPlayerSkin( id, SetSexSkin( id ) );
		SavePlayer( id );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Skinuti ste sa pozicije "col_balkanstory"GameMaster {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Skinuli ste poziciju "col_balkanstory"GameMaster {FFFFFF}igracu %s!", ImeIgraca( id ) );
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-OFF || "SERVERBOJA_AQUA"%s {FFFFFF}skida G.Mastera igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	}
	else if( kolicina >=1 && kolicina <=3  )
	{
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"GameMaster level %d {FFFFFF}od strane %s!", kolicina, ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavili ste poziciju "col_balkanstory"GameMaster level %d {FFFFFF}igracu %s!", kolicina, ImeIgraca( id ) );
		PlayerInfo[ id ][ xHelper ] = kolicina; SavePlayer( id ); SacuvajAdmina( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_HELPER;
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: %d", ImeIgraca( playerid ), ImeIgraca( id ), kolicina );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje GM lvl. %d igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		SetPlayerColor( id, 0xFFFFFFFF );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;

	}
	else if( kolicina == 4 )
	{
		SendClientMessageEx( id, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavljeni ste na poziciju "col_balkanstory"Head GameMaster {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"GameMaster | {FFFFFF}Postavili ste poziciju "col_balkanstory"Head GameMaster {FFFFFF}igracu %s!", ImeIgraca( id ) );
		PlayerInfo[ id ][ xHelper ] = kolicina; SavePlayer( id ); SacuvajAdmina( id );
		PlayerInfo[ id ][ xSpawn ] = SPAWN_HELPER;
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s | Igrac: %s | Level GM: Head GameMaster", ImeIgraca( playerid ), ImeIgraca( id ) );
		LogSave( "Ostalo/LogMakeSage.log", string );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GM-MAKE || "SERVERBOJA_AQUA"%s {FFFFFF}daje Head GameMaster igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		SetPlayerColor( id, 0xFFFFFFFF );
		Dimi_SetPlayerArmour( id, 0 );
		AdminDuty[ id ] = false;

	}
	else return GRESKA( playerid, "Pogresan level!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:promenipol( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 5 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id, kolicina;
	if( sscanf( params, "ui", id, kolicina ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/promenipol [ ID/Ime ] [ pol ]");
		SendClientMessagee( playerid, BELA, "[Polovi] 1. Muski pol | 2. Zenski pol");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( kolicina == 1 )
	{
		PlayerInfo[ id ][ xPol ] = 1;
		PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Promenili ste igracu %s spol na musko.", ImeIgraca( id ) );
		return 1;
	}
	else if( kolicina == 2 )
	{
		PlayerInfo[ id ][ xPol ] = 2;
		PlayerInfo[ id ][ xSkin ] = SetSexSkin( id );
		SendClientMessageEx( playerid, SVETLOPLAVA, "Promenili ste igracu %s spol na zensko.", ImeIgraca( id ) );
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/promenipol [ ID/Ime ] [ pol ]");
		SendClientMessagee( playerid, BELA, "[Polovi] 1. Muski pol | 2. Zenski pol");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:sveskole( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/sveskole [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
	PlayerInfo[ id ][ xOsnovna ] = 3;
	PlayerInfo[ id ][ xSrednja ] = 6;
	PlayerInfo[ id ][ xFakultet ] = 15;
	SavePlayer( id );
	SendInfoMessage( playerid, "Dali ste sve skole %s.", ImeIgraca( id ) );
	SendInfoMessage( id, "Admin %s vam je postavio sve skole.", ImeIgraca( playerid ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rpplus( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/rpplus [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
	PlayerInfo[ id ][ xRPPoen ]++;
	SavePlayer( id );
	SendInfoMessage( playerid, "Dali ste RP Plus igracu %s.", ImeIgraca( id ) );
	SendInfoMessage( id, "Admin %s vam je dao RP Plus.", ImeIgraca( playerid ) );
	format( globalstring, sizeof( globalstring ), "{FF0000}|| RPPLUS || "SERVERBOJA_AQUA"%s {FFFFFF}je dao RP Poen igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
	SCMA( -1, globalstring );
	new string[ 128 ];
	format( string, sizeof( string ), "Admin %s je dao RP Plus igracu %s", ImeIgraca( playerid ), ImeIgraca( id ) );
	LogSave( "Ostalo/LogRPPlus.log", string );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rpminus( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/rpminus [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
	PlayerInfo[ id ][ xRPPoen ]--;
	SavePlayer( id );
	SendInfoMessage( playerid, "Dali ste RP Minus igracu %s.", ImeIgraca( id ) );
	SendInfoMessage( id, "Admin %s vam je dao RP Minus.", ImeIgraca( playerid ) );
	format( globalstring, sizeof( globalstring ), "{FF0000}|| RPMINUS || "SERVERBOJA_AQUA"%s {FFFFFF}je oduzeo RP Poen igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
	SCMA( -1, globalstring );

	new string[ 128 ];
	format( string, sizeof( string ), "Admin %s je dao RP Minus igracu %s", ImeIgraca( playerid ), ImeIgraca( id ) );
	LogSave( "Ostalo/LogRPMinus.log", string );

	if( PlayerInfo[ id ][ xRPPoen ] == -5 )
	{
		format( globalstring, sizeof( globalstring ), "{FF0000}|| RPMINUS || "SERVERBOJA_AQUA"%s {FFFFFF}je zbog 5 RP minusa obrisan nalog.", ImeIgraca( id ) );
		SCMA( -1, globalstring );
		new namebre[ MAX_PLAYER_NAME ];
		format( namebre, sizeof( namebre ), "%s", ImeIgraca( id ) );
		PlayerLogged[ id ] = false;
		CheckDeleteProperty( id );
		new stringbre[ 128 ];
		format( stringbre, sizeof( stringbre ), "Igracu %s je obrisan nalog. | Razlog: 5 rp minusa", ImeIgraca( id ) );
		LogSave( "Ostalo/LogBrisanjeAcc.log", stringbre );
		SendClientMessagee( id, -1, ""col_white"Tvoj nalog je obrisan sa servera. Razlog: 5 rp minusa." );
		Dimi_Kick( id );
		new oldname[ 40 ];
		format( oldname, sizeof( oldname ), "Korisnici/%s.ini", namebre );
		if( fexist( oldname ) ) fremove( oldname );
	}

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:deleteacc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new imeigraca[ 24 ], ifile[ 64];
	if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/deleteacc [ Ime_Prezime ]");

	format( ifile, 64, I_FILE, imeigraca );
	if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
	
	if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
	{
		new id = GetPlayerIdFromName( imeigraca );
		new namebre[ MAX_PLAYER_NAME ];
		format( namebre, sizeof( namebre ), "%s", ImeIgraca( id ) );
		PlayerLogged[ id ] = false;
		CheckDeleteProperty( id );
		
		new stringbre[ 128 ];
		format( stringbre, sizeof( stringbre ), "Igracu %s je obrisan nalog od admina %s", ImeIgraca( id ), ImeIgraca( playerid )  );
		LogSave( "Ostalo/LogDeleteAccCMD.log", stringbre );
		SendClientMessagee( id, -1, ""col_white"Tvoj nalog je obrisan sa servera - morati ces napraviti novi da nastavis igrati na serveru!" );
		Dimi_Kick( id );

		new oldname[ 40 ];
		format( oldname, sizeof( oldname ), "Korisnici/%s.ini", namebre );
		if( fexist( oldname ) ) fremove( oldname );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| DEL-ACC || "SERVERBOJA_AQUA"%s {FFFFFF}je obrisao account "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );

	}
	else
	{
		new stringbre[ 128 ];
		format( stringbre, sizeof( stringbre ), "Igracu %s je obrisan nalog od admina %s", imeigraca, ImeIgraca( playerid )  );
		LogSave( "Ostalo/LogDeleteAccCMD.log", stringbre );
		if( fexist( ifile ) ) fremove( ifile );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| DEL-ACC || "SERVERBOJA_AQUA"%s {FFFFFF}je obrisao account "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), imeigraca );
		AdminPoruka( -1, globalstring );
	
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:adajdozvolu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new item[ 32 ], id;
	if( sscanf( params, "s[32]u", item, id ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/adajdozvolu [kategorija] [ ID/Ime ]");
		SendClientMessagee( playerid, BELA, "[Kategorije] A(motor), B(auto), C1(Kombi), C2(Kamion), C3(Kamion sa prikolicom)");
		SendClientMessagee( playerid, BELA, "[Kategorije] D(brod), F(letelica), oruzje");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
	if( strcmp( item, "a", true ) == 0 )
	{
		PlayerInfo[ id ][ xMotorska ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za A kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za A kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "b", true ) == 0 )
	{
		PlayerInfo[ id ][ xVozacka ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za B kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za B kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "c1", true ) == 0 )
	{
		PlayerInfo[ id ][ xKamionskaC1 ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za C1 kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za C1 kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "c2", true ) == 0 )
	{
		PlayerInfo[ id ][ xKamionskaC2 ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za C2 kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za C2 kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "c3", true ) == 0 )
	{
		PlayerInfo[ id ][ xKamionskaC3 ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za C3 kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za C3 kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "d", true ) == 0 )
	{
		PlayerInfo[ id ][ xBrodska ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za D kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za D kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "f", true ) == 0 )
	{
		PlayerInfo[ id ][ xLetelica ] = 1;
		SendInfoMessage( playerid, "Dali ste dozvolu za F kategoriju igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za F kategoriju.", ImeIgraca( playerid ) );
	}
	else if( strcmp( item, "oruzje", true ) == 0 )
	{
		PlayerInfo[ id ][ xGunLicense ] = true;
		SendInfoMessage( playerid, "Dali ste dozvolu za oruzje igracu %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vam je dao dozvolu za oruzje.", ImeIgraca( playerid ) );
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/adajdozvolu [kategorija] [ID/Ime igraca] [Cena]");
		SendClientMessagee( playerid, BELA, "[Kategorije] A(motor), B(auto), C1(Kombi), C2(Kamion), C3(Kamion sa prikolicom)");
		SendClientMessagee( playerid, BELA, "[Kategorije] D(brod), F(letelica), oruzje");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:skiniorgkaznu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new id;
		if( sscanf( params, "u", id ) )
		{
			SendUsageMessage( playerid, "/skiniorgkaznu [ ID/Ime ]");
			return 1;
		}
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
		PlayerInfo[ id ][ xKazneniUgovor ] = 0;
		SavePlayer( id );
		SendClientMessageEx( id, -1, ""col_balkanstory"Org kazna | {FFFFFF}Skinuta vam je "col_balkanstory"Organizacijska kazna {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"Org kazna | {FFFFFF}Skinuli ste "col_balkanstory"Organizacijsku kaznu {FFFFFF}igracu %s!", ImeIgraca( id ) );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proveriinv( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/proveriinv [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "__________________________________________________________________\n");
	format( globalstring, sizeof( globalstring ),"*** %s ***\n", ImeIgraca( id ) );
	strcat( DialogStrgEx, globalstring );
	strcat( DialogStrgEx, "__________________________________________________________________\n");
	strcat( DialogStrgEx, "Slot | Ime predmeta | Kolicina\n" );
	strcat( DialogStrgEx, "__________________________________________________________________\n");
	for( new i = 0; i < 20; i++ )
	{
		format( globalstring, sizeof( globalstring ), "%d | %s | %d\n", i+1, inventoryInfo[ id ][ i ][ invItem ], inventoryInfo[ id ][ i ][ invQuantity ] );
		strcat( DialogStrgEx, globalstring );
	}
	strcat( DialogStrgEx, "__________________________________________________________________");
	ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:resetujinv( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/resetujinv [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
	Inventory_Clear( id );
	SendInfoMessage( playerid, "Ocistili ste inventory osobe %s.", ImeIgraca( id ) );
	SendInfoMessage( id, "%s vam je ocistio inventory.", ImeIgraca( playerid ) );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setskin( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/setskin [ ID/Ime ] [ id skin ]");
			return 1;
		}
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
		if( kolicina < 0 || kolicina > 311 ) return GRESKA( playerid, "Broj skina ide od 0 do 311." );
		PlayerInfo[ id ][ xSkin ] = kolicina; SavePlayer( id ); SetPlayerSkin( id, kolicina );
		
		SendClientMessageEx( id, -1, ""col_balkanstory"SKIN | {FFFFFF}Postavljen vam je "col_balkanstory"Skin {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"SKIN | {FFFFFF}Postavili ste "col_balkanstory"Skin {FFFFFF}igracu %s!", ImeIgraca( id ) );
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
CMD:pss( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/pss [ ID/Ime ] [ id skin ]");
			return 1;
		}
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
		if( kolicina < 0 || kolicina > 311 ) return GRESKA( playerid, "Broj skina ide od 0 do 311." );
		PlayerInfo[ id ][ xSkin ] = kolicina; SavePlayer( id ); SetPlayerSkin( id, kolicina );

		SendClientMessageEx( id, -1, ""col_balkanstory"SKIN | {FFFFFF}Postavljen vam je "col_balkanstory"Skin {FFFFFF}od strane %s!",ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"SKIN | {FFFFFF}Postavili ste "col_balkanstory"Skin {FFFFFF}igracu %s!", ImeIgraca( id ) );

	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setjob( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, kolicina;
		if( sscanf( params, "ui", id, kolicina ) )
		{
			SendUsageMessage( playerid, "/setjob [ ID/Ime ] [ id posla ]");
			SendUsageMessage( playerid, "1. Kosac Trave 2. Gradjevinar 3. Rudar 4. Komunalac 5. N/a");
			SendUsageMessage( playerid, "6. Pilot 7. Bus vozac 8. Mehanicar 9. Farmer 10. Dostavljac pizze");
			SendUsageMessage( playerid, "11. Taxista 12. Prevoznik Novca 13. Ribar 15. Masinovodja" );
			return 1;
		}
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru." );
		if( kolicina < 0 || kolicina > 15 ) return GRESKA( playerid, "Ne mozes ispod 0 i preko 15!" );
		PlayerInfo[ id ][ xPosao ] = kolicina; PlayerInfo[ id ][ xUgovor ] = 3; SavePlayer( id );
		
		SendClientMessageEx( id, -1, ""col_balkanstory"POSAO | {FFFFFF}Postavljen vam je posao ID: "col_balkanstory"%d {FFFFFF}od strane %s!",kolicina,ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, -1, ""col_balkanstory"POSAO | {FFFFFF}Postavili ste posao ID: "col_balkanstory"%d {FFFFFF}igracu %s!",kolicina, ImeIgraca( id ) );
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setstat( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new odabir[20], id, kolicina, string1[ 128 ];
	if( sscanf( params, "us[20]i", id, odabir, kolicina ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/setstat [ ID/Ime ] [ opcija ] [ kolicina ]");
		SendClientMessagee( playerid, BELA, "[Opcije] level, skin, pol, godine, posao, gradonacelnik, firma");
		SendClientMessagee( playerid, BELA, "[Opcije] respekt, vozilo1, vozilo2, vozilo3, vozilo4, apoen");
		SendClientMessagee( playerid, BELA, "[Opcije] imovina1, imovina2, imovina3, brojtelefona, garaza");
		SendClientMessagee( playerid, CRVENA, "Da bi igrac bio bez vozila,imovine,firme kljuc trebate staviti na -1");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if(strcmp(odabir,"gradonacelnik",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == 0 )
		{
			PlayerInfo[ id ][ xGradRank ] = 0; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je skinuo poziciju gradonacelnika..",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Skinuli ste igracu: %s poziciju gradonacelnika..",ImeIgraca( id ) );
			format( string1, sizeof( string1 ), "Admin %s je skinuo poziciju gradonacelnika igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else if( kolicina == GRAD_MAYOR )
		{
			PlayerInfo[ id ][ xGradRank ] = GRAD_MAYOR;  SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio poziciju gradonacelnika.",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s poziciju gradonacelnika.",ImeIgraca( id ) );
			format( string1, sizeof( string1 ), "Admin %s je postavio poziciju gradonacelnika igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else GRESKA( playerid, "Pogresan level gradonacelnika.( 0, 6 )" );
	}
	else if( strcmp( odabir, "level", true ) == 0 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		PlayerInfo[ id ][ xLevel ] = kolicina; SavePlayer( id ); SetPlayerScore( id, kolicina );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio level: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s level: %d.",ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio level %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if( strcmp( odabir, "apoen", true ) == 0 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		PlayerInfo[ id ][ xApoeni ] = kolicina; SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio apoen: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s apoen: %d.",ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio apoen %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if( strcmp( odabir, "brojtelefona", true ) == 0 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina < 100 || kolicina > 99999999 ) return GRESKA( playerid, "Broj moze ici od 100 do 99999999(3-8 cifara)!" );
		PlayerInfo[ id ][ xBrojTelefona ] = kolicina; SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio broj telefona: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s broj telefona: %d.",ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio broj telefona %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if(strcmp(odabir,"skin",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina < 1 || kolicina > 311 ) return GRESKA( playerid, "Broj skina ide od 1 do 311." );
		PlayerInfo[ id ][ xSkin ] = kolicina; SavePlayer( id ); SetPlayerSkin( id, kolicina );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio skin ID: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s skind ID: %d.", ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio skin %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if(strcmp(odabir,"godine",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		PlayerInfo[ id ][ xGodine ] = kolicina; SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio godine: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s godine: %d.", ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio godine na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if(strcmp(odabir,"pol",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina < 1 || kolicina > 2 ) return GRESKA( playerid, "Pol 1-musko , 2-zensko." );
		if( kolicina == 1 )
		{
			PlayerInfo[ id ][ xPol ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio pol: musko.",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s pol: musko.", ImeIgraca( id ) );
			format( string1, sizeof( string1 ), "Admin %s je postavio muski pol igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else if( kolicina == 2 )
		{
			PlayerInfo[ id ][ xPol ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio pol: zensko.",ImeIgraca( playerid ) );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s pol: zensko.", ImeIgraca( id ) );
			format( string1, sizeof( string1 ), "Admin %s je postavio zenski pol igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"posao",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		PlayerInfo[ id ][ xPosao ] = kolicina; PlayerInfo[ id ][ xUgovor ] = 3; SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio posao: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s posao: %d.", ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio posao %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if(strcmp(odabir,"respekt",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		PlayerInfo[ id ][ xRespekt ] = kolicina; SavePlayer( id );
		SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio respekte na: %d.",ImeIgraca( playerid ) , kolicina );
		SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s respekte na: %d.", ImeIgraca( id ) , kolicina );
		format( string1, sizeof( string1 ), "Admin %s je postavio respekte na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
	}
	else if(strcmp(odabir,"vozilo1",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xVoziloID ][ 0 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila1: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila1: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc vozila1 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), V_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), V_FILE, PlayerInfo[ id ][ xVoziloID ][ 0 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "To vozilo ne postoji." );
			if( VehicleInfo[ kolicina ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete samo privatna vozila da menjate." );
			PlayerInfo[ id ][ xVoziloID ][ 0 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila1: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila1: %d.", ImeIgraca( id ), kolicina );
			VehicleInfo[ kolicina ][ vOwned ] = 1; VehicleInfo[ kolicina ][ vLocked ] = 0;
			VehicleInfo[ kolicina ][ vNeaktivnost ] = 0; VehicleInfo[ kolicina ][ vPrice ] = VehPrice[ VehicleInfo[ kolicina ][ vModel ]- 400 ][ 1 ];
			strmid( VehicleInfo[ kolicina ][ vOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);  SaveVehicle( kolicina );
			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc vozila1 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"vozilo2",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xVoziloID ][ 1 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila2: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila2: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc vozila2 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), V_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), V_FILE, PlayerInfo[ id ][ xVoziloID ][ 1 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "To vozilo ne postoji." );
			if( VehicleInfo[ kolicina ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete samo privatna vozila da menjate." );
			PlayerInfo[ id ][ xVoziloID ][ 1 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila2: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila2: %d.", ImeIgraca( id ), kolicina );
			VehicleInfo[ kolicina ][ vOwned ] = 1; VehicleInfo[ kolicina ][ vLocked ] = 0;
			VehicleInfo[ kolicina ][ vNeaktivnost ] = 0; VehicleInfo[ kolicina ][ vPrice ] = VehPrice[ VehicleInfo[ kolicina ][ vModel ]- 400 ][ 1 ];
			strmid( VehicleInfo[ kolicina ][ vOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);  SaveVehicle( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc vozila2 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"vozilo3",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xVoziloID ][ 2 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila3: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila3: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc vozila3 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), V_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), V_FILE, PlayerInfo[ id ][ xVoziloID ][ 2 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "To vozilo ne postoji." );
			if( VehicleInfo[ kolicina ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete samo privatna vozila da menjate." );
			PlayerInfo[ id ][ xVoziloID ][ 2 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila3: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila3: %d.", ImeIgraca( id ), kolicina );
			VehicleInfo[ kolicina ][ vOwned ] = 1; VehicleInfo[ kolicina ][ vLocked ] = 0;
			VehicleInfo[ kolicina ][ vNeaktivnost ] = 0; VehicleInfo[ kolicina ][ vPrice ] = VehPrice[ VehicleInfo[ kolicina ][ vModel ]- 400 ][ 1 ];
			strmid( VehicleInfo[ kolicina ][ vOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);  SaveVehicle( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc vozila3 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"vozilo4",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xVoziloID ][ 3 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila4: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila4: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc vozila4 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), V_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), V_FILE, PlayerInfo[ id ][ xVoziloID ][ 3 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "To vozilo ne postoji." );
			if( VehicleInfo[ kolicina ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete samo privatna vozila da menjate." );
			PlayerInfo[ id ][ xVoziloID ][ 3 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc vozila4: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc vozila4: %d.", ImeIgraca( id ), kolicina );
			VehicleInfo[ kolicina ][ vOwned ] = 1; VehicleInfo[ kolicina ][ vLocked ] = 0;
			VehicleInfo[ kolicina ][ vNeaktivnost ] = 0; VehicleInfo[ kolicina ][ vPrice ] = VehPrice[ VehicleInfo[ kolicina ][ vModel ]- 400 ][ 1 ];
			strmid( VehicleInfo[ kolicina ][ vOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);  SaveVehicle( kolicina );
			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc vozila4 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"firma",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xFirmaID ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc firme: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc firme: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc firme igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), F_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), F_FILE, PlayerInfo[ id ][ xFirmaID ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta firma ne postoji." );
			PlayerInfo[ id ][ xFirmaID ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc firme: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc firme: %d.", ImeIgraca( id ), kolicina );
			BussinesInfo[ kolicina ][ bOwned ] = 1; BussinesInfo[ kolicina ][ bLocked ] = 0;
			BussinesInfo[ kolicina ][ bNeaktivnost ] = 0;
			BussinesInfo[ kolicina ][ bFacture ] = 100;
			strmid( BussinesInfo[ kolicina ][ bOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);
			Bussines_Refresh( kolicina ); SaveBussines( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc firme na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"garaza",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xGarageID ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc garaze: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc garaze: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc garaze igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), F_GARAGE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), F_GARAGE, PlayerInfo[ id ][ xGarageID ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta garaza ne postoji." );
			PlayerInfo[ id ][ xGarageID ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc garaze: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc garaze: %d.", ImeIgraca( id ), kolicina );
			garageInfo[ kolicina ][ garageOwned ] = true; garageInfo[ kolicina ][ garageLocked ] = false;
			strmid( garageInfo[ kolicina ][ garageOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);
			Garage_Refresh( kolicina ); Garage_Save( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc garaze na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"imovina1",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xProperty ][ 0 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 1: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 1: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc imovine1 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), IM_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), IM_FILE, PlayerInfo[ id ][ xProperty ][ 0 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta imovina ne postoji." );
			PlayerInfo[ id ][ xProperty ][ 0  ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 1: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 1: %d.", ImeIgraca( id ), kolicina );
			II[ kolicina ][ iOwned ] = 1; II[ kolicina ][ iLocked ] = 0;
			II[ kolicina ][ iNeaktivnost ] = 0;
			strmid( II[ kolicina ][ iOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);
			SaveProperty( kolicina ); PropertyRefresh( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc imovine1 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"imovina2",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xProperty ][ 1 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 2: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 2: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc imovine2 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), IM_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), IM_FILE, PlayerInfo[ id ][ xProperty ][ 1 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta imovina ne postoji." );
			PlayerInfo[ id ][ xProperty ][ 1  ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 2: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 2: %d.", ImeIgraca( id ), kolicina );
			II[ kolicina ][ iOwned ] = 1; II[ kolicina ][ iLocked ] = 0;
			II[ kolicina ][ iNeaktivnost ] = 0;
			strmid( II[ kolicina ][ iOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);
			SaveProperty( kolicina ); PropertyRefresh( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc imovine2 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	else if(strcmp(odabir,"imovina3",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] < 6) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( kolicina == -1 )
		{
			PlayerInfo[ id ][ xProperty ][ 2 ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 3: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 3: %d.", ImeIgraca( id ), kolicina );
			format( string1, sizeof( string1 ), "Admin %s je skinuo kljuc imovine3 igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		}
		else
		{
			new ImaFajl[ 50 ],ImaSFajl[ 50 ];
			format( ImaFajl, sizeof( ImaFajl ), IM_FILE, kolicina );
			format( ImaSFajl, sizeof( ImaSFajl ), IM_FILE, PlayerInfo[ id ][ xProperty ][ 2 ] );
			if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta imovina ne postoji." );
			PlayerInfo[ id ][ xProperty ][ 2  ] = kolicina; SavePlayer( id );
			SendClientMessageEx( id, SVETLOPLAVA, " Admin %s vam je postavio kljuc imovine 3: %d.", ImeIgraca( playerid ), kolicina );
			SendClientMessageEx( playerid, SVETLOPLAVA, " Postavili ste igracu: %s kljuc imovine 3: %d.", ImeIgraca( id ), kolicina );
			II[ kolicina ][ iOwned ] = 1; II[ kolicina ][ iLocked ] = 0;
			II[ kolicina ][ iNeaktivnost ] = 0;
			strmid( II[ kolicina ][ iOwner ], ImeIgraca( id ), 0, strlen( ImeIgraca( id ) ), 32);
			SaveProperty( kolicina ); PropertyRefresh( kolicina );

			format( string1, sizeof( string1 ), "Admin %s je postavio kljuc imovine3 na %d igracu %s.", ImeIgraca( playerid ), kolicina, ImeIgraca( id ) );
		}
	}
	LogSave( "Ostalo/LogSetStatAdmin.log", string1 );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hidenames( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	for(new i; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer( playerid, i, false );
	SendClientMessagee( playerid, BELA, "Sklonili ste imena!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:shownames( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	for(new i; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer( playerid, i, true );
	SendClientMessagee( playerid, BELA, "Prikazali ste imena!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:jetpack( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new Float:Pos[ 3 ];
		if( GetPlayerSpecialAction( playerid ) == SPECIAL_ACTION_USEJETPACK )
		{
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			SetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ]+2 );
			SendInfoMessage( playerid, "Skinuo si jetpack te je unisten." );
		}
		else
		{
			SetPlayerSpecialAction( playerid, SPECIAL_ACTION_USEJETPACK);
			SendInfoMessage( playerid, "Uzeo si JetPack.");
		}
		
	}else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	
	return 1;
}
CMD:vjp( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xVIPLevel ] == 5 )
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new Float:Pos[ 3 ];
		if( GetPlayerSpecialAction( playerid ) == SPECIAL_ACTION_USEJETPACK )
		{
			GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
			SetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ]+2 );
			SendInfoMessage( playerid, "Skinuli ste specijalni JetPack, te je isti unisten od strane servera!" );
		}
		else
		{
			SetPlayerSpecialAction( playerid, SPECIAL_ACTION_USEJETPACK);
			SendInfoMessage( playerid, "Uzeli ste V.I.P. JetPack i poceli ste sa letenjem!");
		}
		
	}else return GRESKA( playerid, "Vi niste V.I.P. nivoa 5, kupite isti donacijom!" );
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:nitro( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 3 || PlayerInfo[ playerid ][ xVIPLevel ] >= 3 || PlayerInfo[ playerid ][ xPromoter ] >= 1)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 3)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu!");
		if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na trci." );
		if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na eventu." );
		AddVehicleComponent( GetPlayerVehicleID( playerid ), 1010 );
		SendInfoMessage( playerid, "Nitro je uspjesno dodat u vozilo!" );
		SavePlayerVehicleTuning(GetPlayerVehicleID( playerid ), CARMODTYPE_NITRO);
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	
	return true;
}
//////////////////////////////////////BRZI RENT///////////////////////////
CMD:spawnrentvozilo( playerid, params[] )
{
	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Nemoguce je trenutno kreirati vozilo, limit vozila na serveru je dosegnut.");
	//if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	if( BrziRentVozilo[ playerid ] == -1 )
	{
		if(GetNearestRent(playerid) == -1) return greska(playerid, "Morate biti blizu pickupa za brzi rent.");
		new idv,b1,b2;
		if( sscanf( params ,"iii", idv, b1, b2 ) ) return SendUsageMessage( playerid, "/spawnrentvozilo [ id ] [ boja 1 ] [ boja 2 ]");
		if( idv < 400 || idv > 611 ) return GRESKA( playerid, "ID vozila ne moze biti manji od 400 ili veci od 611!");
		if(PlayerInfo[ playerid ][ xAdmin ] < 1338)
		{
			if( idv == 406 || idv == 407 || idv == 425 || idv == 432 || idv == 447 || idv == 464 ||idv == 465 || idv == 469 || idv == 476 || idv == 501 || idv == 520 || idv == 532 || idv == 601 )
			{
				SendClientMessagee(playerid,-1,"Ta vrsta vozila je zabranjena na serveru!");
				return 1;
			}
		}
		
		if( b1 < 0 || b2 < 0 || b1 > 255 || b2 > 255 ) return GRESKA( playerid, "ID boje ne moze biti manji od 0 ili veci od 255!");

		new Float:Poz[ 3 ];
		GetPlayerPos( playerid, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] );
		BrziRentVozilo[ playerid ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, idv, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ], 0.0, b1, b2, -1 );
		LinkVehicleToInterior( BrziRentVozilo[ playerid ], GetPlayerInterior( playerid ) );
		SetVehicleVirtualWorld( BrziRentVozilo[ playerid ], GetPlayerVirtualWorld( playerid ) );
		vCanDrive[ BrziRentVozilo[ playerid ] ] = 1;
		Fuel[ BrziRentVozilo[ playerid ] ] = 100;
		Dimi_PutPlayerInVehicle( playerid, BrziRentVozilo[ playerid ], 0 );
		ResetVehicleStatistics( BrziRentVozilo[ playerid ] );
		#if defined dentist_rentoff
		TipVozila[BrziRentVozilo[playerid]] = RENT_VOZILO;
		SetVehicleLabels(BrziRentVozilo[playerid]);
		#endif

		new engine, lights, alarm, doors, bonnet, boot, objective;

		GetVehicleParamsEx( BrziRentVozilo[ playerid ], engine, lights, alarm, doors, bonnet, boot, objective );
		SetVehicleParamsEx( BrziRentVozilo[ playerid ], 1, 0, alarm, 0, 0, 0, objective );
		SendInfoMessage( playerid, "Rent vozilo stvoreno, da ga unistite opet kucajte: /spawnrentvozilo.", BrziRentVozilo[ playerid ] );
		SendInfoMessage( playerid, "Vas rent istice za 10 minuta.");
		DajIgracuNovac(playerid,-200);//jhgfzgtziutiukutrfiun e§<}qea derfm,kgt Ł   desaio.kl  
		new stringce[300];//nfvgjfv cnztehj
		format(stringce,sizeof(stringce),"[ BRZI RENT ]\n\n{ffffff}Rentao: %s\nVrijeme: 10 min.",ImeIgraca(playerid));
		br_label[playerid] = Create3DTextLabel( stringce, tdboja, 0.0, 0.0, 0.0, 5.0, 0, 1 );
		Attach3DTextLabelToVehicle( br_label[playerid], BrziRentVozilo[playerid], 0.0, 0.0, 0.0);
		killrent[playerid] = SetTimerEx( "killrentveh", 600000, false, "i", playerid );
		/*Rentano[ playerid ] = GetPlayerVehicleID( playerid );
		RentTimer[ playerid ] = SetTimerEx( "KrajRenta", vreme*60000, 0, "ii", playerid, GetPlayerVehicleID( playerid ) );*/
	}
	else if( BrziRentVozilo[ playerid ] != -1 )
	{
		DestroyDynamic3DTextLabel(br_label[playerid]);
		KillTimer(killrent[playerid]);//uhjksDUHJSCSSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCCCDUHSDHSUUADSF
		SendInfoMessage( playerid, "Unistili ste vase rent vozilo.", BrziRentVozilo[ playerid ] );
		Dimi_DestroyVehicle( BrziRentVozilo[ playerid ] );
		BrziRentVozilo[ playerid ] = -1;
	}
	return true;
}

killrentveh(playerid); public killrentveh(playerid)
{
	DestroyDynamic3DTextLabel(br_label[playerid]);
	KillTimer(killrent[playerid]);
	SendInfoMessage( playerid, "Vas brzi rent je istekao!", BrziRentVozilo[ playerid ] );
	Dimi_DestroyVehicle( BrziRentVozilo[ playerid ] );
	BrziRentVozilo[ playerid ] = -1;
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:veh( playerid, params[] )
{
	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Nemoguce je trenutno kreirati vozilo, limit vozila na serveru je dosegnut.");
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	if( AdminVozilo[ playerid ] == -1 )
	{
		new idv,b1,b2;
		if( sscanf( params ,"iii", idv, b1, b2 ) ) return SendUsageMessage( playerid, "/veh [ id ] [ boja 1 ] [ boja 2 ]");
		if( idv < 400 || idv > 611 ) return GRESKA( playerid, "ID vozila ne moze biti manji od 400 ili veci od 611!");
		if(PlayerInfo[ playerid ][ xAdmin ] < 1338)
		{
			if( idv == 406 || idv == 407 || idv == 425 || idv == 432 || idv == 447 || idv == 464 ||idv == 465 || idv == 469 || idv == 476 || idv == 501 || idv == 520 || idv == 532 || idv == 601 )
			{
				SendClientMessagee(playerid,-1,"Ta vrsta vozila je zabranjena na serveru!");
				return 1;
			}
		}
		
		if( b1 < 0 || b2 < 0 || b1 > 255 || b2 > 255 ) return GRESKA( playerid, "ID boje ne moze biti manji od 0 ili veci od 255!");

		new Float:Poz[ 3 ];
		GetPlayerPos( playerid, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] );
		AdminVozilo[ playerid ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, idv, Poz[ 0 ], Poz[ 1 ], Poz[ 2 ], 0.0, b1, b2, -1 );
		LinkVehicleToInterior( AdminVozilo[ playerid ], GetPlayerInterior( playerid ) );
		SetVehicleVirtualWorld( AdminVozilo[ playerid ], GetPlayerVirtualWorld( playerid ) );
		vCanDrive[ AdminVozilo[ playerid ] ] = 1;
		Fuel[ AdminVozilo[ playerid ] ] = 100;
		Dimi_PutPlayerInVehicle( playerid, AdminVozilo[ playerid ], 0 );
		ResetVehicleStatistics( AdminVozilo[ playerid ] );
		new engine, lights, alarm, doors, bonnet, boot, objective;

		GetVehicleParamsEx( AdminVozilo[ playerid ], engine, lights, alarm, doors, bonnet, boot, objective );
		SetVehicleParamsEx( AdminVozilo[ playerid ], 1, 0, alarm, 0, 0, 0, objective );
		SendInfoMessage( playerid, "Vozilo ID: %d je stvoreno ako zelite da ga unistite kucajte /veh", AdminVozilo[ playerid ] );
	}
	else if( AdminVozilo[ playerid ] != -1 )
	{
		SendInfoMessage( playerid, "Vozilo ID: %d je unisteno.", AdminVozilo[ playerid ] );
		Dimi_DestroyVehicle( AdminVozilo[ playerid ] );
		AdminVozilo[ playerid ] = -1;
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:fixveh(playerid, params[]) {
	return cmd_vr(playerid, params); }
CMD:vr( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 || PlayerInfo[ playerid ][ xPromoter ] >= 1)
	{
	
		if( PlayerInfo[ playerid ][ xHelper ] >= 1 || ( PlayerInfo[ playerid ][ xAdmin ] >= 1 && PlayerInfo[ playerid ][ xAdmin ] <= 6 ) )
		{
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		else if( PlayerInfo[ playerid ][ xVIPLevel ] >= 4 || PlayerInfo[ playerid ][ xPromoter ] >= 1)
		{
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na trci." );
			if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na eventu." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes fixati vozilo dok imas wanted level." );
		}

		new Float:X, Float:Y, Float:Z, Float:A;
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!");
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Niste na mjestu vozaca!");
		GetPlayerPos( playerid, X, Y, Z );
		GetVehicleZAngle( GetPlayerVehicleID( playerid ), A );
		SetVehicleZAngle( GetPlayerVehicleID( playerid ), A );
		Dimi_RepairVehicle( playerid, GetPlayerVehicleID( playerid ) );
		Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 3;
		vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
		SendInfoMessage( playerid, "Okrenuli ste se sa vozilom i popravili vozilo." );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| FIX || "SERVERBOJA_AQUA"%s {FFFFFF}je popravio svoje vozilo!", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	return true;
}
CMD:rv( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
	
		new id;
		if(sscanf(params,"i",id)) return SendUsageMessage(playerid, "/rv [ id igraca ]");
		if(id == IPI) return greska(playerid, "Taj igrac nije na serveru!");

		new Float:X, Float:Y, Float:Z, Float:A;
		if( !IsPlayerInAnyVehicle( id ) ) return GRESKA( playerid, "Igrac nije u vozilu!");
		if( GetPlayerState( id ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Igrac nije na mjestu vozaca!");
		GetPlayerPos( id, X, Y, Z );
		GetVehicleZAngle( GetPlayerVehicleID( id ), A );
		SetVehicleZAngle( GetPlayerVehicleID( id ), A );
		Dimi_RepairVehicle( id, GetPlayerVehicleID( id ) );
		Dimi_SetVehicleHealth( GetPlayerVehicleID( id ), 1000.0 );
		antiCheatCS[ id ][ VehRepairTime ] = 3;
		vCanDrive[ GetPlayerVehicleID( id ) ] = 1;
		SendInfoMessage( playerid, "Popravili ste igracu %s vozilo!",ImeIgraca(id) );
		SendInfoMessage(id,"Vozilo vam je popravljeno od strane administratora!");
		format( globalstring, sizeof( globalstring ), "{FF0000}|| FIX || "SERVERBOJA_AQUA"%s {FFFFFF}je popravio vozilo igraca %s", ImeIgraca( playerid ), ImeIgraca(id) );
		AdminPoruka( -1, globalstring );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:fv(playerid, params[])
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		ShowPlayerDialog( playerid, dialog_fixcar, DSL, ""#col_balkanstory"Fix & Flip car",""col_white"Popravi svoje vozilo\nPopravi sva vozila\nPopravi vozilo igracu\nPopravi vozila u radiusu od 40m\nFlip car", D_ODABERI, D_ODUSTANI);
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ezavrsi( playerid, params[] )
{
	new dFile[ 32 ];
	if( PlayerInfo[ playerid ][ xAdmin ] < 1) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( !PlayerCreateEvent[ playerid ] ) return GRESKA( playerid, "Ti ne kreiras event!" );
	SendClientMessagee( playerid, ZUTA, "Zavrsio si kreiranje eventa." );
	PlayerCreateEvent[ playerid ] = false;
	format( dFile, 32, EVENT_FILE, EventID[ playerid ] );

	new
		INI:File = INI_Open( dFile );

	INI_WriteInt( File, "MaxCP", EventCP[ playerid ]-1);
	Event[ EventID[ playerid ] ][ MaxCP ] = EventCP[ playerid ]-1;

	INI_Close( File );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:enapusti( playerid, params[] )
{
	if( EventInfo[ eID ] == 0 ) return GRESKA( playerid, "Nijedan event nije upaljen");
	if( PlayerCP[ playerid ] <= 0 ) return GRESKA( playerid, "Niste na eventu." );
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete na event dok ste u zatvoru / ALKATRAZ.");
	EventInfo[ Drivers ]--;
	SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
	TogglePlayerControllable( playerid, true );
	SetPlayerVirtualWorld( playerid, 0 );
	PlayerCP[ playerid ] = 0;
	PlayerEventVehID[ playerid ] = -1;
	DisablePlayerRaceCheckpoint( playerid );
	Dimi_SetPlayerPos( playerid, PlayerPos[ playerid ][ 0 ], PlayerPos[ playerid ][ 1 ],  PlayerPos[ playerid ][ 2 ] );
	SetPlayerVirtualWorld( playerid, PlayerPosVW[ playerid ] );
	SetPlayerInterior( playerid, PlayerPosInt[ playerid ] );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:join( playerid, params[] )
{
	if( EventInfo[ eID ] == 0 ) return GRESKA( playerid, "Nijedan event nije upaljen");
	if( PlayerInfo[ playerid ][ xHelper ] > 0 ) return GRESKA( playerid, "Ti si GameMaster i ne mozes na event!" );
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes na event dok si cuffovan." );
	if( IgracZavezan[ playerid ] == true ) return GRESKA( playerid, "Ne mozes na event dok si vezan." );
	if( EventInfo[ EventTime ] <= 3 ) return GRESKA( playerid, "Vreme za join je isteklo");
	if( IsPlayerInAnyVehicle( playerid )  ) return GRESKA( playerid, "Morate biti na nogamo da bi otisli na event." );
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Morate biti na nogama da bi otisli na event." );
	if( GetPlayerInterior( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u interijeru." );
	if( GetPlayerVirtualWorld( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u interijeru/vwu." );
	if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Vec ste u eventu." );
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na event dok imate wanted.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete na event dok ste u zatvoru / ALKATRAZ.");
	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Nemoguce je trenutno otici na event, limit vozila na serveru je dosegnut.");
	if( EventInfo[ Drivers ] == 30 ) return GRESKA( playerid, "Vec ima maksimalan broj na eventu(30).");
	
	EventInfo[ Drivers ]++;
	PlayerCP[ playerid ] = 2;
	PlayerEventVehID[ playerid ] = ( EventInfo[ Drivers ]-1 );
	if( EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] != INVALID_VEHICLE_ID ) Dimi_DestroyVehicle( EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] );
	GetPlayerPos( playerid, PlayerPos[ playerid ][ 0 ], PlayerPos[ playerid ][ 1 ], PlayerPos[ playerid ][ 2 ] );
	PlayerPosInt[ playerid ] = GetPlayerInterior( playerid );
	PlayerPosVW[ playerid ] = GetPlayerVirtualWorld( playerid );
	if( EventInfo[ Drivers ] % 2 == 0 )
	{
		Event[ EventInfo[ eID ] ][ PrivremeniX1 ] -= (6 * floatsin( -Event[ EventInfo[ eID ] ][ TCPA ], degrees ) );
		Event[ EventInfo[ eID ] ][ PrivremeniY1 ] -= (6 * floatcos( -Event[ EventInfo[ eID ] ][ TCPA ], degrees ) );
		if( Event[ EventInfo[ eID ] ][ VehID ] != 0 ) { EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, Event[ EventInfo[ eID ] ][ VehID ], Event[ EventInfo[ eID ] ][ PrivremeniX1 ], Event[ EventInfo[ eID ] ][ PrivremeniY1 ], Event[ EventInfo[ eID ] ][ TCPZ], Event[ EventInfo[ eID ] ][ TCPA ], random( 128 ), random( 128 ), 3600 ); }
		Dimi_SetPlayerPos( playerid, Event[ EventInfo[ eID ] ][ PrivremeniX1 ], Event[ EventInfo[ eID ] ][ PrivremeniY1 ], Event[ EventInfo[ eID ] ][ TCPZ ] );
	}
	else
	{
		Event[ EventInfo[ eID ] ][ PrivremeniX2 ] -= (6 * floatsin( -Event[ EventInfo[ eID ] ][ TCPA2 ], degrees ) );
		Event[ EventInfo[ eID ] ][ PrivremeniY2 ] -= (6 * floatcos( -Event[ EventInfo[ eID ] ][ TCPA2 ], degrees ) );
		if( Event[ EventInfo[ eID ] ][ VehID ] != 0) { EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, Event[ EventInfo[ eID ] ][ VehID ], Event[ EventInfo[ eID ] ][ PrivremeniX2 ], Event[ EventInfo[ eID ] ][ PrivremeniY2 ], Event[ EventInfo[ eID ] ][ TCPZ2 ], Event[ EventInfo[ eID ] ][ TCPA2 ], random( 128 ), random( 128 ), 3600 ); }
		Dimi_SetPlayerPos( playerid, Event[ EventInfo[ eID ] ][ PrivremeniX2 ], Event[ EventInfo[ eID ] ][ PrivremeniY2 ], Event[ EventInfo[ eID ] ][ TCPZ2 ] );
	}
	Dimi_PutPlayerInVehicle( playerid, EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ], 0 );
	SetVehicleVirtualWorld( EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ], EventInfo[ eID ] );
	SetPlayerVirtualWorld( playerid, EventInfo[ eID ] );
	vCanDrive[ EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] ] = 1;
	Fuel[ EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] ] = 100;
	Dimi_PutPlayerInVehicle( playerid, EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ], 0 );
	ResetVehicleStatistics( EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ] );
	SetVehicleParamsEx( EventInfo[ Vehicle ][ ( EventInfo[ Drivers ]-1 ) ], 1, 0, 0, 0, 0, 0, 0);
	TogglePlayerControllable( playerid, false );
	DisablePlayerRaceCheckpoint( playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
new EventVehicleNumber = 0, EventVehicle[ 100 ];

CMD:ekreiraj( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new idvozila, brojvozila, Float:x, Float:y, Float:z, Float:a;
		if( sscanf( params, "ii", idvozila, brojvozila ) ) return SendUsageMessage( playerid, "/ekreiraj [ ID VOZILA ] [ BROJ VOZILA ]." );
		if( idvozila < 400 || idvozila > 611 ) return GRESKA( playerid, "ID vozila ne moze biti manji od 400 ili veci od 611!");
		if( brojvozila < 0 || brojvozila > 100 ) return GRESKA( playerid, "Broj vozila ne moze biti manji od 0 ili veci od 100." );
		if( EventVehicleNumber != 0 ) return GRESKA( playerid, "Vec su kreirana vozila." );
		GetPlayerPos( playerid, x, y, z );
		GetPlayerFacingAngle( playerid, a );
		EventVehicleNumber = brojvozila;

		if(PlayerInfo[ playerid ][ xAdmin ] < 1338)
		{
			if( idvozila == 406 || idvozila == 407 || idvozila == 425 || idvozila == 432 || idvozila == 447 || idvozila == 464 ||idvozila == 465 || idvozila == 469 || idvozila == 476 || idvozila == 501 || idvozila == 520 || idvozila == 532 || idvozila == 601 )
			{
				SendClientMessagee(playerid,-1,"Ta vrsta vozila je zabranjena na serveru!");
				return 1;
			}
		}
		
		for( new i = 0; i < brojvozila; i++ )
		{
			EventVehicle[ i ] = Dimi_CreateVehicle( -1, -1, -1, -1, -1, idvozila, x+random(10), y+random(10), z, a, random( 128 ), random( 128 ), 3600 );
			vCanDrive[ EventVehicle[ i ] ] = 1;
			Fuel[ EventVehicle[ i ] ] = 100;
			ResetVehicleStatistics( EventVehicle[ i ] );
			SetVehicleParamsEx( EventVehicle[ i ], 1, 0, 0, 0, 0, 0, 0);
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| E-CREATE || "SERVERBOJA_AQUA"%s {FFFFFF}je kreirao event vozila!", ImeIgraca( playerid ) );
		AdminPoruka(-1, globalstring );
		SendInfoMessage( playerid, "Kreirao si vozila za live event." );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:eunisti( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 )
	{
	
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		if( EventVehicleNumber == 0 ) return GRESKA( playerid, "Nisu kreirana event vozila." );

		for( new i = 0; i < EventVehicleNumber; i++ )
		{
			Dimi_DestroyVehicle( EventVehicle[ i ] );
		}

		EventVehicleNumber = 0;
		
		format( globalstring, sizeof( globalstring ), "{FF0000}|| E-DESTROY || "SERVERBOJA_AQUA"%s {FFFFFF}je unistio event vozila.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
		SendInfoMessage( playerid, "Unistili ste vozila za live event." );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:startevent( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		if( EventInfo[ eID ] != 0 ) return GRESKA( playerid, "Vec je ukljucen jedan event, koristi /stopevent." );
		EventStranica[ playerid ] = 10;
		for( new i = 1; i <= 10; i++ )
		{
			format( DialogStrgEx, sizeof( DialogStrgEx ), "%s%s\n", DialogStrgEx, Event[ i ][ Name ] );
		}
		format( DialogStrgEx, sizeof( DialogStrgEx ), "%sSljedeca strana ->", DialogStrgEx );
		ShowPlayerDialog( playerid, dialog_EVENTSTART, DSL, D_NASLOV, DialogStrgEx, D_ODABERI, D_ODUSTANI );

	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:ostalieventi( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		
		ShowPlayerDialog( playerid, dialog_EVENTS, DSL, "Ostali eventi",
			"PUBG\nSniper Event\nPresent Hunt Event", D_ODABERI, D_ODUSTANI );

	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:stopevent( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		if( EventInfo[ eID ] == 0 ) return GRESKA( playerid, "Nijedan event nije ukljucen." );
		EventInfo[ Position ] = 0;
		EventInfo[ Drivers ] = 0;

		Event[ EventInfo[ eID ] ][ PrivremeniX1 ] = Event[ EventInfo[ eID ] ][ TCPX ];
		Event[ EventInfo[ eID ] ][ PrivremeniY1 ] = Event[ EventInfo[ eID ] ][ TCPY ];
		Event[ EventInfo[ eID ] ][ PrivremeniX2 ] = Event[ EventInfo[ eID ] ][ TCPX2 ];
		Event[ EventInfo[ eID ] ][ PrivremeniY2 ] = Event[ EventInfo[ eID ] ][ TCPY2 ];

		EventInfo[ eID ] = 0;

		for( new i = 0; i < 30; i++)
		{
			if( EventInfo[ Vehicle ][ i ] != INVALID_VEHICLE_ID ) SetVehicleToRespawn( EventInfo[ Vehicle ][ i ] );
		}

		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerCP[ i ] > 0 )
			{
				PlayerCP[ i ] = 0;
				SetPlayerVirtualWorld( i, 0 );
				TogglePlayerControllable( i, true );
				DisablePlayerRaceCheckpoint( i );
				PlayerEventVehID[ i ] = -1;

				Dimi_SetPlayerPos( i, PlayerPos[ i ][ 0 ], PlayerPos[ i ][ 1 ],  PlayerPos[ i ][ 2 ] );
				SetPlayerVirtualWorld( i, PlayerPosVW[ i ] );
				SetPlayerInterior( i, PlayerPosInt[ i ] );
			}
		}

		format( globalstring, sizeof( globalstring ), ""col_balkanstory"EVENT | "SERVERBOJA_AQUA"%s {FFFFFF}je zaustavio trenutni event!", ImeIgraca( playerid ) );
		AdminPoruka( 0x6495EDAA, globalstring );
		SendInfoMessage( playerid, "Prekinuo si event!" );
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kapa( playerid, params[] )
{
	#if NERP_ZIMSKI_MOD  == 1
	if(PlayerInfo[playerid][xRanac] == 1) return greska(playerid,"Slot za kapu je zauzet - doslo je sistemske greske.");
	if( IsPlayerConnected( playerid ) )
	{
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_WINTERCAP ) )
		{
			SetPlayerAttachedObject(playerid, OBJECT_SLOT_WINTERCAP, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
			SendInfoMessage( playerid, "Stavili ste novogodisnju kapicu na glavu.");
			return true;
		}
		else if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_WINTERCAP ) )
		{
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_WINTERCAP );
			SendInfoMessage( playerid, "Skinuli ste novogodisnju kapicu sa glave.");
			return true;
		}
	}
	#else
	GRESKA( playerid, "Nije ukljucen zimski mod!" );
	#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
#if defined _we_snowfalling_included
	#endinput
#endif

#define _we_snowfalling_included
#pragma library we_snowfalling

/**
  * Variables
 */
static
	snowObject[MAX_PLAYERS],
	snowFallingTimer[MAX_PLAYERS],

	bool: snowFallingStatus[MAX_PLAYERS];

/**
  * Callbacks
 */
forward __Winter_SnowFallingTimer(const playerid);
public __Winter_SnowFallingTimer(const playerid)
{
	if (Winter_GetSnowflakeStatus(playerid))
	{
		if (!GetPlayerInterior(playerid) && !GetPlayerVirtualWorld(playerid))
		{
			static x, y, z;
			GetPlayerCameraPos(playerid, Float: x, Float: y, Float:z);
			
			MovePlayerObject(playerid, snowObject[playerid],
				Float: x, Float: y, (Float:z - 2.5), Float: 4000.0
			);
		}
	}

	return 1;
}

/**
  * Functions
 */
stock Winter_GetSnowflakeStatus(const playerid) return snowFallingStatus[playerid];
stock Winter_SetSnowflakeStatus(const playerid)
{
	new const status = !Winter_GetSnowflakeStatus(playerid);

	if (!status)
	{
		snowFallingStatus[playerid] = false;
		DestroyPlayerObject(playerid, snowObject[playerid]);
		KillTimer(snowFallingTimer[playerid]);
		return 1;
	}

	static x, y, z;
	GetPlayerCameraPos(playerid, Float: x, Float: z, Float: z);

	snowObject[playerid] = CreatePlayerObject(playerid, 18864,
		(Float: x + random(25)), (Float: y + random(25)), (Float: z - 5), 0.0, 0.0, 0.0, 300.0
	);

	snowFallingTimer[playerid] = SetTimerEx("__Winter_SnowFallingTimer", 500, 1, "d", playerid);
	snowFallingStatus[playerid] = true;

	return 1;
}

#if BETA_BUILD == 1
CMD:notiftest(playerid,params[])
{
	new str[100];
	if(sscanf(params, "s[100]", str)) return SendUsageMessage(playerid, "/notiftest [text]");
	SendPlayerNotification(playerid,true,str);
	SendInfoMessage(playerid, "Dobili ste notification.");
	return 1;
}
CMD:screentest(playerid,params[])
{
	new str[100];
	if(sscanf(params, "s[100]", str)) return SendUsageMessage(playerid, "/screentest [text]");
	SendScreenMessage(playerid,str);
	SendInfoMessage(playerid, "Dobili ste screen message.");
	return 1;
}
//SendMessageBox
CMD:msgboxtest(playerid,params[])
{
	new naslov[100],poruka[100];
	if(sscanf(params, "s[100]s[100]", naslov, poruka)) return SendUsageMessage(playerid, "/msgboxtest [title] [text]");
	SendMessageBox(playerid,naslov,poruka);
	SendInfoMessage(playerid, "Dobili ste message box.");
	return 1;
}
#endif

CMD:sneg( playerid, params[] )
{
	#if NERP_ZIMSKI_MOD  == 1
	if( IsPlayerConnected( playerid ) )
	{
		if( GetPlayerInterior( playerid ) != 0 || GetPlayerVirtualWorld( playerid ) != 0 )
		{
			 GRESKA( playerid, "Ne mozes u interijeru!" );
			 return true;
		}
		if( !Snow[ playerid ] )
		{
			Snow[ playerid ] = true;
			Winter_SetSnowflakeStatus(playerid);
			SendInfoMessage(playerid, "Ukljucio si sneg! Ako zelis da stavis/skines kapu - "col_balkanstory"/kapa.");
		}
		else if( Snow[ playerid ] )
		{
			Snow[ playerid ] = false;
			Winter_SetSnowflakeStatus(playerid);
			SendInfoMessage( playerid, "Iskljucio si sneg! Ako zelis da stavis/skines kapu - "col_balkanstory"/kapa." );
		}
	}
	#else
	GRESKA( playerid, "Nije zimski period!");
	#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
AktivirajPoklone();
public AktivirajPoklone()
{
	if(presenthuntevent == 0) return 1;
	for(new i; i < MAX_PLAYERS; i++)
	{
		SendScreenMessage(i, "~y~Present Hunt:~w~ Pokloni su aktivirani!");
	}
	for( new id = 1; id < MAX_PRESENTS; id++ )
	{
		if( presentsInfo[ id ][ presPlaced ] )
		{
			if( presentsInfo[ id ][ presTaken ] )
			{
				presentsInfo[ id ][ presTaken ] = false ;
				UpdateDynamic3DTextLabelText( presentsInfo[ id ][ pres3d ], -1, ""col_white"Poklon nije otvoren!\n\n"col_red"/poklon" );
				SavePresent( id );
			}
		}
	}
	return 1;
}
CMD:poklon( playerid, params[] )
{
	//#if NERP_ZIMSKI_MOD  == 1
	if(presenthuntevent == 0) return announcement(playerid, "~r~Present Hunt nije upaljen!");
	if( GetNearestPresent( playerid ) == -1 ) return GRESKA( playerid, "Morate biti pored poklona." );

	new presentID = GetNearestPresent( playerid );
	if( presentsInfo[ presentID ][ presTaken ] ) return GRESKA( playerid, "Poklon je vec otvoren." );
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozete uzeti poklon iz vozila!" );
	
	new cash = random(100)+2000;
	DajIgracuNovac( playerid, cash );
	PlayerInfo[ playerid ][ xPoklon ]++;
	format( globalstring, 128, "~w~Otvorili ste poklon~n~i u njemu pronasli $%d!~n~Ukupno pronadjenih %d poklona!", cash, PlayerInfo[ playerid ][ xPoklon ] );
	//announcement( playerid, globalstring, 5000, 3 );
	SendMessageBox(playerid, "Poklon otvoren", globalstring);
	presentsInfo[ presentID ][ presTaken ] = true;
	UpdateDynamic3DTextLabelText( presentsInfo[ presentID ][ pres3d ], -1, "{F3FF02}[ Poklon ]\n\n{FFFFFF}Poklon je otvoren!");
	SavePresent( presentID );
	
	new textaa[ 300 ];
	format( textaa, sizeof( textaa ), "{FFFFFF}[POKLON OTVOREN] %s je upravo pronasao i otvorio poklon i osvojio $%d! (ukupno otvorio %d poklona)", ImeIgraca( playerid ), cash, PlayerInfo[ playerid ][ xPoklon ] );
	SCMA( 0x2641FEFF, textaa );
	//#else
	//GRESKA( playerid, "Nije zimski period!");
	//#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aktivirajpoklone( playerid, params[] )
{
	//#if NERP_ZIMSKI_MOD  == 1
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );

	for( new id = 1; id < MAX_PRESENTS; id++ )
	{
		if( presentsInfo[ id ][ presPlaced ] )
		{
			if( presentsInfo[ id ][ presTaken ] )
			{
				presentsInfo[ id ][ presTaken ] = false ;
				UpdateDynamic3DTextLabelText( presentsInfo[ id ][ pres3d ], -1, ""col_white"Poklon nije otvoren!\n\n"col_red"/poklon" );
				SavePresent( id );
			}
		}
	}
	SendClientMessagee( playerid, -1, "Aktivirao si sve poklone." );
	SCMA(-1,""col_orange"[ POKLONI AKTIVIRANI ]: {ffffff}Administrator je uspjesno aktivirao sve poklone na "col_orange"serveru!");
	//#else
	//GRESKA( playerid, "Nije zimski period!");
	//#endif
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:slap( playerid, params[] )
{
	new igrac,razlog[32], Float:x, Float:y, Float:z;
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Morate biti na duznosti!" );
		if( sscanf(params,"us[32]", igrac,razlog ) ) return SendUsageMessage( playerid, "/slap [ ID/Ime ] [ razlog ]" );
		
		if( !IsPlayerConnected( igrac ) ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ igrac ][ xAdmin ] >= 1339 ) return GRESKA( playerid, "Ne mozes slapovati direktore i ownere!");
		if( PlayerInfo[ playerid ][ xHelper ] >= 1 && PlayerInfo[ igrac ][ xAdmin ] >= 1 ) return GRESKA( playerid, "Ne mozes admine." );
		GetPlayerPos( igrac, x, y, z );
		Dimi_SetPlayerPos( igrac, x, y, z+5 );
		format(globalstring , sizeof( globalstring ), "{FF0000}|| SLAP || "SERVERBOJA_AQUA"%s {FFFFFF}je osamario igraca: "SERVERBOJA_AQUA"%s, {FFFFFF}Razlog: %s", ImeIgraca( playerid ), ImeIgraca( igrac ),razlog );
		AdminPoruka( -1, globalstring );
		SendInfoMessage( playerid, "Osamario si igraca: %s", ImeIgraca( igrac ) );
		SendInfoMessage( igrac, "Admin/GM %s vas je osamario.", ImeIgraca( playerid ) );
		if( antiCheatCS[ igrac ][ TakeVehicle ] != INVALID_VEHICLE_ID )
		{
			BusyVehicle[ antiCheatCS[ igrac ][ TakeVehicle ] ] = -1;
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:xgoto( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new Float:Poz[ 3 ];
	if( sscanf(params, "fff", Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] ) ) return SendUsageMessage( playerid, "/xgoto [ x ] [ y ] [ z ]." );
	if( IsPlayerInAnyVehicle( playerid ) ) { Dimi_SetVehiclePos( GetPlayerVehicleID( playerid ), Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] ); }
	else { Dimi_SetPlayerPos( playerid, Poz[ 0 ], Poz[ 1 ], Poz[2 ] ); }
	SendInfoMessage( playerid, "Teleportovani ste na koordinate %f, %f, %f",Poz[ 0 ], Poz[ 1 ], Poz[ 2 ] );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:apark( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 2  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new Float:Pos[ 4 ];
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!" );
		if( ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] == -1 ) return GRESKA( playerid, "Da bi koristili ovu komandu morate biti u privatnom vozilu." );
		if( TipVozila[ GetPlayerVehicleID( playerid ) ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete parkirati samo privatna vozila." );
		if( GetPlayerVehicleSeat( playerid ) != 0 ) return GRESKA( playerid, "Morate biti u vozilu na vozackom mjestu!");

		new autoid = ScriptIDVozila[ GetPlayerVehicleID( playerid ) ];
		GetVehiclePos( VehicleInfo[ autoid ][ vID ], Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
		GetVehicleZAngle( VehicleInfo[ autoid ][ vID ], Pos[ 3 ] );
		VehicleInfo[ autoid ][ vVirtualWorld ] = GetPlayerVirtualWorld( playerid );
		VehicleInfo[ autoid ][ vInterior ] = GetPlayerInterior( playerid );
		VehicleInfo[ autoid ][ vLokacijaX ] = Pos[ 0 ];
		VehicleInfo[ autoid ][ vLokacijaY ] = Pos[ 1 ];
		VehicleInfo[ autoid ][ vLokacijaZ ] = Pos[ 2 ];
		VehicleInfo[ autoid ][ vLokacijaA ] = Pos[ 3 ];
		DestroyVehicle( VehicleInfo[ autoid ][ vID ] );
		VehicleInfo[ autoid ][ vID ] = Dimi_CreateVehicle( autoid, PRIVATNO_VOZILO, -1, -1, -1, VehicleInfo[ autoid ][ vModel ], VehicleInfo[ autoid ][ vLokacijaX ], VehicleInfo[ autoid ][ vLokacijaY ], VehicleInfo[ autoid ][ vLokacijaZ ]+1.0, VehicleInfo[ autoid ][ vLokacijaA ], VehicleInfo[ autoid ][ vColor1 ], VehicleInfo[ autoid ][ vColor2 ], 300000 );
		LinkVehicleToInterior( VehicleInfo[ autoid ][ vID ], VehicleInfo[ autoid ][ vInterior ] );
		SetVehicleVirtualWorld( VehicleInfo[ autoid ][ vID ], VehicleInfo[ autoid ][ vVirtualWorld ] );
		TuneVehicle( autoid );
		SetVehicleParamsEx( VehicleInfo[ autoid ][ vID ], 0, 0, 0, VehicleInfo[ autoid ][ vLocked ], 0, 0, 0 );
		if( IsVehicleBajs( VehicleInfo[ autoid ][ vID ] ) )
		{
			SetVehicleParamsEx( VehicleInfo[ autoid ][ vID ], 1, 0, 0, VehicleInfo[ autoid ][ vLocked ], 0, 0, 0 );
		}

		SaveVehicle( autoid );
		SendInfoMessage( playerid, "Uspjesno ste parkirali vozilo ID %d!", ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aupali( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

			new vehicle = GetPlayerVehicleID( playerid ),
				engine,lights,alarm,doors,bonnet,boot,objective;

			if( !IsPlayerInAnyVehicle( playerid )) return GRESKA( playerid, "Morate biti u vozilu da biste koristili ovu komandu!");
			if( vCanDrive[ vehicle ] == 0 ) return GRESKA( playerid, "Ovo vozilo je unisteno i ne moze se pokrenuti.");
			if( IsVehicleBajs( vehicle ) ) return GRESKA( playerid, "Stvarno mislis upaliti biciklu? " );
			if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti vozac da bi ste mogli koristit ovu komandu.");
			if( Fuel[ vehicle ] == 0 ) return GRESKA( playerid, "Vozilo nema goriva ne mozete ga upaliti." );
			GetVehicleParamsEx(vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
			if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
			PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
			SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
			SetPVarInt( playerid, "StartingVehicle", 1 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:goto( playerid, params[ ], help )
{
	new Float:pozp[ 3 ], igrac;
	//if( PlayerInfo[playerid][xHelper] == 0 && PlayerInfo[playerid][xAdmin] == 0 && PlayerInfo[playerid][xVIPLevel] > 0 && PlayerInfo[playerid][xVIPLevel] < 5) return GRESKA(playerid, "Morate kucati '/vgoto', jer Vas nivo VIP-a nema ovlascenje za teleportiranje bez limita!");
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2 || PlayerInfo[playerid][xVIPLevel] == 5)//OK
	{
		if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/goto [ ID/Ime ]." );
		if( igrac == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 ) { }
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
		{
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes dok si u DM Zoni." );
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			if( PlayerInfo[ igrac ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozes se portati do direktora i vlasnika!" );
			if( PoliceDuty[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na duznosti." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes se portati dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok si u jailu." );
			if( PljackaUToku || ZlataraUToku ) return GRESKA( playerid, "Ne mozes se portati dok je pljacka u toku." );
		}
		else if( PlayerInfo[ playerid ][ xHelper ] >= 1 )
		{
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes dok si u DM Zoni." );
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			if( PlayerInfo[ igrac ][ xAdmin ] >= 1 ) return GRESKA( playerid, "Ne mozes se portati kod Admina." );
			if( PoliceDuty[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na duznosti." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes se portati dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok si u jailu." );
			if( PljackaUToku || ZlataraUToku ) return GRESKA( playerid, "Ne mozes se portati dok je pljacka u toku." );
		}
		else if( PlayerInfo[ playerid ][ xVIPLevel ] == 5 )
		{
			//if( PlayerInfo[ igrac ][ xHelper ] >= 1 ) return GRESKA( playerid, "Ne mozes se portati do GM." );
			//if( PlayerInfo[ igrac ][ xWanted ] > 0 ) return GRESKA( playerid, "Ne mozes se portati do igraca koj ima WL." );
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes dok si u DM Zoni." );
			if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes dok si na trci." );
			//if( PlayerInfo[ igrac ][ xAdmin ] >= 1 ) return GRESKA( playerid, "Ne mozes se portati do Admina." );
			if( PoliceDuty[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na duznosti." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes se portati dok radis posao ili imas uniformu posla." );
		//	if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes se portati dok si u jailu." );
			//if( PljackaUToku || ZlataraUToku ) return GRESKA( playerid, "Ne mozes se portati dok je pljacka u toku." );
			if( NaDmEventu[ igrac ] == true ) return GRESKA( playerid, "Ne mozes dok je igrac na DM eventu." );
			if( uInterijeru[ playerid ] != -1 ) return GRESKA( playerid, "Ne mozes da se portas dok si u interijeru.");
			if( uInterijeru[ igrac ] != -1 ) return GRESKA( playerid, "Ne mozes da se portas do igraca koji je u interijeru.");
		}
		GetPlayerPos( igrac, pozp[ 0 ], pozp[ 1 ], pozp[ 2 ] );
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ igrac ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete se teleportovati do ownera i direktora!" );
		if( GetPlayerState( playerid ) == 2 )
		{
			Dimi_SetVehiclePos( GetPlayerVehicleID( playerid ), pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}
		else
		{
			Dimi_SetPlayerPos( playerid, pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}

		SendInfoMessage( playerid, "Teleportirani ste do igraca: %s", ImeIgraca( igrac ) );
		SendInfoMessage( igrac, "%s se teleportovao do vas.", ImeIgraca( playerid ) );
		
		if( inOrgInt[ igrac ] != -1 )
		{
			inOrgInt[ playerid ] = inOrgInt[ igrac ];
		}
		
		if( uInterijeru[ igrac ] != -1 )
		{
			uInterijeru[ playerid ] = uInterijeru[ igrac ];
		}
		
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| GOTO || "SERVERBOJA_AQUA"%s {FFFFFF}se portao do igraca: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( igrac ) );
			RPTChat( -1, globalstring );
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
CMD:vgoto(playerid, params[])
{
	if(PlayerInfo[playerid][xVIPLevel] > 0 && PlayerInfo[playerid][xVIPLevel] < 5 )
	{
		new Float:pozp[ 3 ], igrac;
		if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "Ova komanda ima limite!! - /vgoto [ ID/Ime igraca do kojeg se zelite port ]." );
		if( igrac == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
		if( igrac == playerid ) return GRESKA(playerid, "Igrac broj %d ste vi - odaberite drugog igraca!", igrac);
		if( PlayerInfo[ playerid ][ xAdmin ] < 1 && PlayerInfo[ igrac ][ xAdmin ] >= 1 ) return GRESKA( playerid, "Ne mozes se teleportirati do administratora!" );

		if( GotoOff[ igrac ] == true ) {
			SendInfoMessage(igrac, "V.I.P. %s se htjeo teleportirati do Vas, morate ukljuciti mogucnost teleportiranja! (/gotoon)", ImeIgraca(playerid));
			GRESKA(playerid, "Igrac %s je iskljucio mogucnost teleportiranja do njega!", ImeIgraca(igrac));
			return 1;
		}
		GetPlayerPos( igrac, pozp[ 0 ], pozp[ 1 ], pozp[ 2 ] );
		//if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ igrac ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete se teleportovati do ownera i direktora!" );
		if( GetPlayerState( playerid ) == 2 )
		{
			Dimi_SetVehiclePos( GetPlayerVehicleID( playerid ), pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}
		else
		{
			Dimi_SetPlayerPos( playerid, pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}

		SendInfoMessage( playerid, "Igrac %s je omogucio da se teleportujete do njega!", ImeIgraca( igrac ) );
		SendInfoMessage( igrac, "Pustili ste %s da se teleportira do Vas, mozete ponovno iskljuciti teleportiranje! (/gotooff)", ImeIgraca( playerid ) );

		if( inOrgInt[ igrac ] != -1 )
		{
			inOrgInt[ playerid ] = inOrgInt[ igrac ];
		}

		if( uInterijeru[ igrac ] != -1 )
		{
			uInterijeru[ playerid ] = uInterijeru[ igrac ];
		}

		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| GOTO || "SERVERBOJA_AQUA"%s {FFFFFF}se portao do igraca: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( igrac ) );
			RPTChat( -1, globalstring );
		}
	}
	else if(PlayerInfo[playerid][xVIPLevel] == 5) return SendInfoMessage(playerid, "Ti si Master donator, mozes se teleportirati na standardni nacin! (/goto)");
	else GRESKA(playerid, "Vi ne mozete nikako da koristite ovu komandu - niste VIP!");
	return 1;
}
CMD:pgoto(playerid, params[])
{
	if(PlayerInfo[playerid][xPromoter] >= 1 )
	{
		new Float:pozp[ 3 ], igrac;
		if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "Ova komanda ima limite!! - /pgoto [ ID/Ime igraca do kojeg se zelite port ]." );
		if( igrac == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
		if( igrac == playerid ) return GRESKA(playerid, "Igrac broj %d ste vi - odaberite drugog igraca!", igrac);
		if( PlayerInfo[ playerid ][ xAdmin ] < 1 && PlayerInfo[ igrac ][ xAdmin ] >= 1 ) return GRESKA( playerid, "Ne mozes se teleportirati do administratora!" );

		if( GotoOff[ igrac ] == true ) {
			SendInfoMessage(igrac, "PROMOTER %s se htjeo teleportirati do Vas, morate ukljuciti mogucnost teleportiranja! (/gotoon)", ImeIgraca(playerid));
			GRESKA(playerid, "Igrac %s je iskljucio mogucnost teleportiranja do njega!", ImeIgraca(igrac));
			return 1;
		}
		GetPlayerPos( igrac, pozp[ 0 ], pozp[ 1 ], pozp[ 2 ] );
		//if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ igrac ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete se teleportovati do ownera i direktora!" );
		if( GetPlayerState( playerid ) == 2 )
		{
			Dimi_SetVehiclePos( GetPlayerVehicleID( playerid ), pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}
		else
		{
			Dimi_SetPlayerPos( playerid, pozp[ 0 ]+5, pozp[ 1 ]+5, pozp[ 2 ] );
			SetPlayerInterior( playerid, GetPlayerInterior( igrac ) );
			SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( igrac ) );
		}

		SendInfoMessage( playerid, "Igrac %s je omogucio da se teleportujete do njega!", ImeIgraca( igrac ) );
		SendInfoMessage( igrac, "Pustili ste %s da se teleportira do Vas, mozete ponovno iskljuciti teleportiranje! (/gotooff)", ImeIgraca( playerid ) );

		if( inOrgInt[ igrac ] != -1 )
		{
			inOrgInt[ playerid ] = inOrgInt[ igrac ];
		}

		if( uInterijeru[ igrac ] != -1 )
		{
			uInterijeru[ playerid ] = uInterijeru[ igrac ];
		}

		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| GOTO || "SERVERBOJA_AQUA"%s {FFFFFF}se portao do igraca: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( igrac ) );
			RPTChat( -1, globalstring );
		}
	}
	//else if(PlayerInfo[playerid][xVIPLevel] == 5) return SendInfoMessage(playerid, "Ti si Master donator, mozes se teleportirati na standardni nacin! (/goto)");
	else GRESKA(playerid, "Vi ne mozete nikako da koristite ovu komandu - niste clan promoter tima!");
	return 1;
}
CMD:gotoon( playerid, params[] )
{
	if(PlayerInfo[playerid][xAdmin] > 0) return GRESKA(playerid, "Vi ste admin. Do Vas se ne moze niko teleportovati osim drugih admina!");
	GotoOff[playerid] = false;
	SendInfoMessage(playerid, "Sada svi imaju ovlastenje da se teleportuju do Vas!");
	new goto_string[ 300 ];
	format(goto_string,sizeof(goto_string),""col_balkanstory"[SERVER]:{ffffff} Igrac "SERVERBOJA_SIVA"%s{ffffff} je omogucio teleportovanje do njega!",ImeIgraca(playerid));
	SCMA(-1,goto_string);
	return 1;
}
CMD:gotooff( playerid, params[] )
{
	if(PlayerInfo[playerid][xAdmin] > 0) return GRESKA(playerid, "Vi ste admin. Do Vas se svakako ne moze niko teleportovati osim drugih admina!");
	GotoOff[playerid] = true;
	SendInfoMessage(playerid, "Sada se niko ne moze teleportirati do Vas osim administratora!");
	new goto_string[ 300 ];
	format(goto_string,sizeof(goto_string),""col_balkanstory"[SERVER]:{ffffff} Igrac "SERVERBOJA_SIVA"%s{ffffff} je omogucio teleportovanje do njega!",ImeIgraca(playerid));
	SCMA(-1,goto_string);
	return 1;
}
CMD:broadcast(playerid,params[])
{
	if(PlayerInfo[ playerid ][ xRCON ] == 0) return GRESKA( playerid, "Ne mozes ti ovo!");
	new igrac, komanda[32], parametricmd[512], imefunkcije[32];
	if( sscanf( params, "us[32]s[512]", igrac, komanda, parametricmd ) ) return SendUsageMessage( playerid, "/broadcast [ID/Ime] [cmd] [params]" );
	if(!IsPlayerConnected(igrac)) return GRESKA(playerid, "Taj igrac nije na serveru.");
	format(imefunkcije, sizeof imefunkcije, "cmd_%s", komanda);
	CallLocalFunction(imefunkcije, "is", igrac, parametricmd);
	SendInfoMessage(playerid, "Uspesno ste poslali komandu igracu %s[%i].",ImeIgraca(igrac),igrac);
	SendInfoMessage(playerid, "Poslana komanda: /%s %s",komanda, parametricmd);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gethere( playerid, params[ ] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2 || PlayerInfo[ playerid ][ xPromoter ] == 2)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 1 && !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		new igrac, Float:x, Float:y, Float:z;
		if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/gethere [ ID/Ime ]." );
		if( igrac == IPI ) return GRESKA( playerid, "Taj igrac nije na serveru.");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ igrac ][ xAdmin ] >= 1337 && 
		PlayerInfo[ playerid ][ xRCON ] == 0) return GRESKA( playerid, "Ne mozes teleportovati direktore i ownere!");

		if( PlayerInfo[ igrac ][ xZatvor ] != 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Ne mozes da teleportujes igraca iz jaila." );

		if( uFirmi[ playerid ] != -1 ) uFirmi[ igrac ] = uFirmi[ playerid ];
		
		if( uInterijeru[ playerid ] != -1 ) uInterijeru[ igrac ] = uInterijeru[ playerid ];

		GetPlayerPos( playerid, x, y, z );
		Dimi_SetPlayerPos( igrac, x+1, y+1, z );
		SetPlayerInterior( igrac, GetPlayerInterior( playerid ) );
		SetPlayerVirtualWorld( igrac, GetPlayerVirtualWorld( playerid ) );
		SendInfoMessage( playerid, "Teleportirali ste igraca: %s do sebe", ImeIgraca( igrac ) );
		SendInfoMessage( igrac, "%s vas je  teleportovao do sebe.", ImeIgraca( playerid ) );
		
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| GET || "SERVERBOJA_AQUA"%s {FFFFFF}je portao do sebe igraca: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( igrac ) );
			RPTChat( -1, globalstring );
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pm( playerid, params[] )
{
	new id, apmtext[128], string1[ 234 ];
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xVIPLevel ] >= 2 || PlayerInfo[ playerid ][ xPromoter ] >= 1)
	{
		if( sscanf( params, "us[128]", id, apmtext ) ) return SendUsageMessage( playerid, "/pm [ ID/Ime ] [ Text ]");
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebi poslat poruku!");
		if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozes pisati direktoru i owneru!");
		AI[ playerid ][ aTPM ] ++;
		SendClientMessageEx( playerid, -1, ""col_balkanstory"PM | "col_white"Poslali ste poruku "col_balkanstory"%s: "col_white"%s", ImeIgraca( id ), apmtext );
		SendClientMessageEx( id, -1, ""col_balkanstory"PM | "col_white"Dobili ste poruku od "col_balkanstory"%s: "col_white"%s", ImeIgraca( playerid ), apmtext );
		format( string1 , sizeof( string1 ), ""col_balkanstory"| PM | "col_white"%s -> %s : %s.", ImeIgraca( playerid ), ImeIgraca( id ), apmtext );
		AdminPoruka( 1, string1 );
		SacuvajAdmina( playerid );
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s -> Igrac: %s | Tekst: %s", ImeIgraca( playerid ), ImeIgraca( id ), apmtext );
		LogSave( "Ostalo/LogAODG.log", string );
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hodg( playerid, params[] )
{
	new id, apmtext[128], string1[ 234 ];
	if( PlayerInfo[ playerid ][ xHelper ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( sscanf( params, "us[128]", id, apmtext ) ) return SendUsageMessage( playerid, "/hodg [ ID/Ime ] [ Text ]");
	if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebi poslat poruku!");
	if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
	if( PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozes pisati direktoru i owneru!");
	SendClientMessageEx( playerid, ZELENA, "{DABB3E}Poslao si odg igracu %s: "col_white"%s", ImeIgraca( id ), apmtext );
	SendClientMessageEx( id, ZELENA, "{DABB3E}GameMaster kaze: "col_white"%s", apmtext );
	format( string1 , sizeof( string1 ), "{AE7C5B}|GM-ODG| %s -> %s : %s!.", ImeIgraca( playerid ), ImeIgraca( id ), apmtext );
	RPTChatPlus( HELPER, string1 );
	AI[ playerid ][ aTPM ] ++;
	SacuvajAdmina( playerid );
	new string[ 128 ]; 
	format( string, sizeof( string ), "GM %s -> Igrac: %s | Tekst: %s", ImeIgraca( playerid ), ImeIgraca( id ), apmtext );
	LogSave( "Ostalo/LogGODG.log", string );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aclearwl( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/aclearwl [ ID/Ime ] ");
		if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika");
		PlayerInfo[ id ][ xWanted ] = 0;
		Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
		strmid( ZlocinInfo[ id ][zPrijavio], "Nema", 0, strlen("Nema"), 255);
		strmid( ZlocinInfo[ id ][zPocinio], "Nema", 0, strlen("Nema"), 255);
		strmid( ZlocinInfo[ id ][zZlocin], "Nema", 0, strlen("Nema"), 255);
		SendInfoMessage( id, "Admin %s vam je skinuo wanted level.", ImeIgraca( playerid ) );
		SendInfoMessage( playerid, "Skinuli ste igracu %s wanted level.", ImeIgraca( id ) );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| CLEAR || "SERVERBOJA_AQUA"%s {FFFFFF}je skinuo wanted level igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setint( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, intid;
		if( sscanf( params, "ui", id, intid ) ) return SendUsageMessage( playerid, "/setint [ ID/Ime ] [ ID interiora ] ");
		if( id == IPI) return GRESKA( playerid, "Igrac nije online!");
		SetPlayerInterior( id, intid);
		SendInfoMessage( id, "Admin %s vam je postavio interior na %d.", ImeIgraca( playerid ), intid );
		SendInfoMessage( playerid, "Postavili ste igracu %s interior na %d.", ImeIgraca( id ), intid );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| SETINT || "SERVERBOJA_AQUA"%s {FFFFFF}je postavio interior igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setvw( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, vwid;
		if( sscanf( params, "ui", id, vwid ) ) return SendUsageMessage( playerid, "/setvw [ ID/Ime ] [ ID VW-a ]");
		if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
		SetPlayerVirtualWorld( id, vwid );
		SendInfoMessage( id, "Admin %s vam je postavio virtual world na %d.", ImeIgraca( playerid ), vwid );
		SendInfoMessage( playerid, "Postavili ste igracu %s virtual world na %d.", ImeIgraca( id ), vwid );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| SETVW || "SERVERBOJA_AQUA"%s {FFFFFF}je postavio virtual world igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:fine( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new id, novac;
		if( sscanf( params, "ud", id, novac ) ) return SendUsageMessage( playerid, "/fine [ ID/Ime ] [ novac ] ");
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebi uzeti novac!");
		if( novac < 1 ) return GRESKA( playerid, "Novac ne moze ici ispod 1 !");
		if( novac > 100000000 ) return GRESKA( playerid, "Novac ne moze ici preko 100,000,000 !");
		if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozes uzimat pare od - direktore i ownere!");
		DajIgracuNovac( id, -novac );
		DajIgracuNovac( playerid, novac );
		format( globalstring , sizeof( globalstring ), ""col_white"Fineovani ste! Admin: "col_crvena"%s "col_white"Novac: "col_crvena"-%d", ImeIgraca( playerid ), novac );
		SendClientMessagee( id, -1, globalstring );
		SendClientMessageEx( playerid, -1, "Fineovali ste igraca "col_crvena"%s "col_white"Novac: "col_crvena"- %d",ImeIgraca( id ), novac );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| FINE || "SERVERBOJA_AQUA"%s {FFFFFF}je oduzeo novac igracu: "SERVERBOJA_AQUA"%s / $%d", ImeIgraca( playerid ), ImeIgraca( id ), novac );
		AdminPoruka( -1, globalstring );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je oduzeo novac igracu %s | Novac: -%d", ImeIgraca( playerid ), ImeIgraca( id ), novac );
		LogSave( "Ostalo/LogFine.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kick( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, reason[32];
		if( sscanf( params, "us[32]", id, reason ) ) return SendUsageMessage( playerid, "/kick [ ID/Ime ] [ Razlog ] ");
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebe kickovat!");
		if( strlen( reason ) < 1 || strlen( reason ) > 31 ) return GRESKA( playerid, "Razlog ne moze biti duzi od 31 slova!");
		if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
		if( PlayerInfo[ id ][ xAdmin ] > PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Taj igrac je veci rank od vas!");
		AI[ playerid ][ aTKick ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ KikovanihKorisnika ]++;
		
		SendClientMessagee(id,-1,""col_yelow"_________________________| KICKED |____________________________");
		SendClientMessagee(id,-1," ");
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Vase ime: {FFFFFF}%s", ImeIgraca( id ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Admin: {FFFFFF}%s", ImeIgraca( playerid ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Razlog: {FFFFFF}%s", reason);
		SendClientMessagee(id,-1,globalstring);
		SendClientMessagee(id,-1,""SERVERBOJA_AQUA"Discord: {FFFFFF}https://discord.gg/XkcSmSxFMe");
		SendClientMessagee(id,-1,"Ako mislite da je ovo greska uslikajte ovo (F8) i posaljite na discord!");
		SendClientMessagee(id,-1,""col_yelow"_______________________________________________________________");
		announcement(id, "~y~KICKED", 5000, 0);

		Dimi_Kick( id );
		SendClientMessageEx( playerid, -1, ""col_white"Kikovali ste igraca "SERVERBOJA_AQUA"%s "col_white"Razlog: "SERVERBOJA_AQUA"%s",ImeIgraca( id ), reason);
		format( globalstring, sizeof( globalstring ), "{FF0000}|| KICK || "SERVERBOJA_AQUA"%s {FFFFFF}je kickovao igraca: "SERVERBOJA_AQUA"%s {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( id ), reason );
		//SCMA( -1, globalstring );
		AdminPoruka( -1, globalstring );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je kikovao igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), reason );
		LogSave( "Ostalo/LogKick.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
CMD:pkick( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, reason[32];
		if( sscanf( params, "us[32]", id, reason ) ) return SendUsageMessage( playerid, "/pkick [ ID/Ime ] [ Razlog ] ");
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebe kickovat!");
		if( strlen( reason ) < 1 || strlen( reason ) > 31 ) return GRESKA( playerid, "Razlog ne moze biti duzi od 31 slova!");
		if( id == IPI ) return GRESKA( playerid, "Igrac nije online!");
		if( PlayerInfo[ id ][ xAdmin ] > PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Taj igrac je veci rank od vas!");
		//AI[ playerid ][ aTKick ]++;
		//SacuvajAdmina( playerid );
		ServerInfo[ KikovanihKorisnika ]++;

		SendClientMessagee(id,-1,""col_yelow"_________________________| KICKED |____________________________");
		SendClientMessagee(id,-1," ");
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Vase ime: {FFFFFF}%s", ImeIgraca( id ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Staff: {FFFFFF}%s", ImeIgraca( playerid ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Razlog: {FFFFFF}%s", reason);
		SendClientMessagee(id,-1,globalstring);
		SendClientMessagee(id,-1,""col_yelow"_______________________________________________________________");
		announcement(id, "~y~KICKED...", 5000, 0);

		Dimi_Kick( id );
		SendClientMessageEx( playerid, -1, ""col_white"Kikovali ste igraca "SERVERBOJA_AQUA"%s "col_white"Razlog: "SERVERBOJA_AQUA"%s",ImeIgraca( id ), reason);
		
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
CMD:maknisastatsa( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vrsta, imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]i", imeigraca, vrsta ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/maknisastatsa [ Ime_Prezime ] [ Vrsta ]");
			SendClientMessagee( playerid, BELA, "[Vrste]: 1. Imovina I  || 2. Imovina II || 3. Imovina III");
			SendClientMessagee( playerid, BELA, "[Vrste]: 4. Vozilo I || 5. Vozilo II || 6. Vozilo III");
			SendClientMessagee( playerid, BELA, "[Vrste]: 7. Vozilo IV || 8. Firma || 9. Hotel");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da mu mozes maknuti online.");
			return 1;
		}
		if( vrsta == 1 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "Property1", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s imovinu 1 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa imovinu 1 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 2 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "Property2", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s imovinu 2 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa imovinu 2 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 3 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "Property3", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s imovinu 3 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa imovinu 3 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 4 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "VoziloID1", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s vozilo 1 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa vozilo 1 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 5 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "VoziloID2", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s vozilo 2 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa vozilo 2 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 6 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "VoziloID3", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s vozilo 3 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa vozilo 3 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 7 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "VoziloID4", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s vozilo 4 sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa vozilo 4 igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 8 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "FirmaID", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s firmu sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa firmu igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else if( vrsta == 9 )
		{
			new INI:File = INI_Open( ifile );
			INI_SetTag( File, "Informacije" );
			INI_WriteInt( File, "HotelID", -1 );
			INI_Close( File );
			SendClientMessageEx( playerid, SVETLOCRVENA, "Maknuli ste offline korisniku %s hotel sa statsa.", imeigraca );
			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Admin %s je maknuo sa statsa hotel igracu %s", ImeIgraca( playerid ), imeigraca );
			LogSave( "Ostalo/LogMakniSaStatsa.log", string1 );
		}
		else return GRESKA( playerid, "Vrsta moze od 1 do 10." );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:alkatraz( playerid, params[] )//area
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 3 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, razlog[40];
		if( sscanf( params, "us[40]", id, razlog ) )
		{
			SendUsageMessage( playerid, "/alkatraz [ ID/Ime ] [ razlog ]");
			return 1;
		}
		if( id != INVALID_PLAYER_ID )
		{
			if( IsPlayerConnected( id ) )
			{
				if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozete kazniti tog igraca!");
				if( PlayerInfo[ id ][ xUbijen ] == 1 ) return GRESKA( playerid, "Sacekajte malo, igrac se leci u bolnici!" );
				ResetAllWeapons( id );
				PlayerInfo[ id ][ xZatvor ] = ALKATRAZ;
				PlayerInfo[ id ][ xZatvorVreme ] = 72*60;
				ClearAnimations( id );
				if( IsPlayerAttachedObjectSlotUsed( id, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( id, OBJECT_SLOT_RHAND );
				SetPlayerSpecialAction( id, SPECIAL_ACTION_NONE );
				PlayerCuffed[ id ] = 0;
				announcement( id, "~w~Dobro dosli u ~n~~r~AREA 51", 5000, 3 );

				format( globalstring, sizeof( globalstring ), "~r~Do slobode: ~w~%d ~r~min",( PlayerInfo[ id ][ xZatvorVreme ]+1 ) );
				PlayerTextDrawSetString(id,JailTD[id],globalstring);
				PlayerTextDrawShow(id,JailTD[id]);

				new string[ 128 ];
				format( string, sizeof( string ), "Admin %s je prisonovao igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), razlog );
				LogSave( "Ostalo/LogPrison.log", string );
				AI[ playerid ][ aTJail ]++;
				SacuvajAdmina( playerid );
				PlayerCP[ id ] = 0;
				Dimi_SetPlayerPos( id, 107.2300, 1920.6311, 18.5208 );
				SetPlayerWorldBounds( id, 337.5694, 101.5826, 1940.9759, 1798.7453 );
				PlayerInfo[ id ][ xWanted ] = 0;
				Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
				strmid( ZlocinInfo[ id ][ zPrijavio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zPocinio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zZlocin ], "Nema", 0, strlen("Nema"), 255 );
				announcement( id, "~y~Ucitavanje sistema i objekata...", 1000, 4 );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", id );
				SetCameraBehindPlayer( id ); SetPlayerInterior( id, 1);
				SetPlayerVirtualWorld( id, 1);
				TogglePlayerControllable( id, 0 );
				SavePlayer( id );

				SendClientMessageEx( id, SVETLOCRVENA, "Admin vas je stavio u ALKATRAZ na 3 dana(72h).Razlog: %s", razlog );
				SendClientMessageEx( playerid, SVETLOCRVENA, "Postavili ste igraca %s u ALKATRAZ na 3 dana(72h).Razlog: %s", ImeIgraca( id ), razlog );

				format( globalstring, sizeof( globalstring ), "{FF0000}ALKATRAZ: {FFFFFF}Admin je postavio igraca "SERVERBOJA_AQUA"%s {FFFFFF}u ALKATRAZ!", ImeIgraca( id ) );
				SCMA( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}ALKATRAZ: {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				SCMA( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}|| ALKATRAZ || "SERVERBOJA_AQUA"%s {FFFFFF}stavlja "SERVERBOJA_AQUA"%s {FFFFFF}u ALKATRAZ na 3 dana(72h).", ImeIgraca( playerid ), ImeIgraca( id ) );
				AdminPoruka( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}|| ALKATRAZ || {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				AdminPoruka( -1, globalstring );
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kazniigraca( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 2 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, reason;
		
		if( sscanf(params, "ui", id, reason ) )
		{
			SendUsageMessage( playerid, "/kazniigraca [ ID/Ime ] [ Broj razloga ]");
			SendClientMessagee( playerid, -1, "[ Broj razloga ] 1 DM | 2 SK | 3 RK | 4 PG | 5 MG | 6 DB | 7 NJ | 8 PvP" );
			SendClientMessagee( playerid, -1, "[ Broj razloga ] 9 KOS | 10 TK | 11 Vredjanje | 12 Ometanje Radnika" );
			SendClientMessagee( playerid, -1, "[ Broj razloga ] 13 Prevara | 14 Invalid /ad | 15 CR | 16 PvE" );
			return 1;
		}
		if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozes kazniti tog igraca!");
		if( id == IPI ) return GRESKA( playerid, "Uneli ste pogresan ID igraca." );
		if( playerid == id ) return GRESKA( playerid, "Ne mozes sam sebi dati kaznu." );
		if( reason == 1 )
		{
			JailPlayer( id, 60 );
			DajIgracuNovac( id, -5000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"DM." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"60 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"5000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"DM.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 2 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"SK." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"SK.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 3 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"RK." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"RK.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 4 )
		{

			JailPlayer( id, 30 );
			DajIgracuNovac( id, -3000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"PG." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"3000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"PG.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 5 )
		{
			JailPlayer( id, 10 );
			DajIgracuNovac( id, -500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"MG." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"10 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"MG.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 6 )
		{
			JailPlayer( id, 45 );
			DajIgracuNovac( id, -3500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"DB." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"45 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"3500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"DB.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 7 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"NJ." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"NJ.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 8 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"PvP." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"PvP.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 9 )
		{ 
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"KOS." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"KOS.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 10 )
		{
			JailPlayer( id, 45 );
			DajIgracuNovac( id, -3000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"TK." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"45 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"3000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"TK.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 11 )
		{
			JailPlayer( id, 60 );
			DajIgracuNovac( id, -5000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"Vredjanje." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"60 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"5000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"Vrijedjanje.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 12 )
		{ 
			JailPlayer( id, 45 );
			DajIgracuNovac( id, -3000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"Ometanje radnika." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"45 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"3000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"Ometa radnike.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 13 )
		{ 
			JailPlayer( id, 600 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"Prevara." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"600 minuta." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"Prevara.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 14 )
		{
			JailPlayer( id, 15 );
			DajIgracuNovac( id, -500 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"Invalid /ad." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"15 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"500$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"invalid /ad.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 15 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"CR." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"CR.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else if( reason == 16 )
		{
			JailPlayer( id, 30 );
			DajIgracuNovac( id, -2000 );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			SendClientMessageEx( id, -1, ""col_white"Admin vas je kaznio." );
			SendClientMessageEx( id, -1, ""col_white"Razlog kazne: "col_balkanstory"PvE." );
			SendClientMessageEx( id, -1, ""col_white"Dobili ste zatvor od "col_balkanstory"30 minuta." );
			SendClientMessageEx( id, -1, ""col_white"Oduzeto vam je "col_balkanstory"2000$." );
			SendClientMessage( id, ANTICHEAT, ""col_balkanstory"________________________________________");
			format( globalstring, sizeof( globalstring ), "{FF0000}KAZNA: "SERVERBOJA_AQUA"%s {FFFFFF}je kaznio igraca "SERVERBOJA_AQUA"%s. {FFFFFF}Razlog: "SERVERBOJA_AQUA"PvE.", ImeIgraca( id ) );
			SCMA( -1, globalstring );
		}
		else return GRESKA( playerid, "Pogresan broj kazne!" );
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offsmijenigm( playerid, params[] )//OFF ZATVARANJE
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) )
		{
			SendUsageMessage( playerid, "/offsmijenigm [ Ime_Prezime ]");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}

		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Helper", 0);
		INI_Close( File );
		SendInfoMessage( playerid, "Izbacili ste igraca %s iz GM tima!", imeigraca);
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offsmijeniadmina( playerid, params[] )//OFF ZATVARANJE
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) )
		{
			SendUsageMessage( playerid, "/offsmijeniadmina [ Ime_Prezime ]");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}

		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Admin", 0);
		INI_Close( File );
		SendInfoMessage( playerid, "Izbacili ste igraca %s iz admin tima!", imeigraca);
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offzatvori( playerid, params[] )//OFF ZATVARANJE
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vreme, razlog[40], imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]is[40]", imeigraca, vreme, razlog ) )
		{
			SendUsageMessage( playerid, "/offzatvori [ Ime_Prezime ] [ minute) ] [ razlog ]");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}
		if( vreme < 1 ) return GRESKA( playerid, "Vreme u jailu ne moze biti manje od 1 minut.");

		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Zatvor", OBICAN_ZATVOR );
		INI_WriteInt( File, "ZatvorVreme", vreme );
		INI_WriteString( File, "OffPJail", razlog );
		INI_Close( File );
		AI[ playerid ][ aTJail ]++;
		SacuvajAdmina( playerid );
		SendInfoMessage( playerid, "Postavili ste offline igraca %s u zatvor na %d minuta.Razlog: %s", imeigraca, vreme, razlog );
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s je offjailovao igraca %s | Razlog: %s", ImeIgraca( playerid ), imeigraca, razlog );
		LogSave( "Ostalo/LogOffJail.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:zatvori( playerid, params[] )//ZATVARANJE OBICNO ONLINE
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{

		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Morate biti na duznosti!" );
		}
		new id, time, razlog[40];
		if( sscanf(params, "uis[40]", id, time, razlog ) ) return SendUsageMessage( playerid, "/zatvori [ ID ] [ minute ] [ razlog ]");
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			{
				if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozes njega!");
				if( PlayerInfo[ id ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes zatvoriti igraca koji je vec u zatvoru!");
				if(PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
				{
					if( time < 1 || time > 60 ) return GRESKA( playerid, "Ne mozes ispod 1 i preko 60 minuta!");
				}
				else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4)
				{
					if( time < 1 || time > 7000 ) return GRESKA( playerid, "Ne mozes ispod 1 i preko 7000 minuta, za to korisi /area !");
				}
				if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebe zatvoriti!" );
				if( PlayerInfo[ id ][ xUbijen ] == 1 ) return GRESKA( playerid, "Taj igrac je na lijecenju!" );
				ResetAllWeapons( id );
				PlayerInfo[ id ][ xZatvor ] = OBICAN_ZATVOR;
				PlayerInfo[ id ][ xZatvorVreme ] = time;
				ClearAnimations( id );
				PlayerCP[ id ] = 0;
				if( IsPlayerAttachedObjectSlotUsed( id, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( id, OBJECT_SLOT_RHAND );
				SetPlayerSpecialAction( id, SPECIAL_ACTION_NONE );
				PlayerCuffed[ id ] = 0;
				
				format( globalstring, sizeof( globalstring ), "~r~Do slobode: ~w~%d ~r~min",( PlayerInfo[ id ][ xZatvorVreme ]+1 ) );
				PlayerTextDrawSetString(id,JailTD[id],globalstring);
				PlayerTextDrawShow(id,JailTD[id]);
				
				
				new string[ 128 ];
				format( string, sizeof( string ), "Admin %s je zatvorio igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), razlog );
				LogSave( "Ostalo/LogJail.log", string );
				new rand = random( sizeof( RandomZatvor ) );
				Dimi_SetPlayerPos( id, RandomZatvor[ rand ][ 0 ], RandomZatvor[ rand ][ 1 ],RandomZatvor[ rand ][ 2 ] );
				PlayerInfo[ id ][ xWanted ] = 0;
				Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
				strmid( ZlocinInfo[ id ][ zPrijavio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zPocinio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zZlocin ], "Nema", 0, strlen("Nema"), 255 );
				announcement( id, "~y~Ucitavanje sistema i objekata...", 1000, 4 );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", id );
				SetCameraBehindPlayer( id ); SetPlayerInterior( id, 1 );
				SetPlayerVirtualWorld( id, 1 );
				TogglePlayerControllable( id, 0 );
				SavePlayer( id );
				AI[ playerid ][ aTJail ]++;
				SacuvajAdmina( playerid );
				SendClientMessageEx( id, -1, "{FF0000}ZATVOR | {FFFFFF}Stavljeni ste u zatvor od Admina na %d minuta, razlog: %s", time, razlog );
				SendClientMessageEx( playerid, -1, "{FF0000}ZATVOR | {FFFFFF}Stavili ste %s u zatvor na %d minuta, Razlog: %s", ImeIgraca( id ), time, razlog );
				SendInfoMessage(playerid,"Da igraca unjailas /oslobodi");
				format( globalstring, sizeof( globalstring ), "{FF0000}| ZATVOR |: {FFFFFF}Admin je postavio igraca "SERVERBOJA_AQUA"%s {FFFFFF}u zatvor!", ImeIgraca( id ) );
				SCMA( -1, globalstring );
				format( globalstring, sizeof( globalstring ), "{FF0000}| ZATVOR |: {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				SCMA( -1, globalstring );
				
				format( globalstring, sizeof( globalstring ), "{FF0000}|| ZATVOR || "SERVERBOJA_AQUA"%s {FFFFFF}je postavio igraca "SERVERBOJA_AQUA"%s {FFFFFF}u zatvor na %d min.", ImeIgraca( playerid ), ImeIgraca( id ), time, razlog );
				AdminPoruka( -1, globalstring );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| ZATVOR || {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				AdminPoruka(-1, globalstring );

				return 1;
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oslobodi( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/oslobodi [ ID ]");
		if( id == IPI ) return SendUsageMessage( playerid, "Pogresan ID igraca." );
		if( PlayerInfo[ id ][ xZatvor ] == OBICAN_ZATVOR || PlayerInfo[ id ][ xZatvor ] == ALKATRAZ )
		{
			new rand = random( sizeof( RandomCelije ) );
			Dimi_SetPlayerPos( id, RandomCelije[ rand ][ 0 ], RandomCelije[ rand ][ 1 ], RandomCelije[ rand ][ 2 ] );
			SetPlayerWorldBounds( id, 20000.0000, -20000.0000, 20000.0000, -20000.0000 );
			SetTimerEx( "SlobodnoSada", 2000, false, "i", id );
			SetCameraBehindPlayer( id );
			TogglePlayerControllable( id, false );
			SetPlayerInterior( id, 0 );
			SetPlayerVirtualWorld( id, 0 );
			PlayerInfo[ id ][ xZatvor ] = 0;
			PlayerInfo[ id ][ xZatvorVreme ] = 0;
			PlayerTextDrawHide(id,JailTD[id]);
			announcement( id, "~g~Slobodni ste ~w~pokusajte biti bolji gradjanin", 5000, 1);
			AI[ playerid ][ aTUnjail ]++;
			SacuvajAdmina( playerid );
			SendInfoMessage( id,"Admin %s vas je oslobodio iz zatvora.", ImeIgraca( playerid ) );
			SendInfoMessage( playerid, "Oslobodili ste igraca %s iz zatvora.", ImeIgraca( id ) );
			format( globalstring, sizeof( globalstring ), "{FF0000}|| SLOBODA || "SERVERBOJA_AQUA"%s {FFFFFF}oslobadja iz zatvora igraca "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
			AdminPoruka( -1, globalstring );
			new string[ 128 ];
			format( string, sizeof( string ), "Admin %s je unjailovao igraca %s", ImeIgraca( playerid ), ImeIgraca( id ) );
			LogSave( "Ostalo/LogUnJail.log", string );
		}else return GRESKA( playerid, "Taj igrac nije zatvoren!" );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:area( playerid, params[] )//KOMANDA ZA JEBENU AREU
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, vreme, razlog[40];
		if( sscanf( params, "uis[40]", id, vreme, razlog ) )
		{
			SendUsageMessage( playerid, "/area [ ID ] [ sati ] [ razlog ]");
			return 1;
		}
		if( id != INVALID_PLAYER_ID )
		{
			if( IsPlayerConnected( id ) )
			{
				if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozes njega!");
				if( vreme < 1 || vreme > 120 ) return GRESKA( playerid, "Ne mozes ispod 1 i preko 120 sati u arei!");
				
				if( PlayerInfo[ playerid ][ xHelper ] >= 3 )
				{
					if( PlayerInfo[ id ][ xHelper ] == 0 ) return GRESKA( playerid, "Head GameMaster moze samo GameMastere da zatvori!" );
				}

				if( PlayerInfo[ id ][ xUbijen ] == 1 ) return GRESKA( playerid, "Sacekajte igrac je na lijecenju!" );
				ResetAllWeapons( id );
				PlayerInfo[ id ][ xZatvor ] = ALKATRAZ;
				PlayerInfo[ id ][ xZatvorVreme ] = vreme*60;
				ClearAnimations( id );
				
				format( globalstring, sizeof( globalstring ), "~r~Do slobode: ~w~%d ~r~min",( PlayerInfo[ id ][ xZatvorVreme ]+1 ) );
				PlayerTextDrawSetString(id,JailTD[id],globalstring);
				PlayerTextDrawShow(id,JailTD[id]);
			
				if( IsPlayerAttachedObjectSlotUsed( id, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( id, OBJECT_SLOT_RHAND );
				SetPlayerSpecialAction( id, SPECIAL_ACTION_NONE );
				PlayerCuffed[ id ] = 0;
				announcement( id, "~r~AREA~w~51", 5000, 3 );
				new string[ 128 ];
				format( string, sizeof( string ), "Admin %s je stavio u Areu igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), razlog );
				LogSave( "Ostalo/LogPrison.log", string );
				AI[ playerid ][ aTJail ]++;
				SacuvajAdmina( playerid );
				PlayerCP[ id ] = 0;
				Dimi_SetPlayerPos( id, 268.6684, 1882.3318, -29.9074 );
				SetPlayerWorldBounds( id, 337.5694,101.5826,1940.9759,1798.7453 );
				
				PlayerInfo[ id ][ xWanted ] = 0;
				Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
				strmid( ZlocinInfo[ id ][ zPrijavio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zPocinio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zZlocin ], "Nema", 0, strlen("Nema"), 255 );
				announcement( id, "~y~Ucitavanje sistema i objekata...", 1000, 4 );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", id );
				SetCameraBehindPlayer( id );
				SetPlayerInterior( id, 0);
				SetPlayerVirtualWorld( id, 1);
				TogglePlayerControllable( id, 0 );
				SavePlayer( id );

				SendClientMessageEx( id, -1, "{FF0000}AREA | {FFFFFF}Stavljen si u Areu od Admina na %d sati, Razlog: %s", vreme, razlog );
				SendClientMessageEx( playerid, -1, "{FF0000}AREA | {FFFFFF}Stavili ste %s u Areu na %d sati, Razlog: %s", ImeIgraca( id ), vreme, razlog );


				format( globalstring, sizeof( globalstring ), "{FF0000}AREA: {FFFFFF}Admin je postavio igraca "SERVERBOJA_AQUA"%s {FFFFFF}u AREU!", ImeIgraca( id ) );
				SCMA( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}AREA: {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				SCMA( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}|| AREA || "SERVERBOJA_AQUA"%s {FFFFFF}stavlja "SERVERBOJA_AQUA"%s {FFFFFF}u AREU na "SERVERBOJA_AQUA"%dh", ImeIgraca( playerid ), ImeIgraca( id ), vreme );
				AdminPoruka( -1, globalstring );

				format( globalstring, sizeof( globalstring ), "{FF0000}|| AREA || {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s.", razlog );
				AdminPoruka( -1, globalstring );
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offarea( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 3  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vreme, razlog[40], imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]is[40]", imeigraca, vreme, razlog ) )
		{
			SendUsageMessage( playerid, "/offarea [ Ime_Prezime ] [ sati ] [ razlog ]");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}
		if( vreme < 1 ) return GRESKA( playerid, "Ne mozete ispod 1 sati staviti u Areu stavi ga onda u zatvor!");
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Zatvor", ALKATRAZ );
		INI_WriteInt( File, "ZatvorVreme", vreme*60 );
		INI_WriteString( File, "OffPPrison", razlog );
		INI_Close( File );
		AI[ playerid ][ aTJail ]++;
		SacuvajAdmina( playerid );
		SendInfoMessage( playerid, "Postavili ste offline igraca %s u AREU na %d sati.Razlog: %s", imeigraca, vreme, razlog );
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s je offprisonao igraca %s | Razlog: %s", ImeIgraca( playerid ), imeigraca, razlog );
		LogSave( "Ostalo/LogOffPrison.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tod( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 3  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vreme;
		if( sscanf( params, "i", vreme ) )
		{
			SendUsageMessage( playerid, "/tod [ vreme(0-23) ]");
			return 1;
		}
		SetWorldTime( vreme );
		GlobalniSat = vreme;
		ServerInfo[ VremeInGame ] = vreme;
		format( globalstring, sizeof( globalstring ), ""col_balkanstory"Vrijeme postavljeno na %d sati od strane AST-a.", vreme );
		SCMA( ZELENA, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vreme( playerid, params[] )
{
	new vreme, cungalungabobe[200];
	if( PlayerInfo[ playerid ][ xAdmin ] < 3 )  return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( sscanf( params, "i", vreme ) )
	{
		SendUsageMessage( playerid, "/vreme [ broj ]");
		SendClientMessagee( playerid, UGBOJA,"_____________________________________________________________________________________");
		SendClientMessagee( playerid, UGBOJA, "| "col_white"1: Sunce | 2: Kisa  | 3: Oluja | 4: Magla  | 5: Pjescana Oluja | 6: Toxic | 7: Draw Distance ");
		SendClientMessagee( playerid, UGBOJA,"_____________________________________________________________________________________");
	}
	if( vreme < 1 || vreme > 7 ) return GRESKA( playerid, "Odabir mora biti veci od 0 i manji od 7");
	switch( vreme )
	{
		case 1:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 6 ); ServerInfo[ Prognozasys ] = 6; GlobalnoVrijeme = 6;
		}
		case 2:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 16 ); ServerInfo[ Prognozasys ] = 16; GlobalnoVrijeme = 16;
		}
		case 3:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 8 ); ServerInfo[ Prognozasys ] = 8; GlobalnoVrijeme = 8;
		}
		case 4:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 9 ); ServerInfo[ Prognozasys ] = 9; GlobalnoVrijeme = 9;
		}
		case 5:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 19 ); ServerInfo[ Prognozasys ] = 19; GlobalnoVrijeme = 19;
		}
		case 6:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( 20 ); ServerInfo[ Prognozasys ] = 20; GlobalnoVrijeme = 20;
		}
		case 7:
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| WEATHER || "SERVERBOJA_AQUA"%s {FFFFFF}je stavio vrijeme id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), vreme );
			AdminPoruka( -1, globalstring );
			format(cungalungabobe,sizeof(cungalungabobe),""col_balkanstory"|| VRIJEME - ID: %d ||:"SERVERBOJA_SIVA" Admin %s je postavio novo stanje vremena u gradu!",vreme,ImeIgraca(playerid));
			SCMA(-1,cungalungabobe);
			SetWeather( -1337 );  ServerInfo[ Prognozasys ] = -1337; GlobalnoVrijeme = -1337;
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:freeze( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 2)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/freeze [ ID/Ime ]");
		if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozes njega!");
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			{
				TogglePlayerControllable( id, 0 );
				SendInfoMessage( id, "Admin %s vas je zaledio.", ImeIgraca( playerid ) );
				SendInfoMessage( playerid, "Zaledili ste igraca %s.", ImeIgraca( id ) );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| FREZZE || "SERVERBOJA_AQUA"%s {FFFFFF}je zaledio igraca "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
				AdminPoruka( -1, globalstring );
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unfreeze( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Morate biti na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/unfreeze [ ID/Ime ]");
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			{
				TogglePlayerControllable( id, 1 );
				SendInfoMessage( id, "Admin %s vas je odledio.", ImeIgraca( playerid ) );
				SendInfoMessage( playerid, "Odledili ste igraca %s.", ImeIgraca( id ) );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| FREZZE || "SERVERBOJA_AQUA"%s {FFFFFF}je odledio igraca "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
				AdminPoruka( -1, globalstring );
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unbanip( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new playersip[100];
		if( sscanf( params, "s[100]", playersip ) )
		{
			SendUsageMessage( playerid, "/unbanip [ Igracev IP ]");
			return 1;
		}
		AI[ playerid ][ aTUnban ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]--;
		format( globalstring, sizeof( globalstring ), "unbanip %s", playersip );
		SendRconCommand( globalstring );
		SendRconCommand( "reloadbans" );
		format( globalstring, 128, "{FF0000}|| UNBANIP || "SERVERBOJA_AQUA"%s {FFFFFF}je unbanovao IP "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), playersip );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
new MuzikaUrl[ 256 ];

CMD:replaymusic( playerid, params[] )
{
	StopAudioStreamForPlayer( playerid );
	PlayAudioStreamForPlayer( playerid, MuzikaUrl );
	SendInfoMessage( playerid, "Ponovo ste pustili muziku." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pustimuziku( playerid, params[] )
{
	if(PlayerInfo[playerid][xDJ] != 1) return greska(playerid,"Samo DJ-evi mogu pustati muziku!");
	new url[ 256 ];
	if( sscanf( params, "s[256]", url ) )
	{
		SendUsageMessage( playerid, "/pustimuziku [ url pjesme ]");
		return 1;
	}
	strmid( MuzikaUrl, url, 0, strlen( url ), 256 );
	for(new i; i < MAX_PLAYERS; i++)
	{
		StopAudioStreamForPlayer( i );
		PlayAudioStreamForPlayer( i, url );//https://jjs.jisiss.is/06282ea54b2fd6f81d892c84dda4114b/W4VTq0sa9yg/cauwcrnwcaewra
	}
   
	new ukljucena_muzika_report[300];
	format(ukljucena_muzika_report,sizeof(ukljucena_muzika_report),""col_balkanstory"[MUZIKA]: %s {ffffff}je pustio pjesmu na radiju - /narucipjesmu, /replaymusic i /music [OFF]",ImeIgraca(playerid));
	SCMA(-1,ukljucena_muzika_report);
	return 1;
}
CMD:narucipjesmu(playerid,params[])
{
	new narudzba_dj_report[300];
	if(sscanf(params,"s[300]",narudzba_dj_report)) return SendUsageMessage(playerid,"/narucipjesmu [ text ]");

	new narucena_pjesma_report[300];
	format(narucena_pjesma_report,sizeof(narucena_pjesma_report),""col_red"| NARUDZBA ZA MUZIKU |:{ffffff} Igrac %s[%d] - narucio:"SERVERBOJA_SIVA" %s",ImeIgraca(playerid),playerid,narudzba_dj_report);
	
	DJPoruka(-1,narucena_pjesma_report);
	SendInfoMessage(playerid,"Narucio si: "SERVERBOJA_SIVA"%s",narudzba_dj_report);
	return 1;
}
CMD:djporuka(playerid,params[])
{
	if(PlayerInfo[playerid][xDJ] != 1) return greska(playerid,"Samo DJ-evi mogu slati dj odgovor");
	new id,narudzba_dj_report[300];
	if(sscanf(params,"is[300]",id,narudzba_dj_report)) return SendUsageMessage(playerid,"/djporuka [ id ] [ text ]");

	if( id == IPI ) return greska(playerid,"Taj ID nije validan!");

	new narucena_pjesma_report[300];
	format(narucena_pjesma_report,sizeof(narucena_pjesma_report),""col_red"| DJ ODGOVOR |:{ffffff} DJ %s:"SERVERBOJA_SIVA" %s",ImeIgraca(playerid),narudzba_dj_report);
	
	SendClientMessage(id,-1,narucena_pjesma_report);
	SendInfoMessage(playerid,"Poslao si odgovor %s, tekst: %s",ImeIgraca(id),narudzba_dj_report);
	return 1;
}
CMD:djhelp( playerid, params[] )
{
	if(PlayerInfo[playerid][xDJ] != 1) return greska(playerid,"Samo DJ-evi mogu pristupiti ovim komandama!");
	SendInfoMessage(playerid,"DJ komande: /djporuka /pustimuziku");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:entercar( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vehicleid;
		if( sscanf( params, "i", vehicleid ) )
		{
			SendUsageMessage( playerid, "/entercar [ ID vozila ]");
			return 1;
		}
		Dimi_PutPlayerInVehicle( playerid, vehicleid, 0 );
		SendInfoMessage( playerid, "Usli ste u vozilo ID: %d.", vehicleid );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:banip( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new playersip[100];
		if( sscanf( params, "s[100]", playersip ) )
		{
			SendUsageMessage( playerid, "/banip [ Igracev IP ]");
			return 1;
		}
		AI[ playerid ][ aTBan ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]++;
		format( globalstring, sizeof( globalstring ), "banip %s", playersip );
		SendRconCommand( globalstring );
		SendRconCommand( "reloadbans" );
		format( globalstring, 128, "{FF0000}|| BANIP || "SERVERBOJA_AQUA"%s {FFFFFF}je banovao IP "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), playersip );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gotocar( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new id;
		if( sscanf(params, "i", id ) ) return SendUsageMessage( playerid, "/gotocar [carid(/dl)]");
		new Float:cwx2, Float:cwy2, Float:cwz2;
		GetVehiclePos( id, cwx2, cwy2, cwz2 );
		if( GetPlayerState( playerid ) == 2 )
		{
			new tmpcar = GetPlayerVehicleID( playerid );
			Dimi_SetVehiclePos( tmpcar, cwx2, cwy2, cwz2 );
		}
		else
			Dimi_SetPlayerPos( playerid, cwx2, cwy2, cwz2 );
		SendClientMessagee( playerid, BELA, "Teleportirani ste");
		SetPlayerInterior( playerid, 0 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:getcar( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xVIPLevel ] >= 4 )
	{

		new id;
		if( sscanf( params, "i", id ) )
		{
			SendUsageMessage( playerid, "/getcar [carid(/dl)]");
			return 1;
		}
		new Float:plocx, Float:plocy, Float:plocz;
		GetPlayerPos( playerid, plocx, plocy, plocz );
		Dimi_SetVehiclePos( id, plocx, plocy+4, plocz );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:zatvoreni( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "Online igraci u zatvoru/arei:");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerConnected( i ) )
			{
				if( PlayerInfo[ i ][ xZatvor ] >= 1)
				{
					format( globalstring, sizeof( globalstring ), "%s (%d) - Zatvoren na: %d minuta", ImeIgraca( i ), i, PlayerInfo[ i ][ xZatvorVreme ] );
					SendClientMessagee( playerid, SIVA, globalstring );
				}
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:trazeni( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "Online igraci sa wanted levelom:");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerConnected( i ) ) {
				if( PlayerInfo[ i ][ xWanted ] >= 1)
				{
					format( globalstring, sizeof( globalstring ), "%s (%d) - Wanted: %d", ImeIgraca( i ), i, PlayerInfo[ i ][ xWanted ] );
					SendClientMessagee( playerid, SIVA, globalstring );
				}
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:utisani( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "Online utisani igraci:");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerConnected( i ) )
			{
				if( PlayerInfo[ i ][ xMute ] != 0 )
				{
					format( globalstring, sizeof( globalstring ), "%s (%d)", ImeIgraca( i ), i );
					SendClientMessagee( playerid, SIVA, globalstring );
				}
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pweapons( playerid, params[] )
{
	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/pweapons [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( id ) )
	{
		if( id != INVALID_PLAYER_ID )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 3)
			{
				new weapon[13],
					bullets[13];
				format( globalstring, sizeof( globalstring ), "%s", ImeIgraca( id ) );
				SendClientMessagee( playerid, ZELENA, globalstring );

				for( new slot = 0; slot < 13; slot++)
				{
					GetPlayerWeaponData( id, slot, weapon[ slot ], bullets[ slot ] );
					format( globalstring, sizeof( globalstring ), "    SLOT: %d, ORUZJE: %s, METAKA: %d.", slot, WeapNames[ weapon[ slot ] ], bullets[ slot ] );
					SendClientMessagee( playerid, BELA, globalstring );
				}
			}
			else
			{
				GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
				return 1;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:maskirani( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "Igraci s maskama:");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( Maskuse[ i ] == true )
			{
				format( globalstring, sizeof( globalstring ), "** ID maske: Maska_%d ** - %s(%d)", PlayerInfo[ i ][ xMaskID ], ImeIgraca( i ), i);
				SendClientMessagee( playerid, BELA, globalstring );
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:napunivozila( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for( new i = 1; i < MAX_VEHICLES; i++ )
		{
			if( TipVozila[ i ] != PRIVATNO_VOZILO )
			{
				Fuel[ i ] = getAmountFuel( i );
				FuelTime[ i ] = 0;
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| FUEL || "SERVERBOJA_AQUA"%s {FFFFFF}je napunio sva vozila gorivom.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:odbrojavanje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new seconds,
			string[200];

		if( sscanf( params, "i", seconds ) )
		{
			GRESKA( playerid, "Morate unijeti vrijednost u sekundama.");
			return 1;
		}
		if( seconds > 20 ) return GRESKA( playerid, "Sekunde nemogu biti manje od 1 i vece od 20!");
		if( cseconds ) return GRESKA( playerid, "Vec je odbrojavanje u tijeku.");
		if( seconds > 0 )
		{
			format( string, 40, "Zapoceli ste odbrojavanje od %d sekundi.", seconds );
			SendClientMessagee( playerid, SVETLOPLAVA, string );
			cseconds = seconds+1;
			format( string, sizeof( string ), "{FF0000}|| COUNT || "SERVERBOJA_AQUA"%s {FFFFFF}%s koristi komandu /odbrojavanje.", ImeIgraca( playerid ) );
			AdminPoruka( -1, string );
		}
		else GRESKA( playerid, "Sekunde moraju biti vece od i manje od 20!");
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:obrisikontejner( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );

	new i = GetNearestContainer( playerid );
	if( IsValidDynamicObject( KontInfo[ i ][ koObjID ] ) )
		DestroyDynamicObject( KontInfo[ i ][ koObjID ] );

	KontInfo[ i ][ koObjPos ][ 0 ] = 0;
	KontInfo[ i ][ koObjPos ][ 1 ] = 0;
	KontInfo[ i ][ koObjPos ][ 2 ] = 0;
	KontInfo[ i ][ koObjRot ][ 0 ] = 0;
	KontInfo[ i ][ koObjRot ][ 1 ] = 0;
	KontInfo[ i ][ koObjRot ][ 2 ] = 0;

	new fstring[ 64 ];
	format( fstring, sizeof( fstring ), KO_FILE, i );
	if( fexist( fstring ) ) { fremove( fstring ); }
	SendInfoMessage( playerid, "Obrisao si kontejner. ID = %d.", i );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ogetcar( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337  )
	{
		new id, File[ 50 ];
		if( sscanf( params, "i", id ) )
		{
			SendUsageMessage( playerid, "/ogetcar [ SciptID vozila ]");
			return 1;
		}
		format( File, sizeof( File ), V_FILE, id );
		if( !fexist( File ) ) return GRESKA( playerid, "To vozilo(ID) ne postoji u bazi podataka!");
		new Float:plocx, Float:plocy, Float:plocz;
		GetPlayerPos( playerid, plocx, plocy, plocz );
		Dimi_SetVehiclePos( VehicleInfo[ id ][ vID ], plocx, plocy+4, plocz );
		LinkVehicleToInterior( VehicleInfo[ id ][ vID ], GetPlayerInterior( playerid ) );
		SetVehicleVirtualWorld( VehicleInfo[ id ][ vID ], GetPlayerVirtualWorld( playerid ) );
		SendClientMessageEx( playerid, BELA, "Teleportovali ste vozilo ScriptID %d do sebe.", id );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pomerilokaciju( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new Float:Pos[ 3 ], izbor, ID, File[ 50 ];

	if( sscanf( params, "ii", izbor, ID ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/pomerilokaciju [ izbor  ] [ id ]");
		SendClientMessagee( playerid, BELA, "[Izbor] 1. imovina | 2. firma | 3. organizacija");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( izbor == 1 )
	{
		format( File, sizeof( File ), IM_FILE, ID );
		if( !fexist( File ) ) return GRESKA( playerid, "Ta imovina(ID) ne postoji u bazi podataka!");
		GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
		II[ ID ][ iEnter ][ 0 ] = Pos[ 0 ];
		II[ ID ][ iEnter ][ 1 ] = Pos[ 1 ];
		II[ ID ][ iEnter ][ 2 ] = Pos[ 2 ];
		PropertyRefresh( ID );
		SaveProperty( ID );
		SendInfoMessage( playerid, "Uspjesno ste prebacili lokaciju imovine ID: %d.", ID );
	}
	else if( izbor == 2 )
	{
		format( File, sizeof( File ), F_FILE, ID );
		if( !fexist( File ) ) return GRESKA( playerid, "Ta firma(ID) ne postoji u bazi podataka!");
		GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
		BussinesInfo[ ID ][ bEnterX ] = Pos[ 0 ];
		BussinesInfo[ ID ][ bEnterY ] = Pos[ 1 ];
		BussinesInfo[ ID ][ bEnterZ ] = Pos[ 2 ];
		Bussines_Refresh( ID );
		SaveBussines( ID );
		SendInfoMessage( playerid, "Uspjesno ste prebacili lokaciju firme ID: %d.", ID );
	}
	else if( izbor == 3 )
	{
		format( File, sizeof( File ), O_FILE, ID );
		if( !fexist( File ) ) return GRESKA( playerid, "Ta organizacija(ID) ne postoji u bazi podataka!");
		GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
		OI[ ID ][ oPozExtX ] = Pos[ 0 ];
		OI[ ID ][ oPozExtY ] = Pos[ 1 ];
		OI[ ID ][ oPozExtZ ] = Pos[ 2 ];
		Orge3D( ID );
		SaveOrganization( ID );
		SendInfoMessage( playerid, "Uspjesno ste prebacili lokaciju organizacije ID: %d.", ID );
	}
	else return GRESKA( playerid, "Pogresan broj izabrane vrste." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proverifirmu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 3 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

	new id, File[ 50 ];
	if( sscanf( params, "i",id ) ) return SendUsageMessage( playerid, "/proverifirmu [ ID firme ]");
	format( File, sizeof( File ), F_FILE, id );
	if( !fexist( File ) ) return GRESKA( playerid, "Ta firma(ID) ne postoji u bazi podataka!");

	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	format( globalstring, sizeof( globalstring ), ""col_white"Ime firme: %s\n\n", BussinesInfo[ id ][ bName ] );
	strcat( DialogStrgEx, globalstring );
	format( globalstring, sizeof( globalstring ), ""col_white"Novac: %d$\n\n", BussinesInfo[ id ][ bMoney ] );
	strcat( DialogStrgEx, globalstring );
	format( globalstring, sizeof( globalstring ), ""col_white"Fakture: %d\n\n", BussinesInfo[ id ][ bFacture ] );
	strcat( DialogStrgEx, globalstring );
	format( globalstring, sizeof( globalstring ), "ID: %d | Vlasnik %s", id, BussinesInfo[ id ][ bOwner ] );
	ShowPlayerDialog( playerid, 0, DSMSG, globalstring, DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proveriimovinu( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	
	new id, File[ 50 ];
	if( sscanf( params, "i",id ) ) return SendUsageMessage( playerid, "/proveriimovinu [ ID imovine ]");
	format( File, sizeof( File ), IM_FILE, id );
	if( !fexist( File ) ) return GRESKA( playerid, "Ta imovina(ID) ne postoji u bazi podataka!");
	new wepname1[ 32 ], wepname2[ 32 ], wepname3[ 32 ], wepname4[ 32 ];
	#if nerp_droga == 1
	new drug1 = II[ id ][ iDrugCode ][ 0 ],
	drug2 = II[ id ][ iDrugCode ][ 1 ],
	drug3 = II[ id ][ iDrugCode ][ 2 ],
	drug4 = II[ id ][ iDrugCode ][ 3 ],
	drug5 = II[ id ][ iDrugCode ][ 4 ],
	drug6 = II[ id ][ iDrugCode ][ 5 ],
	drug7 = II[ id ][ iDrugCode ][ 6 ],
	drug8 = II[ id ][ iDrugCode ][ 7 ],
	drug9 = II[ id ][ iDrugCode ][ 8 ],
	drug10 = II[ id ][ iDrugCode ][ 9 ];
	#endif
	if( II[ id ][ iOruzje ][ 0 ] != 0)
		format( wepname1, sizeof( wepname1 ), "%s", WeapNames[ II[ id ][ iOruzje ][ 0 ] ] );
	else
		strmid(wepname1, "None", 0, 5);

	if( II[ id ][ iOruzje ][ 1 ] != 0)
		format( wepname2, sizeof( wepname2 ), "%s", WeapNames[ II[ id ][ iOruzje ][ 1 ] ] );
	else
		strmid(wepname2, "None", 0, 5);

	if( II[ id ][ iOruzje ][ 2 ] != 0)
		format( wepname3, sizeof( wepname3 ), "%s", WeapNames[ II[ id ][ iOruzje ][ 2 ] ] );
	else
		strmid(wepname3, "None", 0, 5);

	if( II[ id ][ iOruzje ][ 3 ] != 0)
		format( wepname4, sizeof( wepname4 ), "%s", WeapNames[ II[ id ][ iOruzje ][ 3 ] ] );
	else
		strmid(wepname4, "None", 0, 5);


	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	
	format( globalstring, sizeof( globalstring ), ""col_white"Novac: %d$\n\n", II[ id ][ iMoney ] );
	strcat( DialogStrgEx, globalstring );
	
	format( globalstring, sizeof( globalstring ), "Materijali: %d\n", II[ id ][ iMats ] );
	strcat( DialogStrgEx, globalstring );
	
	strcat( DialogStrgEx, ""col_red"______________ORUZJE______________\n" );
	#if nerp_droga == 1
	format( globalstring, sizeof( globalstring ), ""col_white"Slot 1: %s(%d g) | Slot 2: %s(%d g)\n", GetDrugNameByDrugID(drug1), II[ id ][ iDrug ][ 0 ], GetDrugNameByDrugID(drug2), II[ id ][ iDrug ][ 1 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 3: %s(%d g) | Slot 4: %s(%d g)\n", GetDrugNameByDrugID(drug3), II[ id ][ iDrug ][ 2 ], GetDrugNameByDrugID(drug4), II[ id ][ iDrug ][ 3 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 5: %s(%d g) | Slot 6: %s(%d g)\n", GetDrugNameByDrugID(drug5), II[ id ][ iDrug ][ 4 ], GetDrugNameByDrugID(drug6), II[ id ][ iDrug ][ 5 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 7: %s(%d g) | Slot 8: %s(%d g)\n", GetDrugNameByDrugID(drug7), II[ id ][ iDrug ][ 6 ], GetDrugNameByDrugID(drug8), II[ id ][ iDrug ][ 7 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 9: %s(%d g) | Slot 10: %s(%d g)\n\n", GetDrugNameByDrugID(drug9), II[ id ][ iDrug ][ 8 ], GetDrugNameByDrugID(drug10), II[ id ][ iDrug ][ 9 ] );
	strcat( DialogStrgEx, globalstring );

	strcat( DialogStrgEx, ""col_red"______________DROGA______________\n" );
	#endif
	format( globalstring, sizeof( globalstring ), ""col_white"Slot 1:[%s]    |    Metaka: %d\n", wepname1, II[ id ][ iMunicija ][ 0 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 2:[%s]    |    Metaka: %d\n", wepname2, II[ id ][ iMunicija ][ 1 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 3:[%s]    |    Metaka: %d\n", wepname3, II[ id ][ iMunicija ][ 2 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "Slot 4:[%s]    |    Metaka: %d", wepname4, II[ id ][ iMunicija ][ 3 ] );
	strcat( DialogStrgEx, globalstring );

	format( globalstring, sizeof( globalstring ), "ID: %d | Vlasnik %s", id, II[ id ][ iOwner ] );

	ShowPlayerDialog( playerid, 0, DSMSG, globalstring, DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new Float:Pos[ 3 ],odabir[ 20 ], id, File[ 50 ];
		if( sscanf( params, "s[20]i", odabir, id ) )
		{
			SendUsageMessage( playerid, "/oport [ ime ] [ ID ]");
			SendClientMessagee(playerid, BELA, "Dostupno: imovina, firma, vozilo, organizacija, hotel, imanje, garaza");
			SendClientMessagee(playerid, BELA, "Dostupno: kontejner, posao");
			return true;
		}
		else
		{
			if(strcmp(odabir,"imovina",true) == 0)
			{
				format( File, sizeof( File ), IM_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Ta imovina(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, II[ id ][ iEnter ][ 0 ], II[ id ][ iEnter ][ 1 ], II[ id ][ iEnter ][ 2 ] );
				SetPlayerInterior( playerid,0 );
				SetPlayerVirtualWorld( playerid,0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do kuce ID %d",id);
			}
			if(strcmp(odabir,"firma",true) == 0)
			{
				format( File, sizeof( File ), F_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Ta firma(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, BussinesInfo[ id ][ bEnterX ], BussinesInfo[ id ][ bEnterY ], BussinesInfo[ id ][ bEnterZ ] );
				SetPlayerInterior( playerid,0 );
				SetPlayerVirtualWorld( playerid,0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do firme ID %d", id);
			}
			if(strcmp(odabir,"vozilo",true) == 0)
			{
				format( File, sizeof( File ), V_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "To vozilo(ID) ne postoji u bazi podataka!");
				GetVehiclePos( VehicleInfo[ id ][ vID ], Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
				Dimi_SetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ]+3 );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do vozila ID %d", id);
			}
			if(strcmp(odabir,"organizacija",true) == 0)
			{
				format( File, sizeof( File ), O_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Ta organizacija(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, OI[ id ][ oPozExtX ], OI[ id ][ oPozExtY ], OI[ id ][ oPozExtZ ] );
				SetPlayerInterior( playerid,0 );
				SetPlayerVirtualWorld( playerid,0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do organizacije ID %d", id);
			}
			if(strcmp(odabir,"hotel",true) == 0)
			{
				format( File, sizeof( File ), HOTEL_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Taj hotel(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, hotelInfo[ id ][ hEnter ][ 0 ], hotelInfo[ id ][ hEnter ][ 1 ], hotelInfo[ id ][ hEnter ][ 2 ] );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do hotela ID %d", id);
			}
			if(strcmp(odabir,"imanje",true) == 0)
			{
				format( File, sizeof( File ), F_FIELD, id );
				if( !fexist( File ) ) return GRESKA( playerid, "To imanje(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, fieldInfo[ id ][ fieldObjectPos ][ 0 ], fieldInfo[ id ][ fieldObjectPos ][ 1 ], fieldInfo[ id ][ fieldObjectPos ][ 2 ] );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do imanja ID %d", id);
			}
			if(strcmp(odabir,"garaza",true) == 0)
			{
				format( File, sizeof( File ), F_GARAGE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Ta garaza(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, garageInfo[ id ][ garagePos ][ 0 ], garageInfo[ id ][ garagePos ][ 1 ], garageInfo[ id ][ garagePos ][ 2 ] );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do garaze ID %d", id);
			}
			if(strcmp(odabir,"kontejner",true) == 0)
			{
				format( File, sizeof( File ), KO_FILE, id );
				if( !fexist( File ) ) return GRESKA( playerid, "Taj kontejner(ID) ne postoji u bazi podataka!");
				Dimi_SetPlayerPos( playerid, KontInfo[ id ][ koObjPos ][ 0 ]+2, KontInfo[ id ][ koObjPos ][ 1 ], KontInfo[ id ][ koObjPos ][ 2 ] );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do kontejnera ID %d", id);
			}
			if(strcmp(odabir,"posao",true) == 0)
			{
				if( id < 1 || id > MAX_JOBS ) return GRESKA( playerid, "Taj posao(ID) ne postoji u bazi podataka(1-12)!");
				id--;
				Dimi_SetPlayerPos( playerid, jobsInfos[ id ][ jPos ][ 0 ], jobsInfos[ id ][ jPos ][ 1 ], jobsInfos[ id ][ jPos ][ 2 ] );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				SendClientMessageEx( playerid, BELA, "Teleportovali ste se do posla %s.", jobsInfos[ id ][ jName ] );
			}
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:lp( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
		for( new i = 1; i < MAX_ASKQS; i++ )
		{
			format( DialogStrgEx, sizeof( DialogStrgEx ), "%s"col_balkanstory"[ %d ] {FFFFFF}>> %s[ %d ]\n", DialogStrgEx, i, askqList[ i ][ askqOwner ], askqList[ i ][ askqID ] );
		}
		ShowPlayerDialog( playerid, dialog_ASKLISTA, DSL, "Lista pitanja", DialogStrgEx, D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1)
		{
			if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		if( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1339 )
		{
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
		}
		ShowPlayerDialog( playerid, dialog_SELECTAPORT, DSL, "Admin port", "Beograd\nSarajevo\nZagreb\nOstale lokacije", D_ODABERI, D_ODUSTANI );
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
CMD:sport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
	{
		SendSrwMessage(playerid, "Usao si u meni za teleportovanje!");
		ShowPlayerDialog( playerid, dialog_SELECTAPORT, DSL, "Port sistem", "Beograd\nSarajevo\nZagreb\nOstale lokacije", D_ODABERI, D_ODUSTANI );

	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
CMD:portaj(playerid, params[])
{
	if(PlayerInfo[playerid][xAdmin] < 1) return greska(playerid, "Niste u mogucnosti koristiti ovu komandu.");
	new id;
	if(sscanf(params,"i",id)) return SendUsageMessage(playerid, "/portaj [id]");
	if(id == IPI) return greska(playerid, "Taj igrac nije na serveru!");

	ShowPlayerDialog( id, dialog_SELECTAPORT, DSL, "Jednoupotrebni sistem porta", "Beograd\nSarajevo\nZagreb\nOstale lokacije", D_ODABERI, D_ODUSTANI );
	SendInfoMessage(id, "Admin vam je dao mogucnost jednog portanja.");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gmport( playerid, params[] )
{
	if(  PlayerInfo[ playerid ][ xAdmin ] >= 1338 || PlayerInfo[ playerid ][ xHelper ] >= 1 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Da bi koristili ovu komandu morate biti GM na duznosti." );
		if( PlayerInfo[ playerid ][ xHelper ] >= 1 )
		{
			if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristiti ovu komandu dok si u DM Zoni." );
			if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
			if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok imas wanted level." );
			if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
		}
		ShowPlayerDialog( playerid, dialog_SELECTSPORT, DSL, "GameMaster port", "Beograd\nSarajevo\nZagreb\nOstale lokacije", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mark( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xHelper ] >= 4 || PlayerInfo[ playerid ][ xVIPLevel ] >= 3 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xHelper ] >= 4)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		GetPlayerPos( playerid, PlayerInfo[ playerid ][ xMarker ][ 0 ], PlayerInfo[ playerid ][ xMarker ][ 1 ], PlayerInfo[ playerid ][ xMarker ][ 2 ] );
		SendInfoMessage( playerid, "Sacuvao si poziciju za teleportovanje(/gotomark)!");
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gotomark( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xHelper ] >= 4 || PlayerInfo[ playerid ][ xVIPLevel ] >= 3 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xHelper ] >= 4)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		if( GetPlayerState( playerid ) == 2 )
		{
			Dimi_SetVehiclePos( GetPlayerVehicleID( playerid ), PlayerInfo[ playerid ][ xMarker ][ 0 ], PlayerInfo[ playerid ][ xMarker ][ 1 ], PlayerInfo[ playerid ][ xMarker ][ 2 ] );
			SendInfoMessage( playerid, "Teleportirani ste na oznakenu poziciju");
			SetPlayerInterior( playerid, 0 ); SetPlayerVirtualWorld( playerid, 0 );
		}
		else
		{
			Dimi_SetPlayerPos( playerid, PlayerInfo[ playerid ][ xMarker ][ 0 ], PlayerInfo[ playerid ][ xMarker ][ 1 ], PlayerInfo[ playerid ][ xMarker ][ 2 ] );
			SendInfoMessage( playerid, "Teleportirani ste na oznakenu poziciju");
			SetPlayerInterior( playerid, 0 ); SetPlayerVirtualWorld( playerid, 0 );
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proveri( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2  )
	{
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/proveri [ ID/Ime ]" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		ShowStats( playerid, id );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aktivnostigraca( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2  )
	{

		new imeigraca[24], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/aktivnostigraca [ Ime_Prezime ]" );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da proveri ga online.");
			return 1;
		}
		INI_ParseFile( ifile, "ShowOffStats" );

		new banfile[ 100 ]; new razlogbana[ 128 ] = "Nepoznat";
		new banan[ 10 ] = "Ne";
		format( banfile, sizeof( banfile ), FILE_BAN, imeigraca );
		if( fexist( banfile ) )
		{
		format( banan, sizeof( banan ), "Da" );
		new File: UserFile = fopen( banfile, io_read );
		new key[256];
		new Data[256];
		while ( fread( UserFile , Data, sizeof( Data ) ) )
		{
			key = ini_GetKey( Data );
			if( strcmp( key , "Razlog" , true ) == 0 )
			{
				format( razlogbana, strlen( ini_GetValue ( Data ) ), "%s", ini_GetValue( Data ) );
			}
		}
		fclose( UserFile );
		}
		else
		{
			format( banan, sizeof( banan ), "Ne" );
		}

		new pol[ 7 ];
		if( PlayerInfo[ playerid ][ xPol ] == 1 ) pol = "musko";
		else if( PlayerInfo[ playerid ][ xPol ] == 2 ) pol = "zensko";

		new nxtlevel = OfflineCheck[ Level ]+1,
			expamount = nxtlevel*levelexp,
			warns = OfflineCheck[ Upozorenja ],
			level = OfflineCheck[ Level ],
			exp = OfflineCheck[ Respekt ];

		SendClientMessage(playerid, 0x5BD3FFAA,"_________________________________________________");
		format( globalstring, sizeof( globalstring ),"*** %s ***", imeigraca );
		SendClientMessage(playerid, UGBOJA,globalstring);
		format( globalstring, sizeof( globalstring ), "Pol [%s] | Level:[%d] | Sati Igranja:[%d]", pol, level, OfflineCheck[ OnlineSati ] );
		SendClientMessage(playerid, 0xFFFFFFAA,globalstring);
		format( globalstring, sizeof( globalstring ), "Respekt:[%d/%d] | Novac: [%d$] | Banka: [%d$]", exp, expamount, OfflineCheck[ Novac ], OfflineCheck[ Banka ] );
		SendClientMessage(playerid, 0xFFFFFFAA,globalstring);
		format( globalstring, sizeof( globalstring ), "Upozorenja: [%d/3] | Posao: [%s] | Posao ugovor: [%d/5]", warns, getJobName( OfflineCheck[ Posao ] ), OfflineCheck[ Posaougovor ] );
		SendClientMessage(playerid, 0xFFFFFFAA,globalstring);
		format( globalstring, sizeof( globalstring ), "Godine: [%d] | Organizacija: [%s] | Rank: [%d]", OfflineCheck[ Godine ], getOrgName( OfflineCheck[ Organizacija ] ), OfflineCheck[ Rank ] );
		SendClientMessage(playerid, 0xFFFFFFAA,globalstring);
		format( globalstring, sizeof( globalstring ), "Kljuc Imovine1 [%d] | Kljuc Imovine2 [%d] | Kljuc Imovine3 [%d]", OfflineCheck[ Imovina1 ], OfflineCheck[ Imovina2 ], OfflineCheck[ Imovina3 ] );
		SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		format( globalstring, sizeof( globalstring ), "Kljuc Firme [%d] | Kljuc Vozila1 [%d] | Kljuc Vozila2 [%d]", OfflineCheck[ Firma ], OfflineCheck[ Vozilo1 ], OfflineCheck[ Vozilo2 ] );
		SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		format( globalstring, sizeof( globalstring ), "Kljuc Vozila3 [%d] | Kljuc Vozila4 [%d]", OfflineCheck[ Vozilo3 ], OfflineCheck[ Vozilo4 ] );
		SendClientMessage( playerid, 0xF0F0F0FF,globalstring );
		format( globalstring, sizeof( globalstring ), "Kljuc hotela [%d] | Admin [%d] | GameMaster [%d]", OfflineCheck[ Hotel ], OfflineCheck[ Admin ], OfflineCheck[ GameSage ] );
		SendClientMessage( playerid, 0xF0F0F0FF,globalstring );
		format( globalstring, sizeof( globalstring ), "Aktivnost igraca u staff timu: %d minuta", OfflineCheck[ StaffMin ] );
		SendClientMessage( playerid, 0xF0F0F0FF,globalstring );
		format( globalstring, sizeof( globalstring ), "Banovan: %s | Razlog: %s", banan, razlogbana );
		SendClientMessage( playerid, 0xF0F0F0FF,globalstring );
		format( globalstring, sizeof( globalstring ), "Zadnja aktivnost: %s", OfflineCheck[ LastLogin ] );
		SendClientMessage( playerid, 0xF0F0F0FF,globalstring );
		SendClientMessage( playerid, 0x5BD3FFAA,"_________________________________________________");

	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ubij( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id,razlog[32];
		if( sscanf( params, "us[32]", id,razlog ) ) return SendUsageMessage( playerid, "/ubij [ ID/Ime ] [ razlog ]" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		Dimi_SetPlayerHealth( id, 0 );
		format( globalstring, sizeof( globalstring ), "|A| %s ubijen si od Admina %s, Razlog: %s", ImeIgraca( id ), ImeIgraca( playerid ),razlog);
		SendClientMessagee( id, ANTICHEAT, globalstring );
		format( globalstring, sizeof( globalstring ), "|A|Ubijen| %s je ubijen od Admina %s, Razlog: %s", ImeIgraca( id ), ImeIgraca( playerid ),razlog);
		AdminPoruka( 0x9ACD32AA, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
CMD:kill( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2)
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id,razlog[32];
		if( sscanf( params, "us[32]", id,razlog ) ) return SendUsageMessage( playerid, "/kill [ ID/Ime ] [ razlog ]" );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		Dimi_SetPlayerHealth( id, 0 );
		format( globalstring, sizeof( globalstring ), "Postovani, %s - ubijen si od strane staffa %s, razlog toga: %s", ImeIgraca( id ), ImeIgraca( playerid ),razlog);
		SendClientMessagee( id, ANTICHEAT, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:spawn( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/spawn [ ID/Ime ]." );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );

		Dimi_SetSpawnInfo( id );
		SpawnPlayer( id );

		format( globalstring, sizeof( globalstring ), /*"|A| %s spavnan si ponovno od Admina %s"*/"SPAWN | {ffffff}Postovani, %s - vi ste spawnovani od strane admina %s", ImeIgraca( id ), ImeIgraca( playerid ) );
		SendClientMessagee( id, UGBOJA, globalstring );
		format( globalstring, sizeof( globalstring ), "A - INFO {ffffff}| %s je spavnan ponovno od admina %s.", ImeIgraca( id ), ImeIgraca( playerid ) );
		AdminPoruka( tdboja, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:healall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				Dimi_SetPlayerHealth( i, 100 );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| HEALALL || "SERVERBOJA_AQUA"%s {FFFFFF}je svim igracim napunio helte.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gladsvima( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				SetGlad( i, 0 );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| GLAD || "SERVERBOJA_AQUA"%s {FFFFFF}je svim igracima skinuo glad.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:wcsvima( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				SetToilet( i, 0 );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}|| WC || "SERVERBOJA_AQUA"%s {FFFFFF}je svim igracim skinuo wc.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:freezeall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				TogglePlayerControllable( i, false );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}FREEZEALL: "SERVERBOJA_AQUA"%s {FFFFFF}je zaledio sve igrace.", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:muteall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				PlayerInfo[ i ][ xMute ] = 100;
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}MUTEALL: "SERVERBOJA_AQUA"%s {FFFFFF}je mutirao sve igrace.", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gethereall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new Float:x, Float:y, Float:z;
		GetPlayerPos( playerid, x, y, z );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				new rand = random(10);
				Dimi_SetPlayerPos( i, x+rand, y+rand, z );
				SetPlayerInterior( i, GetPlayerInterior( playerid ) );
				SetPlayerVirtualWorld( i, GetPlayerVirtualWorld( playerid ) );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}GETALL: "SERVERBOJA_AQUA"%s {FFFFFF}je teleportovao sve igrace do sebe.", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unmuteall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				PlayerInfo[ i ][ xMute ] = 0;
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}UNMUTEALL: "SERVERBOJA_AQUA"%s {FFFFFF}je odmutirao sve igrace.", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unfreezeall( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( i != IPI )
			{
				TogglePlayerControllable( i, true );
			}
		}
		format( globalstring, sizeof( globalstring ), "{FF0000}UNFREEZEALL: "SERVERBOJA_AQUA"%s {FFFFFF}je odledio sve igrace.", ImeIgraca( playerid ) );
		SCMA( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:sethp( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, zivot;
		if( sscanf( params, "ui", id, zivot ) ) return SendUsageMessage( playerid, "/sethp [ ID/Ime] [ Helti ]." );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		Dimi_SetPlayerHealth( id, zivot );
		SendInfoMessage( playerid, "Postavili ste igracu %s helte na %d.", ImeIgraca( id ), zivot );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| HEALTH || "SERVERBOJA_AQUA"%s {FFFFFF}je podesio zivot igracu "SERVERBOJA_AQUA"%s {FFFFFF}na "SERVERBOJA_AQUA"%d", ImeIgraca( playerid ), ImeIgraca( id ), zivot );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setglad( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, glad;
		if( sscanf( params, "ui", id, glad ) ) return SendUsageMessage( playerid, "/setglad [ ID/Ime] [ glad ]." );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		SetGlad( id, glad );
		SendInfoMessage( playerid, "Postavili ste igracu %s glad na %d.", ImeIgraca( id ), glad );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| SETGLAD || "SERVERBOJA_AQUA"%s {FFFFFF}je podesio glad igracu "SERVERBOJA_AQUA"%s {FFFFFF}na "SERVERBOJA_AQUA"%d", ImeIgraca( playerid ), ImeIgraca( id ), glad );
		AdminPoruka( -1, globalstring );
		
		
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setwc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, wc;
		if( sscanf( params, "ui", id, wc ) ) return SendUsageMessage( playerid, "/setwc [ ID/Ime] [ wc ]." );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktoru i vlasniku!" );
		SetToilet( id, wc );
		SendInfoMessage( playerid, "Postavili ste igracu %s wc na %d.", ImeIgraca( id ), wc );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| SETWC || "SERVERBOJA_AQUA"%s {FFFFFF}je podesio WC igracu "SERVERBOJA_AQUA"%s {FFFFFF}na "SERVERBOJA_AQUA"%d", ImeIgraca( playerid ), ImeIgraca( id ), wc );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:izbaciclana( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
	
		if( PlayerInfo[ playerid ][ xAdmin ] >= 6  ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new igrac;
		if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/izbaciclana [ ID/Ime ]." );
		if( igrac == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ igrac ][ xClan ] == 0 ) return GRESKA( playerid, "Taj igrac nije u organizaciji." );
		if( PlayerInfo[ igrac ][ xLider ] != 0 ) return GRESKA( playerid, "Taj igrac je lider." );
		new OrgID = PlayerInfo[ igrac ][ xClan ], name[ MAX_PLAYER_NAME ];
		GetPlayerName( igrac, name, sizeof( name ) );
		if( OI[ OrgID ][ oSuspended ] ) return GRESKA( playerid, "Ova organizacija je zakljucana od strane vlasnika." );
		if( strcmp( name, OI[ OrgID ][ oClan1 ], true ) == 0) { strmid( OI[ OrgID ][ oClan1], "Niko", 0, strlen( "Niko" ), ORG_CLAN); }
		else if( strcmp( name, OI[ OrgID ][ oClan2 ], true ) == 0) { strmid( OI[ OrgID ][ oClan2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan3 ], true ) == 0) { strmid( OI[ OrgID ][ oClan3 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan4 ], true ) == 0) { strmid( OI[ OrgID ][ oClan4 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan5 ], true ) == 0) { strmid( OI[ OrgID ][ oClan5 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan6 ], true ) == 0) { strmid( OI[ OrgID ][ oClan6 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan7 ], true ) == 0) { strmid( OI[ OrgID ][ oClan7 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan8 ], true ) == 0) { strmid( OI[ OrgID ][ oClan8 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan9 ], true ) == 0) { strmid( OI[ OrgID ][ oClan9 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan10 ], true ) == 0) { strmid( OI[ OrgID ][ oClan10 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan11 ], true ) == 0) { strmid( OI[ OrgID ][ oClan11 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan12 ], true ) == 0) { strmid( OI[ OrgID ][ oClan12 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan13 ], true ) == 0) { strmid( OI[ OrgID ][ oClan13 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan14 ], true ) == 0) { strmid( OI[ OrgID ][ oClan14 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan15 ], true ) == 0) { strmid( OI[ OrgID ][ oClan15 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan16 ], true ) == 0) { strmid( OI[ OrgID ][ oClan16 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan17 ], true ) == 0) { strmid( OI[ OrgID ][ oClan17 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan18 ], true ) == 0) { strmid( OI[ OrgID ][ oClan18 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan19 ], true ) == 0) { strmid( OI[ OrgID ][ oClan19 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan20 ], true ) == 0) { strmid( OI[ OrgID ][ oClan20 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan21 ], true ) == 0) { strmid( OI[ OrgID ][ oClan21 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan22 ], true ) == 0) { strmid( OI[ OrgID ][ oClan22 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan23 ], true ) == 0) { strmid( OI[ OrgID ][ oClan23 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan24 ], true ) == 0) { strmid( OI[ OrgID ][ oClan24 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan25 ], true ) == 0) { strmid( OI[ OrgID ][ oClan25 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan26 ], true ) == 0) { strmid( OI[ OrgID ][ oClan26 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan27 ], true ) == 0) { strmid( OI[ OrgID ][ oClan27 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan28 ], true ) == 0) { strmid( OI[ OrgID ][ oClan28 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan29 ], true ) == 0) { strmid( OI[ OrgID ][ oClan29 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( name, OI[ OrgID ][ oClan30 ], true ) == 0) { strmid( OI[ OrgID ][ oClan30 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }

		OI[ OrgID ][ oUbacenihClanova ]--;
		ResetAllWeapons( igrac );
		PlayerInfo[ igrac ][ xClan ] = 0; PlayerInfo[ igrac ][ xRank ] = 0; PlayerInfo[ igrac ][ xSpawn ] = SetRandomSpawn( igrac ); SaveOrganization( OrgID );
		PlayerInfo[ igrac ][ xOrgUgovor ] = 0; SavePlayer( igrac ); PlayerInfo[ igrac ][ xSkin ] = SetSexSkin( igrac ); SetPlayerSkin( igrac, SetSexSkin( igrac ) );
		SendClientMessageEx( igrac, CRVENA, "Izbacen si iz organizcaije od Admina %s", ImeIgraca( playerid ) );
		SendClientMessageEx( playerid, CRVENA, "Izbacili ste igraca %s iz organizacije", ImeIgraca( igrac ) );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajrconadmina(playerid, params[]) {
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339  )
	{
		new igrac;
		if( sscanf( params, "ui", igrac )) return SendUsageMessage(playerid, "/dajrconadmina [ ID zeljenog igraca ]");
		if( igrac == IPI ) return GRESKA(playerid,"Taj igrac nije na serveru!");
		//if( broj != 1 || broj != 0 ) return GRESKA(playerid, "")
		if(PlayerInfo[igrac][xRCON] == 1)
		{
			SendInfoMessage(igrac, "Admin %s Vam je skinuo RCON admin poziciju!", ImeIgraca(playerid));
			SendInfoMessage(playerid, "Igracu %s ste ocistili/skinuli RCON admin poziciju!", ImeIgraca(igrac));
			PlayerInfo[igrac][xRCON] = 0;
			RconAdmin[igrac] = false;
			AdminDuty[igrac] = false;
			return 1;
		}
		if(PlayerInfo[igrac][xRCON] == 0)
		{
			SendInfoMessage(igrac, "Admin %s Vam je stavio RCON admin poziciju!", ImeIgraca(playerid));
			SendInfoMessage(playerid, "Igracu %s ste dali RCON admin poziciju!", ImeIgraca(igrac));
			PlayerInfo[igrac][xRCON] = 1;
			RconAdmin[igrac] = true;
			AdminDuty[igrac] = true;
			return 1;
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
CMD:smijeniadmina( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		if( !RconAdmin[ playerid ] ) return GRESKA( playerid, "Morate biti RCON administrator da koristite ovu komandu!" );
		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/smijeniadmina [ Ime_Prezime ]." );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da smijeni ga online.");
			return 1;
		}

		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Admin", 0 );
		INI_WriteInt( File, "Skin", 29 );
		INI_WriteInt( File, "Spawn", 0 );
		INI_Close( File );
		SendClientMessageEx( playerid, CRVENA, "Smijenili ste offline Admina %s", imeigraca );
		new string1[ 128 ]; 
		format( string1, sizeof( string1 ), "Admin %s je smijenio %s sa pozicije Admina", ImeIgraca( playerid ), imeigraca );
		LogSave( "Ostalo/LogSmjeniAdmina.log", string1 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:smijenipromotera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 5 )
	{
		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/smijenipromotera [ Ime_Prezime ]." );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da smijeni ga online.");
			return 1;
		}
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Promoter", 0 );
		INI_WriteInt( File, "Skin", 29 );
		INI_WriteInt( File, "Spawn", 0 );
		INI_Close( File );
		SendClientMessageEx( playerid, CRVENA, "Smijenili ste offline promotera %s", imeigraca );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:smijenigm( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );

		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/smijenigm [ Ime_Prezime ]." );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) ) {
			GRESKA( playerid, "Taj igrac je online tako da smijeni ga online.");
			return 1;
		}
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "RPTeacher", 0 );
		INI_WriteInt( File, "Skin", 29 );
		INI_WriteInt( File, "Spawn", 0 );
		INI_Close( File );
		SendClientMessageEx( playerid, CRVENA, "Smijenili ste offline GM %s", imeigraca );
		new string1[ 128 ]; 
		format( string1, sizeof( string1 ), "Admin %s je smijenio %s sa pozicije gsa", ImeIgraca( playerid ), imeigraca );
		LogSave( "Ostalo/LogSmjeniGS.log", string1 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ubaciclana( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
	
		if( PlayerInfo[ playerid ][ xAdmin ] >= 6  ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new igrac, OrgID;
		if( sscanf( params, "iu", OrgID, igrac ) ) return SendUsageMessage( playerid, "/ubaciclana [ ID orge ] [ ID igraca ]." );
		if( igrac == INVALID_PLAYER_ID ) return GRESKA( playerid, "Igrac nije online ili si ukucao pogresan ID!" );
		if( PlayerInfo[ igrac ][ xClan ] != 0 ) return GRESKA( playerid, "Igrac je vec clan organizacije!" );
		if( PlayerInfo[ igrac ][ xLider ] != 0 ) return GRESKA( playerid, "Igrac je vec clan organizacije!" );
		if( PlayerInfo[ igrac ][ xKazneniUgovor ] != 0 ) return GRESKA( playerid, "Igrac ima kazneni ugovor napustanja organizacije!");
		new ImaFajl[ 40 ];
		format( ImaFajl, sizeof( ImaFajl ), O_FILE, OrgID );
		if( !fexist( ImaFajl ) ) return GRESKA( playerid, "Ta organizacija ne postoji u bazi." );

		if( OI[ OrgID ][ oSuspended ] ) return GRESKA( playerid, "Ova organizacija je zakljucana od strane vlasnika." );
		if( OI[ OrgID ][ oUbacenihClanova ] >= OI[ OrgID ][ oMaxClanova ] ) return GRESKA( playerid, "Ova organizacija vec ima ubacenih maksimalnih %d clanova.", OI[ OrgID ][ oMaxClanova ] );

		if( !strcmp( OI[ OrgID ][ oClan1 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan1 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan2 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan2 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan3 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan3 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan4 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan4 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan5 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan5 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan6 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan6 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan7 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan7 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan8 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan8 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan9 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan9 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan10 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan10 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan11 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan11 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan12 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan12 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan13 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan13 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan14 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan14 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan15 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan15 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan16 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan16 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan17 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan17 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan18 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan18 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan19 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan19 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan20 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan20 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan21 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan21 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan22 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan22 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan23 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan23 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan24 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan24 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan25 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan25 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan26 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan26 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan27 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan27 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan28 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan28 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan29 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan29 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else if( !strcmp( OI[ OrgID ][ oClan30 ], "Niko", true ) ) { strmid( OI[ OrgID ][ oClan30 ], ImeIgraca( igrac ), 0, strlen( ImeIgraca( igrac ) ), ORG_CLAN  ); }
		else return GRESKA( playerid, "Ta orga maksimalna broj clanova!" );

		OI[ OrgID ][ oUbacenihClanova ]++;
		PlayerInfo[ igrac ][ xClan ] = OrgID; PlayerInfo[ igrac ][ xRank ] = 1; PlayerInfo[ igrac ][ xSpawn ] = SPAWN_BAZA;
		if( PlayerInfo[ igrac ][ xPol ] == 1 )
		{
			PlayerInfo[ igrac ][ xSkin ] = OI[ OrgID ][ oSkin1 ]; SetPlayerSkin( igrac, OI[ OrgID ][ oSkin1 ] );
		}
		else if( PlayerInfo[ igrac ][ xPol ] == 2 )
		{
			PlayerInfo[ igrac ][ xSkin ] = OI[ OrgID ][ oZSkin1 ]; SetPlayerSkin( igrac, OI[ OrgID ][ oZSkin1 ] );
		}

		PlayerInfo[ igrac ][ xOrgUgovor ] = 0; SavePlayer( igrac ); SaveOrganization( OrgID );
		SendInfoMessage( igrac, "Cestitamo, ubaceni ste od Admin tima u organizaciju %s.", getOrgName( OrgID ) );
		SendInfoMessage( playerid, "Ubacili ste igraca %s u organizaciju %s", ImeIgraca( igrac ), OI[ OrgID ][ oName ] );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:smijenilidera( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 5 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new imeigraca[ 24 ], ifile[ 64 ], OrgID, oFile[ 40 ];
		if( sscanf( params, "ds[24]", OrgID, imeigraca ) ) return SendUsageMessage( playerid, "/smijenilidera [ ID organizacije ] [ Ime_Prezime ]." );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca ); format( oFile, sizeof( oFile ), O_FILE, OrgID );
		if( !fexist( oFile ) ) return GRESKA( playerid, "Ova organizacija ne postoji." );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da smijeni ga online.");
			return 1;
		}

		if( strcmp( imeigraca, OI[ OrgID ][ oLider1 ], true ) == 0) { strmid( OI[ OrgID ][ oLider1 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oLider2 ], true ) == 0) { strmid( OI[ OrgID ][ oLider2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else return GRESKA( playerid, "Taj lider nije u izabranoj organizaciji!" );

		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Lider", 0 );
		INI_WriteInt( File, "Clan", 0 );
		INI_WriteInt( File, "Rank", 0 );
		INI_WriteInt( File, "Skin", 29 );
		INI_WriteInt( File, "Spawn", 0 );
		INI_Close( File );
		SaveOrganization( OrgID );
		SendClientMessageEx( playerid, CRVENA, "Izbacili ste lidera %s iz organizacije %s", imeigraca, OI[ OrgID ][ oName ] );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:spisakclanova( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 6 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new OrgID, string[ 64 ], oFile[ 40 ];
		if( sscanf( params, "i", OrgID ) ) return SendUsageMessage( playerid, "/spisakclanova [ ID organizacije ]." );
		format( oFile, sizeof( oFile ), O_FILE, OrgID );
		if( !fexist( oFile ) ) return GRESKA( playerid, "Ova organizacija ne postoji." );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
		format( DialogStrgEx, sizeof( DialogStrgEx ), "Lider 1: %s\nLider 2: %s\nClan 1: %s\nClan 2: %s\nClan 3: %s\nClan 4: %s\nClan 5: %s\nClan 6: %s\nClan 7: %s\nClan 8: %s\nClan 9: %s\nClan 10: %s\nClan 11: %s\nClan 12: %s\nClan 13: %s\nClan 14: %s\nClan 15: %s\nClan 16: %s\nClan 17: %s\nClan 18: %s\nClan 19: %s\nClan 20: %s\nClan 21: %s\nClan 22: %s\nClan 23: %s\nClan 24: %s\nClan 25: %s\nClan 26: %s\nClan 27: %s\nClan 28: %s\nClan 29: %s\nClan 30: %s" ,
			OI[ OrgID ][ oLider1 ],
			OI[ OrgID ][ oLider2 ],
			OI[ OrgID ][ oClan1 ],
			OI[ OrgID ][ oClan2 ],
			OI[ OrgID ][ oClan3 ],
			OI[ OrgID ][ oClan4 ],
			OI[ OrgID ][ oClan5 ],
			OI[ OrgID ][ oClan6 ],
			OI[ OrgID ][ oClan7 ],
			OI[ OrgID ][ oClan8 ],
			OI[ OrgID ][ oClan9 ],
			OI[ OrgID ][ oClan10 ],
			OI[ OrgID ][ oClan11 ],
			OI[ OrgID ][ oClan12 ],
			OI[ OrgID ][ oClan13 ],
			OI[ OrgID ][ oClan14 ],
			OI[ OrgID ][ oClan15 ],
			OI[ OrgID ][ oClan16 ],
			OI[ OrgID ][ oClan17 ],
			OI[ OrgID ][ oClan18 ],
			OI[ OrgID ][ oClan19 ],
			OI[ OrgID ][ oClan20 ],
			OI[ OrgID ][ oClan21 ],
			OI[ OrgID ][ oClan22 ],
			OI[ OrgID ][ oClan23 ],
			OI[ OrgID ][ oClan24 ],
			OI[ OrgID ][ oClan25 ],
			OI[ OrgID ][ oClan26 ],
			OI[ OrgID ][ oClan27 ],
			OI[ OrgID ][ oClan28 ],
			OI[ OrgID ][ oClan29 ],
			OI[ OrgID ][ oClan30 ] );
		format( string, sizeof( string ), ""col_white"%s", OI[ OrgID ][ oName ] ) ;
		ShowPlayerDialog( playerid, 0, DSMSG, string, DialogStrgEx, "U redu", "" );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offizbaciclana( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 6 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }
		new imeigraca[ 24 ], ifile[ 64 ], OrgID, oFile[ 40 ];
		if( sscanf( params, "ds[24]", OrgID, imeigraca ) ) return SendUsageMessage( playerid, "/offizbaciclana [ ID organizacije ] [ Ime_Prezime ]." );
		format( ifile, sizeof( ifile ), I_FILE, imeigraca ); format( oFile, sizeof( oFile ), O_FILE, OrgID );
		if( !fexist( oFile ) ) return GRESKA( playerid, "Ova organizacija ne postoji." );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}

		if( strcmp( imeigraca, OI[ OrgID ][ oClan1 ], true ) == 0) { strmid( OI[ OrgID ][ oClan1], "Niko", 0, strlen( "Niko" ), ORG_CLAN); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan2 ], true ) == 0) { strmid( OI[ OrgID ][ oClan2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan3 ], true ) == 0) { strmid( OI[ OrgID ][ oClan3 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan4 ], true ) == 0) { strmid( OI[ OrgID ][ oClan4 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan5 ], true ) == 0) { strmid( OI[ OrgID ][ oClan5 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan6 ], true ) == 0) { strmid( OI[ OrgID ][ oClan6 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan7 ], true ) == 0) { strmid( OI[ OrgID ][ oClan7 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan8 ], true ) == 0) { strmid( OI[ OrgID ][ oClan8 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan9 ], true ) == 0) { strmid( OI[ OrgID ][ oClan9 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan10 ], true ) == 0) { strmid( OI[ OrgID ][ oClan10 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan11 ], true ) == 0) { strmid( OI[ OrgID ][ oClan11 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan12 ], true ) == 0) { strmid( OI[ OrgID ][ oClan12 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan13 ], true ) == 0) { strmid( OI[ OrgID ][ oClan13 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan14 ], true ) == 0) { strmid( OI[ OrgID ][ oClan14 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan15 ], true ) == 0) { strmid( OI[ OrgID ][ oClan15 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan16 ], true ) == 0) { strmid( OI[ OrgID ][ oClan16 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan17 ], true ) == 0) { strmid( OI[ OrgID ][ oClan17 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan18 ], true ) == 0) { strmid( OI[ OrgID ][ oClan18 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan19 ], true ) == 0) { strmid( OI[ OrgID ][ oClan19 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan20 ], true ) == 0) { strmid( OI[ OrgID ][ oClan20 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan21 ], true ) == 0) { strmid( OI[ OrgID ][ oClan21 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan22 ], true ) == 0) { strmid( OI[ OrgID ][ oClan22 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan23 ], true ) == 0) { strmid( OI[ OrgID ][ oClan23 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan24 ], true ) == 0) { strmid( OI[ OrgID ][ oClan24 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan25 ], true ) == 0) { strmid( OI[ OrgID ][ oClan25 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan26 ], true ) == 0) { strmid( OI[ OrgID ][ oClan26 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan27 ], true ) == 0) { strmid( OI[ OrgID ][ oClan27 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan28 ], true ) == 0) { strmid( OI[ OrgID ][ oClan28 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan29 ], true ) == 0) { strmid( OI[ OrgID ][ oClan29 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else if( strcmp( imeigraca, OI[ OrgID ][ oClan30 ], true ) == 0) { strmid( OI[ OrgID ][ oClan30 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
		else return GRESKA( playerid, "Taj igrac nije u izabranoj organizaciji!" );

		OI[ OrgID ][ oUbacenihClanova ]--;
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Clan", 0 );
		INI_WriteInt( File, "Rank", 0 );
		INI_WriteInt( File, "OrgUgovor", 0 );
		INI_WriteInt( File, "Skin", 29 );
		INI_WriteInt( File, "Spawn", 0 );
		INI_Close( File );
		SaveOrganization( OrgID );
		SendClientMessageEx( playerid, CRVENA, "Izbacili ste igraca %s iz organizacije %s", imeigraca, OI[ OrgID ][ oName ] );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:setarmor( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 5 || PlayerInfo[ playerid ][ xHelper ] >= 4)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, zivot;
		if( sscanf( params, "ui", id, zivot ) ) return SendUsageMessage( playerid, "/setarmor [ ID/Ime ] [ Helti ]." );
		if( id == IPI ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete to direktorima i vlasnikima!" );
		Dimi_SetPlayerArmour( id, zivot );
		SendInfoMessage( id, "Admin %s vam je postavio armor na %d.", ImeIgraca( playerid ), zivot );
		SendInfoMessage( playerid, "Postavili ste igracu %s armor na %d.", ImeIgraca( id ), zivot );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| SETARMOR || "SERVERBOJA_AQUA"%s {FFFFFF}je postavio armor igracu "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
forward hidektdd(playerid); public hidektdd(playerid)
{
	hidektd(playerid);
	return 1;
}
CMD:kladjenje(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,10.0,1671.2402,-1353.0724,20163.0254)) return greska(playerid,"Niste u kladionici blizu saltera.");
	if(PlayerInfo[playerid][xLevel] < 20) return greska(playerid,"Samo igraci levelom 20+ - izvinjavamo se!");
	DajIgracuNovac(playerid,-1500);
	SendInfoMessage(playerid,"Kupio si zeton za kolo srece i platio 1500$ novca!");
	new num = random(6);
	switch(num) 
	{
		case 0: {
			new pare = random(10000);
			DajIgracuNovac(playerid,pare);
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio %d$ novaca!",pare);
		}
		case 1: {
			PlayerInfo[ playerid ][ xRespekt ]++;
			SetPlayerScore( playerid, PlayerInfo[ playerid ][ xLevel ] );
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio 1 respekt.");
		}
		case 2: {
			PlayerInfo[ playerid ][ xZlato ] += 5;
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio 5g zlata.");
		}
		case 3: {
			PlayerInfo[ playerid ][ xApoeni ]++;
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio 1 aktivni poen.");
		}
		case 4: {
			PlayerInfo[ playerid ][ xLevel ]++;
			SetPlayerScore( playerid, PlayerInfo[ playerid ][ xLevel ] );
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio levelup.");
		}
		case 5: {
			GiveWeaponToPlayer( playerid, 24, 200 );
			GiveWeaponToPlayer( playerid, 25, 100 );
			GiveWeaponToPlayer( playerid, 29, 400 );
			SendInfoMessage(playerid,"Zavrtio si kolo srece i dobio gun pack!");
		}
	}
	showktd(playerid),SetTimerEx( "hidektdd", 5000, false, "i", playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////
CMD:cc( playerid, params[], help)
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 2 || PlayerInfo[playerid][xPromoter] == 2)
	{
		for( new j; j < 110; j++ )
		{
			SendClientMessageToAll( -1, "" );
		}
		new string[200];
		/*if( PlayerInfo[ playerid ][ xAdmin ] == 1339 ) { format( string, sizeof( string ), ""col_balkanstory"Vlasnik "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 ) { format( string, sizeof( string ), ""col_balkanstory"Direktor "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		else if( PlayerInfo[ playerid ][ xAdmin ] == 6 ) { format( string, sizeof( string ), ""col_balkanstory"Glavni Admin "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 && PlayerInfo[ playerid ][ xAdmin ] <= 5 ) { format( string, sizeof( string ), ""col_balkanstory"Admin "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		else if( PlayerInfo[ playerid ][ xHelper ] >= 1 ) { format( string, sizeof( string ), ""col_balkanstory"GameMaster "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		else if( PlayerInfo[ playerid ][ xPromoter ] == 2 ) { format( string, sizeof( string ), ""col_balkanstory"Vodja marketing tima "col_white"%s "col_balkanstory"je ocistio chat.", ImeIgraca( playerid ) ); }
		SendClientMessageToAll(-1, string);*/
		format(string,sizeof(string), ">> Ocistio administrator:"SERVERBOJA_BJELA" %s", ImeIgraca(playerid));
		SendClientMessageToAll( UGBOJA, "CLEAR CHAT ||: "SERVERBOJA_SIVA"Konverzacija igraca je uspjesno ociscena od strane administracije!");
		SendClientMessageToAll( UGBOJA, string);
		SendClientMessageToAll( UGBOJA, "=== https://discord.gg/XkcSmSxFMe ===");
		SoundForAll( 1056 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return 1;
}
CMD:pcc( playerid, params[], help)
{
	if( PlayerInfo[ playerid ][ xVIPLevel ] == 5 )
	{
		for( new j; j < 110; j++ )
		{
			SendClientMessage(playerid, -1, "" );
		}
		SendInfoMessage(playerid, "Ocistili ste svoj privatni chat!");
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:inv( playerid, params[] )
{
	/*if( PlayerInfo[ playerid ][ xRanac ] == 0 ) return GRESKA( playerid, "Nemate ranac." );
	if( WARPInfo[ playerid ][ WARIgrac ] != -1 ) return GRESKA( playerid, "Ne mozes ovo dok si u waru." );
	if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes ovo dok si na dmu." );
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes ovo dok si u zatvoru." );
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes dok si u vozilu." );
	OpenInventory( playerid );*/
	SendInfoMessage(playerid,"Da otvorite ranac kucajte '/itds' i odaberite"col_sanm" INVENTORY!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiranac( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xRanac ] == 1 ) return GRESKA( playerid, "Vec imate ranac." );
	PlayerInfo[ playerid ][ xRanac ] = 1;// ranac id 3026 371
	DajIgracuNovac(playerid,-1000);
	SendInfoMessage(playerid,"Kupio si ranac za 1000$.");
	//SetPlayerAttachedObject( playerid, OBJECT_SLOT_BACKPACK, 3026, 1, -0.134207, -0.093048, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_BACKPACK, 371, 1, 0.087999, -0.125000, -0.014000, 3.299999, 86.200019, -5.300003, 1.000000, 1.000000, 1.000000 );
	return 1;
}
CMD:invhelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Inventory HELP | "col_white"/inv /ubaciuinv /baciranac" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:baciranac( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xRanac ] == 0 ) return GRESKA( playerid, "Nemate ranac." );
	if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
	
	PlayerInfo[ playerid ][ xRanac ] = 0;
	SavePlayer( playerid );
	
	for( new i = 0; i < MAX_INVENTORY; i ++)
	{
		if( inventoryInfo[ playerid ][ i ][ invExists ] )
		{
			inventoryInfo[ playerid ][ i ][ invExists ] = false;
			inventoryInfo[ playerid ][ i ][ invModel ] = 0;
			inventoryInfo[ playerid ][ i ][ invQuantity ] = 0;
		}
	}
	
	new filename[ 64 ];
	format( filename, sizeof( filename ), INV_FILE, ImeIgraca( playerid ) );
	if( fexist( filename ) ) { fremove( filename ); }
	SendInfoMessage( playerid, "Bacio si ranac, bez mogucnosti povratka istog." );
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_WINTERCAP ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_WINTERCAP );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ubaciuinv( playerid, params[] )
{
	if(PlayerInfo[playerid][xPUBG] == 1) return greska(playerid,"Ne mozete ubacivati stvari u inventory dok ste na PUBG eventu.");
	new broj;
	if( sscanf(params, "d", broj ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/ubaciuinv [ broj predmeta ]");
		SendClientMessagee( playerid, BELA, "[Broj predmeta]: 1. Laptop 2. Dinamit 3. Oruzje 4. Kanticu.");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( broj == 1 )
	{
		if( !LaptopRuke[ playerid ] ) return GRESKA( playerid, "Nemate laptop u rukama." );
		new id;
		id = Inventory_Add( playerid, "Laptop", 19893 );
		if( id != -1 )
		{
			SendInfoMessage( playerid, "Stavio si laptop u inventory." );
			LaptopRuke[ playerid ] = false;
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else if( broj == 2 )
	{
	
		if( !Dinamit[ playerid ] ) return GRESKA( playerid, "Nemate dinamit u rukama." );
		new id;
		id = Inventory_Add( playerid, "Dinamit", 1654 );
		if( id != -1 )
		{
			SendInfoMessage( playerid, "Stavio si dinamit u inventory." );
			Dinamit[ playerid ] = false;
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );

	}
	else if( broj == 3 )
	{
		if( PlayerInfo[ playerid ][ xSpawned ] == 0  ) return 1;
		new Float:H; GetPlayerHealth( playerid, H );
		if( H < 10.0 ) return GRESKA( playerid, "Ne mozete ubaciti oruzje, ako imate manje od 10HP." );
		if( GetFactionType( playerid ) == ORG_TIP_PD || GetFactionType( playerid ) == ORG_TIP_HITM )
		{
			GRESKA( playerid, "MUP/SAJ/HITMAN ne moze ubacivati oruzja!");
			return 1;
		}
		if( WARPInfo[ playerid ][ WARIgrac ] != -1 ) return GRESKA( playerid, "Ne mozes ovo dok si u waru." );
		if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes ovo dok si na dmu." );
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes dok si u vozilu." );
		if( OruzjeUInventoriju[ playerid ] >= 3 ) return GRESKA( playerid, "Mozes imati samo 3 oruzja u inventoriju." );
		if( ForbiddenWeap( playerid ) ) return GRESKA( playerid, "Ne mozes ubaciti zabranjena oruzja u inventory." );

		new gunid = GetWeapon( playerid );

		if( gunid >= 35 && gunid <= 40 )
		{
			GRESKA( playerid, "Ne mozes u inventory ubaciti %s.", WeaponInfos[ gunid ][ wName ] );
			return 1;
		}

		if( gunid < 1 )
		{
			GRESKA( playerid, "Nemas oruzje u ruci koje bi ubacio." );
			return 1;
		}

		new id = Inventory_Add(playerid, WeaponInfos[ gunid ][ wName ], WeaponInfos[ gunid ][ wModel ], GetPlayerAmmo( playerid ) );

		if( id == -1 ) return GRESKA(playerid, "Nemas mesta vise u inventoriju." );
		OruzjeUInventoriju[ playerid ]++;
		format( globalstring, sizeof( globalstring ), "* %s ubacuje %s u inventory.", ImeIgraca( playerid ), WeapNames[ GetWeapon( playerid ) ] );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		RemovePlayerWeapon( playerid, GetWeapon( playerid ) );
		SendInfoMessage( playerid, "Uspjesno ste spremili u inventory %s.", WeaponInfos[ gunid ][ wName ] );
	}
	else if( broj == 4 )
	{
		if( !ImaKanticu[ playerid ] ) return GRESKA( playerid, "Nemate kanticu u rukama." );
		new id;
		id = Inventory_Add( playerid, "Kantica", 1650 );
		if( id != -1 )
		{
			SendInfoMessage( playerid, "Stavio si kanticu u inventory." );
			ImaKanticu[ playerid ] = false;
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else return GRESKA( playerid, "Pogresan broj." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
CMD:dajoruzje( playerid, params[] )
{
	new playa, gun, ammo;
	if( sscanf( params, "uii", playa, gun, ammo ) )
	{
		SendUsageMessage( playerid, "/dajoruzje [ ID/Ime ] [weaponid(eg. 46 = Parachute)] [ammo]");
		SendClientMessagee( playerid, 0xAFAFAFAA, "1(Brass Knuckles) 2(Golf Club) 3(Nite Stick) 4(Knife) 5(Baseball Bat) 6(Shovel) 7(Pool Cue) 10-13(Dildo) 14(Flowers) 15(Cane) 22(Pistol) 23(Silence Pistol)");
		SendClientMessagee( playerid, 0xAFAFAFAA, "24(Desert Eagle) 25(Shot Gun) 29(MP5) 30(AK47) 31(M4) 33(Country Rifle) 34(Sniper Rifle) 41(Spray Can) 42(Fire Extinguisher) 43(Camera) 46(Parachute)");
		return 1;
	}
	if(gun < 1 || gun > 46 )
	{ GRESKA( playerid, "Krivi WeaponID!"); return 1; }
	if( ammo <1 || ammo > 999 )
	{ GRESKA( playerid, "Neidi ispod 1 ili 999 metaka!"); return 1; }
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		if( IsPlayerConnected( playa ) )
		{
			if( playa != INVALID_PLAYER_ID )
			{
				if( PlayerInfo[playa][ xLevel ] < 3)
				{
					SendClientMessagee( playerid, CRVENA, "Igrac nije level 3!!");
					return 1;
				}
				GiveWeaponToPlayer( playa, gun, ammo );
				SendInfoMessage( playa, "Admin %s ti je dao oruzje %s.", ImeIgraca( playerid ), WeaponInfos[ gun ][ wName ] );
				SendInfoMessage( playerid, "Dao si oruzje %s igracu %s.", WeaponInfos[ gun ][ wName ], ImeIgraca( playa ) );
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za KORISTI ove komande!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:promeniadminkod( playerid, params[] )
{
	new igrac, novikod;
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	if( sscanf( params, "ui", igrac, novikod ) ) return SendUsageMessage( playerid, "/promeniadminkod [ ID/Ime ] [ novi kod(Brojevi) ] ");
	if( igrac == IPI ) return GRESKA( playerid, "Pogresan ID" );
	if( novikod == 0 ) return GRESKA( playerid, "Novi kod ne moze biti 0!" );
	PlayerInfo[ igrac ][ xAKod ] = novikod; SavePlayer( igrac );
	SendClientMessageEx( igrac, UGBOJA, "Vas novi kod je "col_white"%d!", novikod );
	SendClientMessageEx( playerid, UGBOJA, "Promenili ste igracu %s kod na "col_white"%d!", ImeIgraca( igrac ), novikod );
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:dajkljuckapije( playerid, params[] )
{

	if( NearestGate( playerid ) == -1 ) return GRESKA( playerid, "Niste blizu nijedne kapije." );

	if( strcmp( ImeIgraca( playerid ), GateData[ NearestGate( playerid ) ][ gateOwner ], true ) == 0 )
	{
		new ID;
		if( sscanf( params, "u", ID ) ) return SendUsageMessage( playerid, "/dajkljuckapije [ ID/Ime ]." );
		strmid( PlayerInfo[ ID ][ xKljucKapije ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME );
		SavePlayer( ID );
		SendInfoMessage( playerid, "Dali ste kljuc kapije %s.", ImeIgraca( ID ) );
		SendInfoMessage( ID, "%s vam je dao kljuc svoje kapije.", ImeIgraca( playerid ) );
	}
	else return GRESKA( playerid, "Ovo nije vasa kapija." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aduty( playerid, params[] )
{
	new a_string[400];
	if(PlayerInfo[playerid][xSkriptaRank] == 1) return greska(playerid,"Ti si skripter - ne mozes ici na duznost sa aduty (/sduty)");
	if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) return GRESKA( playerid, "Ne mozete vi koristiti tu komandu!" );

	if( !AdminDuty[ playerid ] )
	{
		Dimi_SetPlayerHealth( playerid, 100);
		Dimi_SetPlayerArmour( playerid, 99);
		SetPlayerColor( playerid, CRNA );
		PlayerInfo[playerid][xTogn] = 1;
		if( PlayerInfo[ playerid ][ xAdmin ] < 1 && PlayerInfo[ playerid ][ xPol ] == 1 )
		{
			SetPlayerSkin( playerid, 294 );
		}
		SendInfoMessage( playerid, "Sada ste Admin na duznosti." );
		AdminDuty[ playerid ] = true;
		if(PlayerInfo[playerid][xRCON] == 1) {
			RconAdmin[playerid] = true;
			//AdminDuty[playerid] = true;
		}
		adutylabel[playerid] = Create3DTextLabel("Admin na duznosti! (Ne Ometaj!)",SVETLOPLAVA, 30.0,40.0,50.0,40.0,0);
		Attach3DTextLabelToPlayer(adutylabel[playerid], playerid, 0,0,0);
		format( a_string, sizeof( a_string ), ""col_red"ADMIN | DUTY: (({FFFFFF} NEA "col_red"%s {FFFFFF}je na duznosti, kucajte '/report' za pomoc - "col_red"DutyTime: %dh ))", ImeIgraca( playerid ),PlayerInfo[playerid][xDutyTime] );
		SCMA( -1, a_string );
		
		format(a_string, sizeof a_string, "~r~%s~w~je na duznosti kao administrator.", ImeIgraca(playerid));
		for(new i; i < MAX_PLAYERS; i++)
		{
			SendScreenMessage(i, a_string);
		}
	}
	else if( AdminDuty[ playerid ] )
	{
		Dimi_SetPlayerHealth( playerid, 50);
		Dimi_SetPlayerArmour( playerid, 0);
		Delete3DTextLabel(adutylabel[playerid]);
		SetPlayerColor( playerid, 0xFFFFFFFF );
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
		SendInfoMessage( playerid, "Vise niste na duznosti!" );
		AdminDuty[ playerid ] = false;
		if(PlayerInfo[playerid][xRCON] == 1) {
			RconAdmin[playerid] = false;
			//AdminDuty[playerid] = true;
		}
		PlayerInfo[playerid][xTogn] = 0;
		format( a_string, sizeof( a_string ), ""col_red"ADMIN | DUTY: (({FFFFFF} Administrator "col_red"%s {FFFFFF}vise nije na duznosti! "col_red"))", ImeIgraca( playerid ) );
		SCMA( -1, a_string );

	}
		
	return 1;
}
CMD:sduty( playerid, params[] )
{
	new a_string[400];
	if( PlayerInfo[ playerid ][ xSkriptaRank ] != 1 ) return GRESKA( playerid, "Ne mozete vi koristiti tu komandu!" );
	if( PlayerInfo[ playerid ][ xRCON ] != 1 ) return GRESKA( playerid, "Ne mozete vi koristiti tu komandu!" );

	if( !AdminDuty[ playerid ] )
	{
		Dimi_SetPlayerHealth( playerid, 100);
		Dimi_SetPlayerArmour( playerid, 99);
		//SetPlayerColor( playerid, CRNA );
		//SendInfoMessage( playerid, "Sada ste Admin na duznosti." );
		AdminDuty[ playerid ] = true;
		//SetPlayerSkin(playerid,120);
		//PlayerInfo[playerid][xSkin] = 120;
		RconAdmin[ playerid ] = true;
		adutylabel[playerid] = Create3DTextLabel("Admin na duznosti! (Ne Ometaj!)",SVETLOPLAVA, 30.0,40.0,50.0,40.0,0);
		Attach3DTextLabelToPlayer(adutylabel[playerid], playerid, 0,0,0);
		if(PlayerInfo[playerid][xAdmin] < 1339)
		{
			PlayerInfo[playerid][xAdmin] = 1339;
		}
		PlayerInfo[playerid][xTogn] = 1;

		format( a_string, sizeof( a_string ), ""col_yellow"SCRIPTER | DUTY: (({FFFFFF} Skripter "col_yellow"%s {FFFFFF}je sada na duznosti - "col_yellow"DutyTime: %dh ))", ImeIgraca( playerid ) , PlayerInfo[playerid][xDutyTime]);
		SCMA( -1, a_string );
	
		format(a_string, sizeof a_string, "~g~%s~w~je na duznosti kao administrator.", ImeIgraca(playerid));
		for(new i; i < MAX_PLAYERS; i++)
		{
			SendScreenMessage(i, a_string);
		}
	}
	else if( AdminDuty[ playerid ] )
	{
		Dimi_SetPlayerHealth( playerid, 50);
		Dimi_SetPlayerArmour( playerid, 0);
		Delete3DTextLabel(adutylabel[playerid]);
		//SetPlayerColor( playerid, 0xFFFFFFFF );
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
		//SendInfoMessage( playerid, "Vise niste na duznosti!" );
		AdminDuty[ playerid ] = false;
		RconAdmin[ playerid ] = false;
		PlayerInfo[playerid][xTogn] = 0;
		format( a_string, sizeof( a_string ), ""col_yellow"SCRIPTER | DUTY: (({FFFFFF} Skripter / RCON administrator "col_yellow"%s {FFFFFF}vise nije na duznosti! "col_yellow"))", ImeIgraca( playerid ) );
		SCMA( -1, a_string );

	}

	return 1;
}
CMD:sskin(playerid,params[])
{
	if(PlayerInfo[playerid][xSkriptaRank] != 1) return greska(playerid,"Nisi skripter rank - ne mozes ovo!");
	new sid;
	if(sscanf(params,"i",sid)) return SendUsageMessage(playerid,"/sskin [ id ]");

	if( sid < 1 || sid > 2) return greska(playerid,"Skin ne moze ici ispod 1 ili preko 2");

	if( sid == 1 ) { PlayerInfo[playerid][xSkin] = 120; SetPlayerSkin( playerid, 120 ); }
	if( sid == 2 ) { PlayerInfo[playerid][xSkin] = 186; SetPlayerSkin( playerid, 186 ); }

	SendInfoMessage(playerid,"Stavio si sebi skripter skin!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gmduty(playerid, params[])
{
	new g_string[400];
	if( PlayerInfo[ playerid ][ xHelper ] < 1 ) return GRESKA( playerid, "Ne mozete vi koristiti tu komandu!" );
	
	if( !AdminDuty[ playerid ] )
	{
		SetPlayerColor( playerid, 0x00FF40FF );
		Dimi_SetPlayerHealth( playerid, 100 );
		Dimi_SetPlayerArmour( playerid, 99 );
		if( PlayerInfo[ playerid ][ xPol ] == 1 ) SetPlayerSkin( playerid, 217 );
		SendInfoMessage( playerid, "Sada si GameMaster na duznosti." );
		AdminDuty[ playerid ] = true;
		gmdutylabel[playerid] = Create3DTextLabel("GameMaster na duznosti! (Ne Ometaj!)",SVETLOPLAVA, 30.0,40.0,50.0,40.0,0);
		Attach3DTextLabelToPlayer(gmdutylabel[playerid], playerid, 0,0,0);
		format( g_string, sizeof( g_string ), "{FFFFFF}GM | DUTY: (( GMNE "col_balkanstory"%s {FFFFFF}je na duznosti, za pomoc "col_balkanstory"'/pitaj' - DutyTime: %dh {FFFFFF}))", ImeIgraca( playerid ), PlayerInfo[playerid][xDutyTime] );
		SCMA( -1, g_string );
	}
	else if( AdminDuty[ playerid ] )
	{
		SetPlayerColor( playerid, 0xFFFFFFFF );
		Dimi_SetPlayerHealth( playerid, 40);
		Dimi_SetPlayerArmour( playerid, 0);
		Delete3DTextLabel(gmdutylabel[playerid]);
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
		format( globalstring, sizeof( globalstring ), \
		"{FFFFFF}GM | DUTY: (( GMNE "col_balkanstory"%s "col_white"vise nije na duznosti, molimo Vas za strpljenje! {FFFFFF}))",\
		ImeIgraca( playerid ) );
		SCMA( UGBOJA, globalstring );
		
		AdminDuty[ playerid ] = false;
	}

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajdja(playerid,params[])
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu! (Head Admin ili vise)" );
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	
	new id,level;
	if(sscanf(params,"ii",id,level)) return SendUsageMessage(playerid,"/dajdja [ id ] [ level 0-1 ]");

	if( id == IPI ) return greska(playerid,"ID igraca nije validan, igrac nije na serveru!");
	
	if(level == 1)
	{
		if(PlayerInfo[id][xDJ] == 1) return greska(playerid,"Taj igrac je vec DJ");
		PlayerInfo[id][xDJ] = 1;
		SendInfoMessage(id,"Admin %s ti je setao DJ poziciju! Za help /djhelp",ImeIgraca(playerid));
		SendInfoMessage(playerid,"Setao si igracu %s DJ poziciju!",ImeIgraca(id));

		new djset_admin_report[300];
		format(djset_admin_report,sizeof(djset_admin_report),""col_red"[POZICIJA DJ]:{ffffff} Admin %s je setao DJa igracu %s",ImeIgraca(playerid),ImeIgraca(id));
		AdminPoruka(-1,djset_admin_report);
		return 1;
	}
	else if(level == 0)
	{
		if(PlayerInfo[id][xDJ] == 0) return greska(playerid,"Taj igrac nema setanu DJ poziciju da bi mu je skinuo!");
		PlayerInfo[id][xDJ] = 0;
		SendInfoMessage(id,"Admin %s ti je skinuo DJ poziciju!",ImeIgraca(playerid));
		SendInfoMessage(playerid,"Skinuo si igracu %s DJ poziciju!",ImeIgraca(id));

		new djset_admin_report[300];
		format(djset_admin_report,sizeof(djset_admin_report),""col_red"[POZICIJA DJ-OFF]:{ffffff} Admin %s je skinuo DJa igracu %s",ImeIgraca(playerid),ImeIgraca(id));
		AdminPoruka(-1,djset_admin_report);
		return 1;
	}
	if( level != 0 && level != 1 ) return greska(playerid,"Level moze biti samo 0 ili 1 (0 da skines poziciju, 1 da stavis)");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
CMD:ao( playerid, params[], help)
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new aotext[ 128 ], string1[ 234 ];
	if( sscanf( params, "s[128]", aotext ) ) return SendUsageMessage( playerid, "/ao [ Text ]");

	if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Skripter - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Pomocnik skriptera - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 3 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Maper - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 6 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Suvlasnik - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Vlasnik - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Direktor - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Test Admin - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 6 )
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Head Admin - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}
	else
	{
		format( string1, sizeof( string1 ), ""col_crvena"(( {FFFFFF}Admin - %s: "col_white"%s "col_crvena"))", ImeIgraca( playerid ), aotext );
	}

	SCMA( CRVENA, string1 );
	new string[ 128 ]; 
	format( string, sizeof( string ), "Admin %s: %s", ImeIgraca( playerid ), aotext );
	LogSave( "Ostalo/LogOChat.log", string );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gmo( playerid, params[], help)
{
	if( PlayerInfo[ playerid ][ xHelper ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new aotext[ 128 ], string1[ 234 ];
	if( sscanf( params, "s[128]", aotext ) ) return SendUsageMessage( playerid, "/gmo [ Text ]");

	if( PlayerInfo[ playerid ][ xHelper ] == 4 )
	{
		format( string1, sizeof( string1 ), ""col_balkanstory"(( Head GameMaster - %s: {FFFFFF}%s "col_balkanstory"))", ImeIgraca( playerid ), aotext );
	}
	else if( PlayerInfo[ playerid ][ xHelper ] >= 1 && PlayerInfo[ playerid ][ xHelper ] <= 3 )
	{
		format( string1, sizeof( string1 ), ""col_balkanstory"(( GameMaster - %s: {FFFFFF}%s "col_balkanstory"))", ImeIgraca( playerid ), aotext );
	}
	SCMA( HELPER, string1 );
	new string[ 128 ]; 
	format( string, sizeof( string ), "GM %s: %s", ImeIgraca( playerid ), aotext );
	LogSave( "Ostalo/LogGOChat.log", string );
	return 1;
}
CMD:po( playerid, params[], help)
{
	if( PlayerInfo[ playerid ][ xPromoter ] != 2 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new aotext[ 128 ], string1[ 234 ];
	if( sscanf( params, "s[128]", aotext ) ) return SendUsageMessage( playerid, "/po [ Text ]");

	if( PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		format( string1, sizeof( string1 ), ""SERVERBOJA_SC"(( Vodja Promotera - %s: {FFFFFF}%s "SERVERBOJA_SC"))", ImeIgraca( playerid ), aotext );
	}
	SCMA( -1, string1 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mojaplata(playerid, params[])
{
	sms(playerid, "Na Vasem platnom racunu ima $%d dolara!", PlayerInfo[ playerid ][ xPlatniRacun ]);
	return 1;
}
CMD:a( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/a [ tekst ]." );
	if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );

	if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Skripter %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Skripter "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Dizajner %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Dizajner "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 3 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Mapper %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Mapper "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 6 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Suvlasnik %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"SuVlasnik "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	//////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Vlasnik %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Vlasnik "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Direktor %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Direktor "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 6 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Head Admin %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Head Admin "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 1 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Test Admin %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Test Admin "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 2 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Admin 1 %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Admin 1 "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 3 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Admin 2 %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Admin 2 "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 4 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Admin 3 %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Admin 3 "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else if( PlayerInfo[ playerid ][ xAdmin ] == 5 )
	{
		//format( string1, sizeof( string1 ), "A CHAT | Admin 4 %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Admin 4 "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	else
	{
		//format( string1, sizeof( string1 ), "A CHAT | Admin %s: "col_white"%s", ImeIgraca( playerid ), text );
		format(string1,sizeof(string1),""col_crvena"ADMIN | "SERVERBOJA_SIVA"Admin "col_crvena"- %s:{FFFFFF} %s",ImeIgraca(playerid),text);
	}
	//////////////////////////////////////////////////////////////////////////////
	AdminPoruka( CRVENA, string1 );
	new string[ 128 ]; 
	format( string, sizeof( string ), "Admin %s: %s", ImeIgraca( playerid ), text );
	LogSave( "Ostalo/LogAdminChat.log", string );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////

CMD:ga( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/ga [ tekst ]." );
	if( PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
		{
			format( string1, sizeof( string1 ), ""col_yelow"(( GA CHAT | Skripter %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
		{
			format( string1, sizeof( string1 ), ""col_yelow"(( GA CHAT | Dizajner %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 3 )
		{
			format( string1, sizeof( string1 ), ""col_yelow"(( GA CHAT | Mapper %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 6 )
		{
			format( string1, sizeof( string1 ), ""col_yelow"(( GA CHAT | Suvlasnik %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Vlasnik %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Direktor %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1338 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Admin 1338 %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 6 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Head Admin %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 && PlayerInfo[ playerid ][ xAdmin ] <= 5 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Admin %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xHelper ] == 4 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | Head GM %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xHelper ] >= 1 && PlayerInfo[ playerid ][ xHelper ] <= 3 )
		{
			format( string1, sizeof(string1), ""col_yelow"(( GA CHAT | GM %s: "col_white"%s "col_yelow"))", ImeIgraca( playerid ), text );
		}
		RPTChat( HELPER, string1 );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin/HELPER %s: %s", ImeIgraca( playerid ), text );
		LogSave( "Ostalo/LogAGSChat.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/pc [ tekst ]." );
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{

		if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
		{
			format( string1, sizeof( string1 ), "(( PC CHAT | Skripter %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
		{
			format( string1, sizeof( string1 ), "(( PC CHAT | Dizajner %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 3 )
		{
			format( string1, sizeof( string1 ), "(( PC CHAT | Mapper %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 6 )
		{
			format( string1, sizeof( string1 ), "(( PC CHAT | Suvlasnik %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Vlasnik %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1338 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Admin 1338 %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Direktor %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 6 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Head Admin %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 && PlayerInfo[ playerid ][ xAdmin ] <= 5 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Admin %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xPromoter ] == 1 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Promoter %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xPromoter ] == 2 )
		{
			format( string1, sizeof(string1), "(( PC CHAT | Vodja Promotera %s: "col_white"%s "SERVERBOJA_ROZA"))", ImeIgraca( playerid ), text );
		}

		PromoteriAdminChat( LJUBICASTA, string1 );
		
		new string[ 128 ];
		format( string, sizeof( string ), "Admin/Promoter %s: %s", ImeIgraca( playerid ), text );
		LogSave( "Ostalo/LogPROMIADMChat.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:g( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes da koristis ovu komandu dok si u zatvoru." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/g [ tekst ]." );
	if( ToggedG == false ) return GRESKA( playerid, "G chat je trenutno iskljucen od strane Admina." );
	if( PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 ) {

		if( PlayerInfo[ playerid ][ xSkriptaRank ] == 1 )
		{
			format( string1, sizeof( string1 ), "G-CHAT |: (( Skripter %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 2 )
		{
			format( string1, sizeof( string1 ), "G-CHAT |: (( Dizajner %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 3 )
		{
			format( string1, sizeof( string1 ), "G-CHAT |: (( Mapper %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1339 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Vlasnik %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1338 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Admin 1338 %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xSkriptaRank ] == 6 )
		{
			format( string1, sizeof( string1 ), "G-CHAT |: (( Suvlasnik %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 1337 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Direktor %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] == 6 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Head Admin %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 && PlayerInfo[ playerid ][ xAdmin ] <= 5 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Admin %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xHelper ] == 4 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( Head GM %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xHelper ] >= 1 && PlayerInfo[ playerid ][ xHelper ] <= 3 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( GM %s: "col_white"%s "SERVERBOJA_ZELENA"))", ImeIgraca( playerid ), text );
		}
		else if( PlayerInfo[ playerid ][ xVIPLevel ] >= 1 )
		{
			format( string1, sizeof(string1), "G-CHAT |: (( V.I.P. nivo - %d | %s: "col_white"%s "SERVERBOJA_ZELENA"))", PlayerInfo[ playerid ][ xVIPLevel ], ImeIgraca( playerid ), text );
		}
		PROMChat( 0x6ef83cFF, string1 );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
CMD:togn( playerid, params[] )
{
	if(PlayerInfo[playerid][xTogn] == 1) return GRESKA(playerid, "Vec si ukljucio newbie chat ili si staff na duty pa se ukljucio sam!");
	if( PlayerInfo[playerid][xLevel] == 10 || PlayerInfo[playerid][xLevel] < 10 ) {
		SendInfoMessage(playerid, "Ukljucio si svoj newbie chat, iskljucujes ga na '/noff' - mozes ga koristiti sada!");
		PlayerInfo[playerid][xTogn] = 1;
	} else return GRESKA(playerid, "Preveliki si level (lvl 11 ili vise), ne mozes se dopisivati na ovom chatu!");
	return 1;
}
CMD:noff(playerid, params[]) {
	if(AdminDuty[playerid] == true) return GRESKA(playerid, "Ti si staff na duty, moras primati poruke novih igraca!");
	if(PlayerInfo[playerid][xTogn] == 0) return GRESKA(playerid, "Tvoj newbie chat je vec bio iskljucen!");
	PlayerInfo[playerid][xTogn] = 0;
	SendInfoMessage(playerid,  "Newbie chat je sada iskljucen - neces primati poruke u njemu!");
	SendInfoMessage(playerid,  "Newbie chat mozes ukljuciti ponovo! Kucaj '/togn' za to...");
	return 1;
}
CMD:togchat(playerid,params[]) {
	SendUsageMessage(playerid,"Kucajte '/togn' ili '/noff' za manipulisanje newbie chatom!");
	return 1;
}
CMD:n( playerid, params[] )
{
	if( PlayerInfo[playerid][xTogn] == 0) return SendInfoMessage(playerid,  "Vama je iskljucen newbie chat - ukljucite ga prvo za dopisivanje na istom!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/n [ tekst ]." );
	//if( PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xPromoter ] == 2 ) {
	if( PlayerInfo[ playerid ][ xLevel ] < 10 )
	{
		format( string1, sizeof( string1 ), 
			"[ NEWBIE | C ] >> "SERVERBOJA_BJELA"(( Novi igrac - %s: %s ))", ImeIgraca( playerid ), text );
	}
	if( PlayerInfo[ playerid ][ xLevel ] == 10 )
	{
		format( string1, sizeof( string1 ), 
			"[ NEWBIE | C ] >> "SERVERBOJA_BJELA"(( Igrac - %s: %s ))", ImeIgraca( playerid ), text );
	}
	if( PlayerInfo[ playerid ][ xPromoter ] == 1 )
	{
		format( string1, sizeof( string1 ), 
			"[ NEWBIE | C ] >> "SERVERBOJA_BJELA"(( "col_balkanstory"[Promoter]"SERVERBOJA_BJELA" - %s: %s ))", ImeIgraca( playerid ), text );
	}
	if( PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		format( string1, sizeof( string1 ), 
			"[ NEWBIE | C ] >> "SERVERBOJA_BJELA"(( "col_balkanstory"[Staff]"SERVERBOJA_BJELA" - %s: %s ))", ImeIgraca( playerid ), text );
	}
	NChat( tdboja, string1 );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vipovi( playerid, params[] )
{
	new string[ 300 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "{D5D500}-------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)//!AdminDuty[ playerid ]
	{
		if( PlayerInfo[ i ][ xVIPLevel ] >= 1  )
		{
			format( string, sizeof( string ), "{D5D500}VIP {FFFFFF}%d {D5D500}| {FFFFFF}%s {D5D500}|\n", PlayerInfo[ i ][ xVIPLevel ], ImeIgraca( i ));
			strcat( DialogStrgEx, string );
		}
	}
	strcat( DialogStrgEx, "\n{D5D500}-------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, "{D5D500}Online Vipovi", DialogStrgEx, "Uredu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
CMD:djs( playerid, params[] )
{
	new string[ 300 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_yelow"-------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)//!AdminDuty[ playerid ]
	{
		if( PlayerInfo[ i ][ xDJ ] == 1  )
		{
			format( string, sizeof( string ), ""col_yelow"DeeJay | {ffffff}%s\n", ImeIgraca( i ));
			strcat( DialogStrgEx, string );
		}
	}
	strcat( DialogStrgEx, "\n"col_yelow"-------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_yelow"Online DJ-evi", DialogStrgEx, "Uredu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:promoteri( playerid, params[] )
{
	new string[ 300 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "{42A0FF}-------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)//!AdminDuty[ playerid ]
	{

		if( PlayerInfo[ i ][ xPromoter ] >= 1  )
		{
			format( string, sizeof( string ), "{42A0FF}PROMOTER {FFFFFF}%s {42A0FF}| {FFFFFF}%d {42A0FF}| Promoter level: %d\n", ImeIgraca( i ), i, PlayerInfo[i][xPromoter]);
			strcat( DialogStrgEx, string );
		}
	}
	strcat( DialogStrgEx, "\n{42A0FF}-------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, "{42A0FF}Online Promoteri", DialogStrgEx, "Uredu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:lideri( playerid, params[] )
{
	new string[ 300 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"------------------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( PlayerInfo[ i ][ xLider ] >= 1 && !OI[ PlayerInfo[ playerid ][ xLider ] ][ oSuspended ] )
		{
			format( string, sizeof( string ), ""col_balkanstory"Organizacija | {FFFFFF}%s "col_balkanstory"| Lider | {FFFFFF}%s \n", OI[ PlayerInfo[ i ][ xLider ] ][ oPreFix ], ImeIgraca( i ) );
			strcat( DialogStrgEx, string );
		}
		
	}
	strcat( DialogStrgEx, ""col_balkanstory"\n------------------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"Online Lideri", DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:admini( playerid, params[] )
{
	new string[ 300 ],dstring[32];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"-------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)//!AdminDuty[ playerid ]
	{

		if(AdminDuty[ i ]) {dstring = ""col_balkanstory"DA";}
		else if(!AdminDuty[ i ]) {dstring = "{FF0000}NE";}

		if( PlayerInfo[ i ][ xAdmin ] == 2 )
		{
			format( string, sizeof( string ), ""col_balkanstory"A | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring);
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 3 )
		{
			format( string, sizeof( string ), ""col_balkanstory"A | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring);
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 4 )
		{
			format( string, sizeof( string ), ""col_balkanstory"A | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring);
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 5 )
		{
			format( string, sizeof( string ), ""col_balkanstory"A | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring);
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 6 )
		{
			format( string, sizeof( string ), ""col_balkanstory"HEAD ADMIN | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 1337 )
		{
			format( string, sizeof( string ), ""col_balkanstory"DIREKTOR | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 1338 )
		{
			format( string, sizeof( string ), ""col_balkanstory"A-1338 | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 1 )
		{
			format( string, sizeof( string ), ""col_balkanstory"TEST ADMIN | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xAdmin ] == 1339 )
		{
			format( string, sizeof( string ), ""col_balkanstory"VLASNIK | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}
		
	}
	strcat( DialogStrgEx, "\n"col_balkanstory"-------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"Online Admini", DialogStrgEx, "Uredu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gamemasteri( playerid, params[] )
{
	new string[ 300 ],dstring[32];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"-------------------------------------------------------------------------------------\n\n" );
	for(new i; i < MAX_PLAYERS; i++)//!AdminDuty[ playerid ]
	{

		if(AdminDuty[ i ]) {dstring = ""col_balkanstory"DA";}
		else if(!AdminDuty[ i ]) {dstring = "{FF0000}NE";}

		if( PlayerInfo[ i ][ xHelper ] >= 1 && PlayerInfo[ i ][ xHelper ] <= 3 )
		{
			format( string, sizeof( string ), ""col_balkanstory"GM LEVEL %d | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", PlayerInfo[ i ][ xHelper ], ImeIgraca( i ),dstring);
			strcat( DialogStrgEx, string );
		}
		if( PlayerInfo[ i ][ xHelper ] == 4 )
		{
			format( string, sizeof( string ), ""col_balkanstory"HEAD GM | {FFFFFF}%s "col_balkanstory"| Na duznosti: {00FF00}%s\n", ImeIgraca( i ),dstring );
			strcat( DialogStrgEx, string );
		}

	}
	strcat( DialogStrgEx, "\n"col_balkanstory"-------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"Online GameMasteri", DialogStrgEx, "Uredu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:organizacije( playerid, params[] )
{
	/*new organisation_string_length[300];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"------------------------------------------------------------------------------------------------\n\n" );
	for( new i = 1; i < MAX_ORG; i++ )
	{
	
		new oFile[ 40 ];
		format(oFile, sizeof( oFile ), O_FILE, i );
		if( fexist( oFile ) )
		{

			if(OI[ i ][ oCreated ] == 1)
			{
				if( !OI[ i ][ oSuspended ] )
				{
					format( organisation_string_length, sizeof( organisation_string_length ), ""col_balkanstory"Organizacija | ID: {FFFFFF}%d "col_balkanstory"| Ime | {FFFFFF}Naziv: %s \n", OI[ i ][ oID ], OI[ i ][ oName ] );
					strcat( DialogStrgEx, organisation_string_length );
				}
			}
			
		}
	}
	strcat( DialogStrgEx, ""col_balkanstory"\n------------------------------------------------------------------------------------------------" );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"Lista organizacija", DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );*/
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	for( new i = 1; i < MAX_ORG; i++)
	{
		new oFile[40];
		format(oFile, sizeof( oFile ), O_FILE, i);
		if(fexist(oFile))
		{
			if(OI[ i ][ oCreated ] == 1)
			{
				format( globalstring, sizeof( globalstring ), "| ID: %d | Ime organizacije: %s |\n", OI[ i ][ oID ], OI[ i ][ oName ] );
				strcat( DialogStrgEx, globalstring );
			}
		}
	}
	ShowPlayerDialog( playerid, dialog_ORGLIST, DSMSG, D_NASLOV, DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rl( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if(!IsPlayerInAnyVehicle(playerid)) return greska(playerid,"Niste u nekom vozilu na kojem bi mogli resetovati labelu!");
	new vehicleid = GetPlayerVehicleID(playerid);
	
	/*if( IsValidDynamic3DTextLabel(VehicleInfo[ vehicleid ][ v3DText ] ) )
	{
		DestroyDynamic3DTextLabel(VehicleInfo[ vehicleid ][ v3DText ]);
	}*/
	SetVehicleLabels(ScriptIDVozila[ vehicleid ]);
	
	new vehicle_label_refresh[300];
	format( vehicle_label_refresh, sizeof(vehicle_label_refresh), ""col_balkanstory"|| LABELE VOZILA ||:{ffffff} Admin %s je upravo osvjezio labelu na vozilu ID: %d!", ImeIgraca(playerid),vehicleid);
	SCMA(-1,vehicle_label_refresh);
	return 1;
}
CMD:papirivozila(playerid,params[])
{
	///new vehid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return greska(playerid,"Niste u vozilu!");
	//if(VehicleInfo[vehid][vUsage] != PRIVATNO_VOZILO) return greska(playerid,"Ovo vozilo nije privatno ili niste uspjeli pronaci papire!");

	new vehicle_owner_label[300];
	format(vehicle_owner_label,sizeof(vehicle_owner_label),""col_balkanstory"Papiri Vozila >{ffffff} Ovo vozilo je u vlasnistvu igraca/organizacije: %s", VehicleInfo[ ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] ][ vOwner ]);
	SendClientMessage(playerid,-1,vehicle_owner_label);

	return 1;
}
CMD:1(playerid,params[])
{
	return cmd_vc(playerid,params);
}
CMD:vc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new text[ 128 ], string1[180];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/vc [ tekst ]." );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( PlayerInfo[ i ][ xAdmin ] == 1339 )
		{
			format( string1, sizeof( string1 ), "{FF0000}|| VLASNIK || %s: "col_white"%s", ImeIgraca( playerid ), text );
			SendClientMessage( i, 0xFF6347AA, string1 );
		}
	}
	new string[ 128 ]; 
	format( string, sizeof( string ), "Vlasnik %s: %s", ImeIgraca( playerid ), text );
	LogSave( "Ostalo/LogHeadChat.log", string );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
/*
CMD:vremenskiban( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, time, razlog[ 40 ], banfile[ 80 ];
		if( sscanf( params,"uis[40]", id, time, razlog ) ) return SendUsageMessage( playerid, "/vremenskiban [ ID/Ime ] [ Broj dana ] [ Razlog ]");
		if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Pogresan ID!");
		if( PlayerInfo[ playerid ][ xAdmin ] < 1337 && PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozete banovati vlasnike i direktore!");
		format( banfile, sizeof( banfile ), FILE_BAN, ImeIgraca( id ) );
		if( fexist( banfile ) ) return GRESKA( playerid, "Igrac je vec banovan permanentno!");
		if( time > 25 || time < 0 ) return GRESKA( playerid, "Ne mozes preko 25 ili ispod 0 dana.");

		new day, year, month;
		getdate( year, month, day );

		if( day+time > 30 )
		{
			if( month+1 > 12 )
			{
				PlayerInfo[ id ][ xBDays ] = (day+time)-30;
				PlayerInfo[ id ][ xBMonths ] = (month+1)-12;
				PlayerInfo[ id ][ xBYears ] = year+1;
			}
			else if( month+1 <= 12 )
			{
				PlayerInfo[ id ][ xBDays ] = (day+time)-30;
				PlayerInfo[ id ][ xBMonths ] = month+1;
				PlayerInfo[ id ][ xBYears ] = year;
			}
		}
		else if( day+time <= 30 )
		{
			PlayerInfo[ id ][ xBDays ] = day+time;
			PlayerInfo[ id ][ xBMonths ] = month;
			PlayerInfo[ id ][ xBYears ] = year;
		}

		SavePlayer( id );

		format( globalstring, sizeof( globalstring ), "{FF0000}|| V-BAN || "SERVERBOJA_AQUA"%s {FFFFFF}je dobio ban od Admina "SERVERBOJA_AQUA"%s, {FFFFFF}razlog: "SERVERBOJA_AQUA"%s", ImeIgraca( id ), ImeIgraca( playerid ), razlog);
		AdminPoruka( -1, globalstring );

		format( globalstring, sizeof( globalstring ), "{FF0000}|| V-BAN || {FFFFFF}Datum bana: "SERVERBOJA_AQUA"%d / %d / %d", day+time, month, year);
		AdminPoruka( -1, globalstring );

		AI[ playerid ][ aTBan ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]++;

		SendClientMessagee( id, CRVENA, "________________________BAN___________________________________");
		SendClientMessageEx( id, BELA, ""col_white"Dobio si privremeni ban od Admina "col_balkanstory"%s"col_white".", ImeIgraca( playerid ) );
		SendClientMessageEx( id, BELA, ""col_white"Razlog bana "col_balkanstory"%s"col_white".", razlog);
		SendClientMessageEx( id, BELA, ""col_white"Datum unbana: "col_balkanstory"%d.%d.%d"col_white".", day+time, month, year );
		SendClientMessagee( id, BELA, ""col_white"Ukoliko mislis da je ovo greska "col_balkanstory"slikaj "col_white"i postavi na "col_balkanstory"forum.");
		SendClientMessagee( id, BELA, ""col_white"Discord "col_balkanstory"https://discord.gg/XkcSmSxFMe");
		SendClientMessagee( id, CRVENA, "______________________________________________________________");

		Kickovanje( id, ""col_white"Ti si banovan sa servera. Unban zatrazi na discordu: https://discord.gg/XkcSmSxFMe");
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
*/
//////////////////////////////////////////////////////////////////////////////////
CMD:ban( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, razlog[ 40 ];
		if( sscanf( params,"us[40]", id, razlog ) ) return SendUsageMessage( playerid, "/ban [ ID/Ime ] [ Razlog ]");
		if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Pogresan ID!");
		if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ] ) return GRESKA( playerid, "Ne mozes banovati veceg od sebe!");
		
		//format( banfile, sizeof( banfile ), FILE_BAN, ImeIgraca( id ) );
		if( PlayerInfo[id][xBanovan] == 1 ) return GRESKA( playerid, "Igrac je vec banovan!");
		format( globalstring, sizeof( globalstring ), "{FF0000}|| BAN || "SERVERBOJA_AQUA"%s {FFFFFF}je dobio ban od Admina "SERVERBOJA_AQUA"%s, {FFFFFF}razlog: "SERVERBOJA_AQUA"%s", ImeIgraca( id ), ImeIgraca( playerid ), razlog );
		AdminPoruka( -1, globalstring );
		AI[ playerid ][ aTBan ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]++;
		
		new year, month,day;
		getdate( year, month, day );

		PlayerInfo[id][xBDatum][0] = day;
		PlayerInfo[id][xBDatum][1] = month;
		PlayerInfo[id][xBDatum][2] = year;

		new playersip[128];
		//////////////////////////////////////////////////////////////////////////
		GetPlayerIp( id, playersip, sizeof( playersip ) );
		SendClientMessagee(id,-1,""col_yelow"_________________________| BANNED |____________________________");
		SendClientMessagee(id,-1," ");
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Vase ime: {FFFFFF}%s", ImeIgraca( id ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Admin: {FFFFFF}%s", ImeIgraca( playerid ));
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Razlog: {FFFFFF}%s", razlog);
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Datum: {FFFFFF}%d.%d.%d", month, day, year);
		SendClientMessagee(id,-1,globalstring);
		format( globalstring, sizeof( globalstring ), ""SERVERBOJA_AQUA"Vas IP: {FFFFFF}%s", playersip);
		SendClientMessagee(id,-1,globalstring);
		SendClientMessagee(id,-1,""SERVERBOJA_AQUA"Discord: {FFFFFF}https://discord.gg/XkcSmSxFMe");
		SendClientMessagee(id,-1,"Ako mislite da je ovo greska uslikajte ovo (F8) i posaljite na discordu!");
		SendClientMessagee(id,-1,""col_yelow"_______________________________________________________________");

		announcement(id, "~r~BANNED!", 5000, 0);

		strmid( PlayerInfo[ playerid ][ xBReason ], razlog, 0, strlen( razlog ), 41);

		//////////////////////////////////////////////////////////////////////////
		format( globalstring, sizeof( globalstring ), "{FFFFFF}IP Banovanog Igraca: "SERVERBOJA_AQUA"%s !", playersip );
		SendClientMessage( playerid, -1, globalstring );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| ACC-BAN ||{FFFFFF}Igrac "SERVERBOJA_AQUA"%s {FFFFFF}je banovan sa servera. Razlog: "SERVERBOJA_AQUA"%s", ImeIgraca( id ), razlog );
		SCMA( 0xFF4500AA, globalstring );
		/*new File:ban = fopen( banfile, io_write );
		new var[ 64 ];
		format( var, 64, "Admin=%s\n", ImeIgraca( playerid ) );
		fwrite( ban, var );
		new var1[ 128 ];
		format( var1, 128,"Razlog=%s\n", razlog );
		fwrite( ban, var1 );
		fclose( ban );*/
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je banovao igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), razlog );
		LogSave( "Ostalo/LogBan.log", string );

		PlayerInfo[id][xBanovan] = 1;

		SendClientMessagee( id, -1, ""col_white"Ti si banovan sa servera. Unban zatrazi na discordu: https://discord.gg/XkcSmSxFMe" );
		Dimi_Kick( id );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
CMD:unban( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params,"i", id ) ) return SendUsageMessage( playerid, "/unban [id igraca]");
		if(PlayerInfo[id][xBanovan] == 0) return GRESKA( playerid, "Taj igrac nije banovan (Nema ga u bazi)!");
		AI[ playerid ][ aTUnban ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]--;
		format( globalstring, sizeof( globalstring ), "{FF0000}|| UNBAN || "SERVERBOJA_AQUA"%s {FFFFFF}je unbanovao igraca "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), ImeIgraca(id) );
		AdminPoruka( -1, globalstring );
		format( globalstring, sizeof( globalstring ), "Unbanovali ste igraca %s!", ImeIgraca(id));
		SendClientMessagee( playerid, BELA, globalstring );
		new string[ 128 ];
		format( string, sizeof( string ), "Admin %s je unbanovao igraca %s", ImeIgraca( playerid ), ImeIgraca(id) );
		LogSave( "Ostalo/LogUnban.log", string );
		scminfo(id, "Dobili ste unban od %s! Molimo napustite igru i udjite ponovo!", ImeIgraca(playerid));
		PlayerInfo[id][xBanovan] = 0;
		SavePlayer(id);
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
/*CMD:offban( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new imeigraca[ 40 ], razlog[ 40 ], banfile[ 80 ], ifile[ 64 ];
		if( sscanf( params, "s[40]s[40]", imeigraca, razlog ) ) return SendUsageMessage( playerid, "/offban [ Ime_Prezime ] [ Razlog ]" );
		format( banfile, sizeof( banfile ), FILE_BAN, imeigraca );
		if( fexist( banfile ) ) return GRESKA( playerid, "Igrac je vec banovan!");
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da banuj ga online.");
			return 1;
		}
		AI[ playerid ][ aTBan ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]++;
		format( globalstring, sizeof( globalstring ), "{FF0000}|| BAN || "SERVERBOJA_AQUA"%s {FFFFFF}je OFF-Banovao igraca "SERVERBOJA_AQUA"%s, {FFFFFF}razlog: "SERVERBOJA_AQUA"%s.", ImeIgraca( playerid ), imeigraca, razlog );
		AdminPoruka( -1, globalstring );
		new File:ban = fopen( banfile, io_write );
		new var[ 64 ];
		format( var, 64, "Admin=%s\n", ImeIgraca( playerid ) );
		fwrite( ban, var );
		new var1[ 128 ];
		format( var1, 128,"Razlog=%s\n", razlog );
		fwrite( ban, var1 );
		fclose( ban );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je offbanovao igraca %s | Razlog: %s", ImeIgraca( playerid ), imeigraca, razlog );
		LogSave( "Ostalo/LogOffBan.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}*/
/*CMD:vremenskiunban( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params,"s[40]", imeigraca ) ) return SendUsageMessage( playerid, "/vremenskiunban [ Ime_Prezime ]");
		format( ifile, 64, I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		AI[ playerid ][ aTUnban ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BanovanihKorisnika ]--;
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "BanDays", 0 );
		INI_WriteInt( File, "BanMonths", 0 );
		INI_WriteInt( File, "BanYear", 0 );
		INI_Close( File );
		format( globalstring, sizeof( globalstring ), "{FF0000}|| V-UNBAN || "SERVERBOJA_AQUA"%s {FFFFFF}je unbanovao igraca "SERVERBOJA_AQUA"%s {FFFFFF}koji je imao vremenski ban.", ImeIgraca( playerid ), imeigraca );
		AdminPoruka( -1, globalstring );
		format( globalstring, sizeof( globalstring ), "Unbanovali ste igraca %s koji je imao vremenski ban!", imeigraca);
		SendClientMessagee( playerid, BELA, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}*/
//////////////////////////////////////////////////////////////////////////////////
CMD:warn( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, reason[ 48 ];
		if( sscanf( params, "us[48]", id, reason ) ) return SendUsageMessage( playerid, "/warn [ ID/Ime ] [ Razlog ]");
		if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Pogresan ID!");
		if( PlayerInfo[ id ][ xAdmin ] >= PlayerInfo[ playerid ][ xAdmin ]) return GRESKA( playerid, "Ne mozes njemu!");
		PlayerInfo[ id ][ xWarn ] += 1; SavePlayer( id );
		AI[ playerid ][ aTWarn ]++;
		SacuvajAdmina( playerid );
		SendInfoMessage( id, "Admin %s vam je dao warn(%d po redu). Razlog: %s", ImeIgraca( playerid ), PlayerInfo[ id ][ xWarn ], reason );
		SendInfoMessage( playerid, "Dali ste warn igracu %s. Razlog: %s", ImeIgraca( id ), reason );
		format( globalstring, sizeof( globalstring ),"{FF0000}|| WARN || "SERVERBOJA_AQUA"%s {FFFFFF}je dao warn igracu "SERVERBOJA_AQUA"%s {FFFFFF}Razlog: "SERVERBOJA_AQUA"%s", ImeIgraca( playerid ), ImeIgraca( id ), reason );
		AdminPoruka( -1, globalstring );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je dao warn igracu %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), reason );
		LogSave( "Ostalo/LogWarn.log", string );
		ServerInfo[ BrojWarnova ]++;

		if( PlayerInfo[ id ][ xWarn ] >= 5 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| W-BAN || "SERVERBOJA_AQUA"%s {FFFFFF}je dobio ban od Admina "SERVERBOJA_AQUA"%s, {FFFFFF}razlog: "SERVERBOJA_AQUA"5 upozorenja.", ImeIgraca( id ), ImeIgraca( playerid ) );
			AdminPoruka( -1, globalstring );
			new banfile[ 64 ];
			format( banfile, 64, FILE_BAN, ImeIgraca( id ) );
			new File:ban = fopen( banfile, io_write );
			new var[ 64 ];
			format( var, 64, "Admin=%s\n", ImeIgraca( playerid ) );
			fwrite( ban, var );
			new var1[ 128 ];
			format( var1, 128,"Razlog=5/5 Warnova\n" );
			fwrite( ban, var1 );
			fclose( ban );
			ServerInfo[ BanovanihKorisnika ]++;
			Kickovanje( id, ""col_white"Ti si banovan sa servera. Unban zatrazi na DISCORDU: https://discord.gg/XkcSmSxFMe");
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:makniwarn( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1339  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf(params, "u", id ) ) return SendUsageMessage( playerid, "/makniwarn [ ID/Ime ]");
		if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Pogresan ID!" );
		if( PlayerInfo[ id ][ xWarn ] <= 0 ) return GRESKA( playerid, "Igrac nema warnova koje bi skinuli." );
		SendInfoMessage( playerid, "Skinuli ste warn igracu %s | Warn: %d/3!", ImeIgraca( id ), PlayerInfo[ id ][ xWarn ] );
		SendInfoMessage( id, "Admin %s vam je skinuo warn | Warn: %d/3!", ImeIgraca( playerid ), PlayerInfo[ id ][ xWarn ] );
		format( globalstring , sizeof( globalstring ),"{FF0000}|| UNWARN || "SERVERBOJA_AQUA"%s {FFFFFF}je skinuo warn igracu "SERVERBOJA_AQUA"%s!", ImeIgraca( playerid ), ImeIgraca( id ) );
		AdminPoruka( -1, globalstring );
		AI[ playerid ][ aTUnwarn ]++;
		SacuvajAdmina( playerid );
		ServerInfo[ BrojWarnova ]--;
		PlayerInfo[ id ][ xWarn ] -= 1; SavePlayer( id );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rac( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 3 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Morate biti na duznosti!" );
		ShowPlayerDialog( playerid, dialog_RESETIRAJ, DSL, D_NASLOV, "Osobna vozila\nPoslovna vozila\nOrganizacijska vozila\nRent vozila\nPrazna vozila\nCisterne", D_ODABERI, D_ODUSTANI );
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rtcveh( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		new car;
		if( sscanf( params, "d", car ) ) return SendUsageMessage( playerid, "/rtcveh [ car id ]");
		if( car != INVALID_VEHICLE_ID )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| RTC || "SERVERBOJA_AQUA"%s {FFFFFF}je respawnao vozilo id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), car );
			AdminPoruka( -1, globalstring );
			VehicleObjectCheck( car );
			SetVehicleToRespawn( car );
			LinkVehicleToInterior( car, 0 );
			Dimi_RemovePlayerFromVehicle( playerid );
			SendClientMessagee( playerid, ZUTA, "Uspjesno ste vratili vozilo u prvobitni polozaj!");
		}
		else return GRESKA( playerid, "Pogresan id vozila." );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rtc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 2 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1)//ok
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3)
		{
			if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		}
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new car = GetPlayerVehicleID( playerid );
		if( IsPlayerInAnyVehicle(playerid))
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| RTC || "SERVERBOJA_AQUA"%s {FFFFFF}je respawnao vozilo id "SERVERBOJA_AQUA"%d.", ImeIgraca( playerid ), car );
			AdminPoruka( -1, globalstring );
			VehicleObjectCheck( car );
			SetVehicleToRespawn( car );
			LinkVehicleToInterior( car, 0 );
			Dimi_RemovePlayerFromVehicle( playerid );
			SendClientMessagee( playerid, ZUTA, "Uspjesno ste vratili vozilo u prvobitni polozaj!");
		}
		else return GRESKA( playerid, "Morate biti u vozilu. " );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:nick( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/nick [ ID/Ime ]");
		if( id == IPI ) return SendUsageMessage( playerid, "Pogresan ID igraca." );
		SendClientMessagee(id,-1,""col_yelow"_________________________| KICKED |____________________________");
		SendClientMessagee(id,-1," ");
		SendClientMessagee(id,-1,"Izbaceni ste sa servera zbog nepravilnog imena!");
		SendClientMessagee(id,-1,"Vase ime mora biti u formatu Ime_Prezime");
		SendClientMessagee(id,-1,"Forum: USKORO");
		SendClientMessagee(id,-1,"Vas BS Admin team!");
		SendClientMessagee(id,-1,""col_yelow"_______________________________________________________________");
		format( globalstring, sizeof( globalstring ), "{FF0000}|| IME || "SERVERBOJA_AQUA"%s {FFFFFF}je kickovan zbog nepravilnog imena od Admina "SERVERBOJA_AQUA"%s", ImeIgraca( id ), ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
		format( globalstring, sizeof( globalstring ), ""col_white"Kickovani ste! Admin: "col_balkanstory"%s "col_white"Razlog: "col_balkanstory"NON-RP ime", ImeIgraca( playerid ) );
		Kickovanje(id, globalstring );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ukloniradio( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		if( Boombox_Nearest( playerid ) == INVALID_PLAYER_ID ) return GRESKA( playerid, "Niste pored radia." );
		Boombox_Destroy( Boombox_Nearest( playerid ) );
		SendInfoMessage( playerid, "Sklonili ste radio sa zemlje." );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:skloniblokade( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		DeleteClosestRoadblock( playerid );
		SendInfoMessage( playerid, "Sklonili ste blokade policije u vasoj okolini." );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:disarm( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/disarm [ ID/Ime ]");
		if( id != INVALID_PLAYER_ID && PlayerLogged[ id ] != false)
		{
			SendInfoMessage( id, "Admin %s ti je oduzeo oruzje", ImeIgraca( playerid ) );
			SendInfoMessage( playerid, "Oduzeo si oruzje igracu %s", ImeIgraca( id ) );
			ResetAllWeapons( id );
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mute( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 3 || PlayerInfo[ playerid ][ xPromoter ] == 2)
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id, vreme, razlog[ 40 ];
		if( sscanf( params, "uds[40]", id, vreme, razlog ) ) return SendUsageMessage( playerid, "/mute [ ID/Ime ] [vreme - minute] [razlog]");
		if( id != INVALID_PLAYER_ID && PlayerLogged[ id ] != false)
		{
			PlayerInfo[ id ][ xMute ] = vreme*60;
			format( globalstring, sizeof( globalstring ), "{FF0000}|| MUTE || "SERVERBOJA_AQUA"%s {FFFFFF}je usutkan od strane "SERVERBOJA_AQUA"%s", ImeIgraca( id ), ImeIgraca( playerid ) );
			AdminPoruka( -1, globalstring );
			SendInfoMessage( playerid, "Usutkali ste igraca na %s minuta %d!", ImeIgraca( id ), vreme );
			SendInfoMessage( id, "Admin %s vas je usutkao na %d minuta. RAZLOG: %s!", ImeIgraca( playerid ), vreme, razlog );
			new string[ 128 ]; 
			format( string, sizeof( string ), "Admin %s je mute igraca %s | Razlog: %s", ImeIgraca( playerid ), ImeIgraca( id ), razlog );
			LogSave( "Ostalo/LogMute.log", string );
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offmute( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new vreme, razlog[40], imeigraca[ 24 ], ifile[ 64 ];
		if( sscanf( params, "s[24]is[40]", imeigraca, vreme, razlog ) )
		{
			SendUsageMessage( playerid, "/offmute [ Ime_Prezime ] [ vreme(minuti) ] [ razlog ]");
			return 1;
		}
		format( ifile, sizeof( ifile ), I_FILE, imeigraca );
		if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
		if( IsPlayerConnected( GetPlayerIdFromName( imeigraca ) ) )
		{
			GRESKA( playerid, "Taj igrac je online tako da izbaci ga online.");
			return 1;
		}
		if( vreme < 1 ) return GRESKA( playerid, "Vreme za mute ne moze biti manje od 1 minut.");
		new INI:File = INI_Open( ifile );
		INI_SetTag( File, "Informacije" );
		INI_WriteInt( File, "Mute", vreme*60 );
		INI_WriteString( File, "OffPMute", razlog );
		INI_Close( File );
		AI[ playerid ][ aTJail ]++;
		SacuvajAdmina( playerid );
		SendClientMessageEx( playerid, SVETLOCRVENA, "Postavili ste offline igraca %s mute na %d minuta.Razlog: %s", imeigraca, vreme, razlog );
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je offmute igraca %s | Razlog: %s", ImeIgraca( playerid ), imeigraca, razlog );
		LogSave( "Ostalo/LogOffMute.log", string );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unmute( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 4 || PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		//if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/unmute [ ID/Ime ]");
		if( id == IPI ) return GRESKA( playerid, "Pogresan ID korisnika." );
		PlayerInfo[ id ][ xMute ] = 0;
		format( globalstring, sizeof( globalstring ), "{FF0000}|| UNMUTE || "SERVERBOJA_AQUA"%s {FFFFFF}je odsutkan od strane "SERVERBOJA_AQUA"%s", ImeIgraca( id ), ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
		SendInfoMessage( playerid, "Odsutkali ste igraca %s!", ImeIgraca( id ) );
		SendInfoMessage( id, "Admin %s vas je odsutkao!", ImeIgraca( playerid ) );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:posaljinatut( playerid, params[] )
{
	new id ;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/posaljinatut [ ID/Ime ] ");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			  {
				PlayerInfo[ id ][ xRPLearn ] = 1;
				PlayerInfo[ id ][ xMute ] = 100;
				SavePlayer( id );
				TogglePlayerControllable( id, 0 );
				TimerLearn[ id ] = SetTimerEx( "RolePlayTut", 1000, 0, "ii", id, 1);
				SendInfoMessage( playerid, "Poslali ste %s na tutorial.", ImeIgraca( id ) );
				SendClientMessagee( id, ZUTA, "Niste naucili pravila Roleplaya.Primorani ste ih ponovo procitati." );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| TUTORIAL || "SERVERBOJA_AQUA"%s {FFFFFF}salje "SERVERBOJA_AQUA"%s {FFFFFF}na RP tutorial!", ImeIgraca( playerid ), ImeIgraca( id ) );
				AdminPoruka( -1, globalstring );
				new string[ 128 ]; 
				format( string, sizeof( string ), "Admin %s je poslao na tut igraca %s", ImeIgraca( playerid ), ImeIgraca( id ) );
				LogSave( "Ostalo/LogTUTRP.log", string );
			}
		} else GRESKA( playerid, "Taj igrac nije na serveru!" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:toganimchat( playerid, params[] )
{
	if(GetPVarInt(playerid, "ToggedAnim") == 0)
	{
		SetPVarInt(playerid, "ToggedAnim", 1);
		SendClientMessagee( playerid, BELA, "Chat animacije iskljucene !");
	}
	else if(GetPVarInt(playerid, "ToggedAnim") == 1)
	{
		SetPVarInt(playerid, "ToggedAnim", 0);
		SendClientMessagee( playerid, BELA, "Chat animacije ukljucene !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tognews( playerid, params[] )
{
	if( !gNews{ playerid } )
	{
		gNews{ playerid } = 1;
		SendClientMessagee( playerid, 0xBFC0C2FF, "News chat kanal iskljucen!");
	}
	else if( gNews{ playerid } )
	{
		gNews{ playerid } = 0;
		SendClientMessagee( playerid, 0xBFC0C2FF, "News chat kanal ukljucen!");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togg( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( ToggedG == true )
	{
		ToggedG = false;
		SendClientMessagee( playerid, BELA, "G chat je iskljucen !");
		format( globalstring, sizeof( globalstring ), "{FF0000}|| G-CHAT || "SERVERBOJA_AQUA"%s {FFFFFF}je ugasio G Chat.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	else if( ToggedG == false )
	{
		ToggedG = true;
		SendClientMessagee( playerid, BELA, "G chat je ukljucen !");
		format( globalstring, sizeof( globalstring ), "{FF0000}|| G-CHAT || "SERVERBOJA_AQUA"%s {FFFFFF}je upalio G Chat.", ImeIgraca( playerid ) );
		AdminPoruka( -1, globalstring );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togreport( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( GetPVarInt(playerid, "ToggedReport") == 0 )
	{
		SetPVarInt(playerid, "ToggedReport", 1);
		SendClientMessagee( playerid, BELA, "Report/Pitanja iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedReport") == 1)
	{
		SetPVarInt(playerid, "ToggedReport", 0);
		SendClientMessagee( playerid, BELA, "Report/Pitanja ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togpomoc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( GetPVarInt(playerid, "ToggedPomoc") == 0 )
	{
		SetPVarInt(playerid, "ToggedPomoc", 1);
		SendClientMessagee( playerid, BELA, "Pomoc pitanja iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedPomoc") == 1)
	{
		SetPVarInt(playerid, "ToggedPomoc", 0);
		SendClientMessagee( playerid, BELA, "Pomoc pitanja ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:nosms( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( GetPVarInt(playerid, "ToggedPM") == 0 )
	{
		SetPVarInt(playerid, "ToggedPM", 1);
		SendClientMessagee( playerid, BELA, "SMS dostava iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedPM") == 1)
	{
		SetPVarInt(playerid, "ToggedPM", 0);
		SendClientMessagee( playerid, BELA, "SMS dostava ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togw( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( GetPVarInt(playerid, "ToggedWISP") == 0 )
	{
		SetPVarInt(playerid, "ToggedWISP", 1);
		SendClientMessagee( playerid, BELA, "WISPER dostava iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedWISP") == 1)
	{
		SetPVarInt(playerid, "ToggedWISP", 0);
		SendClientMessagee( playerid, BELA, "WISPER dostava ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togphone( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xBrojTelefona ] != 0 )
	{
		if( PhoneOnline[ playerid ] == 0 )
		{
			PhoneOnline[ playerid ] = 1;
			SendClientMessagee( playerid, SIVA, "Iskljucio si mobilni telefon!");
		}
		else if( PhoneOnline[ playerid ] == 1 )
		{
			PhoneOnline[ playerid ] = 0;
			SendClientMessagee( playerid, SIVA, "Ukljucio si mobilni telefon!");
		}
	}
	else
	{
		GRESKA( playerid, "Nemate mobilni telefon!");
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:fchat( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6  )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	
		if( UKLJUCENIFCHAT[ playerid ] )
		{
			UKLJUCENIFCHAT[ playerid ] = false;
			SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava iskljucena !");
		}
		else if( !UKLJUCENIFCHAT[ playerid ] )
		{
			UKLJUCENIFCHAT[ playerid ] = true;
			SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava ukljucena !");
		}
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togfr( playerid, params[] )
{
	if( GetPVarInt(playerid, "ToggedFR") == 0 )
	{
		SetPVarInt(playerid, "ToggedFR", 1);
		SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedFR") == 1)
	{
		SetPVarInt(playerid, "ToggedFR", 0);
		SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:togd( playerid, params[] )
{
	if( GetPVarInt(playerid, "ToggedDC") == 0 )
	{
		SetPVarInt(playerid, "ToggedDC", 1);
		SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava iskljucena !");
	}
	else if(GetPVarInt(playerid, "ToggedDC") == 1)
	{
		SetPVarInt(playerid, "ToggedDC", 0);
		SendClientMessagee( playerid, BELA, "RADIO/F CHAT dostava ukljucena !");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:skinisatuta( playerid, params[] )
{
	new id ;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/skinisatuta [ ID/Ime ] ");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			{
				if( PlayerInfo[ id ][ xRPLearn ] == 0 ) return GRESKA( playerid, "Igrac nije na tutorialu o RPu." );
				PlayerInfo[ id ][ xRPLearn ] = 0;
				PlayerInfo[ id ][ xMute ] = 0;
				Dimi_KillTimer( TimerLearn[ id ] );
				Dimi_KillTimer( TimerPitanje[ id ] );
				SavePlayer( id );
				Dimi_SetSpawnInfo( playerid );
				SpawnPlayer( id );
				SendInfoMessage( playerid, "Skinuli ste %s sa tutoriala.", ImeIgraca( id ) );
				SendClientMessagee( id, ZUTA, "Admin vas je skinuo sa learna." );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| OFF-TUT || "SERVERBOJA_AQUA"%s {FFFFFF}je skinuo "SERVERBOJA_AQUA"%s {FFFFFF}sa RP tutoriala!", ImeIgraca( playerid ), ImeIgraca( id ) );
				AdminPoruka( -1, globalstring );
				new string[ 128 ]; 
				format( string, sizeof( string ), "Admin %s je skinuo sa tuta igraca %s", ImeIgraca( playerid ), ImeIgraca( id ) );
				LogSave( "Ostalo/LogTUTRP.log", string );
			}
		} else GRESKA( playerid, "Taj igrac nije na serveru!" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:spec( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 1)
	{
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/spec [ ID/Ime ]");
		if( id == IPI ) return GRESKA( playerid, "Nepostojeci ID.");
		if( id == playerid ) return GRESKA( playerid, "Nepostojeci ID.");
		
		if( PlayerInfo[ playerid ][ xHelper ] >= 2 )
		{
			if( PlayerInfo[ id ][ xHelper ] == 0 ) return GRESKA( playerid, "Head GameMaster moze specati samo GameMastere!" );
		}
		if( PlayerInfo[ id ][ xAdmin ] >= 1337 && PlayerInfo[playerid][xRCON] == 0) return GRESKA( playerid, "Ne mozes da specas direktore i vlasnike." );
		Spectate[ playerid ] = id;
		new Float:health;
		GetPlayerHealth( Spectate[ playerid ], health );
		
		if( WatchingTV{ playerid } == 0 )
		{
			GetPlayerPos( playerid, SpecPos[ playerid ][ 0 ], SpecPos[ playerid ][ 1 ],  SpecPos[ playerid ][ 2 ] );
			SpecVW[ playerid ] = GetPlayerVirtualWorld( playerid );
			SpecInt[ playerid ] = GetPlayerInterior( playerid );
		}
		SpecTDControl(playerid, true);
		if( PlayerInfo[ playerid ][ xAdmin ] < 6 )
		{
			format( globalstring, sizeof( globalstring ), "{FF0000}|| SPEC || "SERVERBOJA_AQUA"%s [%d] {FFFFFF}speca igraca "SERVERBOJA_AQUA"%s [%d] .", ImeIgraca( playerid ), playerid, ImeIgraca( id ), id );
			AdminPoruka( -1, globalstring );
		}
		SendScreenMessage(playerid, "Ukljucili ste spec mode.");
		WatchingTV{ playerid } = 1;
		new string[ 128 ]; 
		format( string, sizeof( string ), "Admin %s je poceo spec nad igracom %s", ImeIgraca( playerid ), ImeIgraca( id ) );
		LogSave( "Ostalo/LogSPEC.log", string );
	} else return GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return true;
}
CMD:pspec( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] ==2 )
	{
		new id;
		if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/pspec [ ID/Ime ]");
		if( id == IPI ) return GRESKA( playerid, "Nepostojeci ID.");
		if( id == playerid ) return GRESKA( playerid, "Nepostojeci ID.");
		if( PlayerInfo[ id ][ xPromoter ] == 0 ) return GRESKA( playerid, "Vodja promotera moze samo da pregleda ostale promotere!" );
		if( PlayerInfo[ id ][ xAdmin ] >= 1337 ) return GRESKA( playerid, "Ne mozes da specas direktore i vlasnike." );
		Spectate[ playerid ] = id;
		new Float:health;
		GetPlayerHealth( Spectate[ playerid ], health );

		if( WatchingTV{ playerid } == 0 )
		{
			GetPlayerPos( playerid, SpecPos[ playerid ][ 0 ], SpecPos[ playerid ][ 1 ],  SpecPos[ playerid ][ 2 ] );
			SpecVW[ playerid ] = GetPlayerVirtualWorld( playerid );
			SpecInt[ playerid ] = GetPlayerInterior( playerid );
		}
		SpecTDControl(playerid, true);
		SendScreenMessage(playerid, "Ukljucili ste spec mode.");
		WatchingTV{ playerid } = 1;
	} else return GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pspecoff( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2 )
	{
		if( Spectate[ playerid ] != -1 )
		{
			WatchingTV{ playerid } = 0;
			SpecTDControl(playerid, false);
			TogglePlayerSpectating( playerid, 0 );
			TogglePlayerControllable( playerid, true );
			
			PlayerPlaySound( playerid, 1145, 0.0, 0.0, 0.0);
			announcement( playerid, "~w~Spec~n~ ~r~Iskljucen", 3000, 6 );
			SendScreenMessage(Spectate[ playerid ], "Specani ste od strane staff teama.");
			Spectate[ playerid ] = -1;
		}
		else
		{
			GRESKA( playerid, "Nemas spectator ukljucen!" );
		}
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return 1;
}
CMD:specoff( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 2 || PlayerInfo[ playerid ][ xHelper ] >= 1)
	{
		if( Spectate[ playerid ] != -1 )
		{
			WatchingTV{ playerid } = 0;
			SpecTDControl(playerid, false);
			TogglePlayerSpectating( playerid, 0 );
			TogglePlayerControllable( playerid, true );
			
			PlayerPlaySound( playerid, 1145, 0.0, 0.0, 0.0);
			announcement( playerid, "~w~Spec ~r~Iskljucen", 3000, 6 );
			SendScreenMessage(Spectate[ playerid ], "Specani ste od strane staff teama.");
			Spectate[ playerid ] = -1;
		}
		else
		{
			GRESKA( playerid, "Nemas spectator ukljucen!" );
		}
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
// Org System
CMD:lider( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLider ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	if( OI[ PlayerInfo[ playerid ][ xLider ] ][ oSuspended ] ) return GRESKA( playerid, "Organizacija je zakljucana od Admin tima!" );
	ShowPlayerDialog( playerid, dialog_LIDER, DSL, "Lider", "Info organizacije\nUbacivanje clanova\nIzbacivanje clanova ONLINE\nIzbacivanje clanova OFFLINE\nDaj rank\nClanovi\nWar\nOstale informacije\nIzmeni ime rankova", D_ODABERI, D_ODUSTANI );
	return true;
}
CMD:kupidilera(playerid,params[])
{
	if(PlayerInfo[ playerid ][ xLider ] < 1) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if(GetNearestDealer(playerid) == -1) return greska(playerid, "Morate biti pored dilera.");
	if(PlayerInfo[ playerid ][ xNovac ] < 100000) return greska(playerid, "Nemate dovoljno novca (100k $).");
	new dealerid = GetNearestDealer(playerid);
	if(DealerInfo[dealerid][Organizacija] == PlayerInfo[playerid][xLider])
	{
		return greska(playerid, "Ovaj diler vec radi za tvoju organizaciju.");
	}
	DajIgracuNovac(playerid, -100000);
	DealerInfo[dealerid][Organizacija] = PlayerInfo[ playerid ][ xLider ];
	SacuvajDilera(dealerid);
	Dileri3D(dealerid, true);
	SendInfoMessage(playerid, "Kupio si dilera, svaki put kada neko kupi od njega, novac ide u sef organizacije.");
	return 1;
}
CMD:diler(playerid,params[])
{
	if(GetNearestDealer(playerid) == -1) return greska(playerid, "Morate biti pored dilera.");
	KupujeOdDilera[playerid] = GetNearestDealer(playerid);
	ShowPlayerDialog( playerid, dialog_DILER, DSL, D_NASLOV,  "1g kokaina - 90$\n1g marihuane - 20$", D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:orgsef( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	new id = PlayerInfo[ playerid ][ xClan ];
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, OI[ id ][ oSafePos ][ 0 ], OI[ id ][ oSafePos ][ 1 ], OI[ id ][ oSafePos ][ 2 ] ) ) return GRESKA( playerid, "Morate biti pored sefa..");
	ShowPlayerDialog( playerid, dialog_ORGSAFE, DSL, D_NASLOV,  "Stanje u sefu\nOstavi u sef\nIzvadi iz sefa", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gradonacelnik( playerid, params[] )
{
	new item[ 32 ];
	if( PlayerInfo[ playerid ][ xGradRank ] < GRAD_MAYOR ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	if( sscanf(params, "s[32] ", item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/gradonacelnik [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] zaposli, otpusti, radnici");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return true;
	}
	if( strcmp( item, "zaposli",true) == 0)
	{
		new id, tip[ 20 ];
		if( sscanf(params, "s[32]us[20]", item, id, tip ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/gradonacelnik zaposli [ ID/Ime ] [ tip posla ]");
			SendClientMessagee( playerid, BELA, "[Opcije] tjelohranitelj, vozac, sefvozaca, seftjelohranitelja, zamjenikgrad");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return true;
		}
		if( strcmp("tjelohranitelj", tip, true, 13 ) == 0)
		{
			if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe zaposliti!");
			if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
			if( PlayerInfo[ id ][ xGradRank ] >= 1) return GRESKA( playerid, "Taj igrac je vec u sluzbi gradonacelnika!");
			PlayerInfo[ id ][ xGradRank ] = GRAD_BODYGUARD;
			SendInfoMessage( playerid, "Zaposlili ste %s.", ImeIgraca( id ) );
			SendInfoMessage( id, "Gradonacelik %s vas je zaposlio u svoju sluzbu kao tjelohranitelja.", ImeIgraca( playerid ) );
			return true;
		}
		else if( strcmp("vozac", tip, true, 5 ) == 0)
		{
			if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe zaposliti!");
			if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
			if( PlayerInfo[ id ][ xGradRank ] >= 1) return GRESKA( playerid, "Taj igrac je vec u sluzbi gradonacelnika!");
			PlayerInfo[ id ][ xGradRank ] = GRAD_DRIVER;
			SendInfoMessage( playerid, "Zaposlili ste %s.", ImeIgraca( id ) );
			SendInfoMessage( id, "Gradonacelik %s vas je zaposlio u svoju sluzbu kao vozaca.", ImeIgraca( playerid ) );
			return true;
		}
		else if( strcmp("sefvozaca", tip, true, 9 ) == 0)
		{
			if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe zaposliti!");
			if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
			if( PlayerInfo[ id ][ xGradRank ] >= 1) return GRESKA( playerid, "Taj igrac je vec u sluzbi gradonacelnika!");
			PlayerInfo[ id ][ xGradRank ] = GRAD_LDRIVER;
			SendInfoMessage( playerid, "Zaposlili ste %s.", ImeIgraca( id ) );
			SendInfoMessage( id, "Gradonacelik %s vas je zaposlio u svoju sluzbu kao vodju vozaca.", ImeIgraca( playerid ) );
			return true;
		}
		else if( strcmp("seftjelohranitelja", tip, true, 17 ) == 0)
		{
			if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe zaposliti!");
			if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
			if( PlayerInfo[ id ][ xGradRank ] >= 1) return GRESKA( playerid, "Taj igrac je vec u sluzbi gradonacelnika!");
			PlayerInfo[ id ][ xGradRank ] = GRAD_LBODYGUARD;
			SendInfoMessage( playerid, "Zaposlili ste %s.", ImeIgraca( id ) );
			SendInfoMessage( id, "Gradonacelik %s vas je zaposlio u svoju sluzbu kao vodju tjelohranitelja.", ImeIgraca( playerid ) );
			return true;
		}
		else if( strcmp("zamjenikgrad", tip, true, 11 ) == 0)
		{
			if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe zaposliti!");
			if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
			if( PlayerInfo[ id ][ xGradRank ] >= 1) return GRESKA( playerid, "Taj igrac je vec u sluzbi gradonacelnika!");
			PlayerInfo[ id ][ xGradRank ] = GRAD_VMAYOR;
			SendInfoMessage( playerid, "Zaposlili ste %s.", ImeIgraca( id ) );
			SendInfoMessage( id, "Gradonacelik %s vas je zaposlio u svoju sluzbu kao zamjenika gradonacelnika.", ImeIgraca( playerid ) );
			return true;
		}
		return true;
	}
	else if( strcmp( item, "otpusti",true) == 0)
	{
		new id;
		if( sscanf(params, "s[32]u", item, id ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/gradonacelnik otpusti [ ID/Ime ]");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return true;
		}
		if( id == playerid )return GRESKA( playerid, "Ne mozes sam sebe otpustiti!");
		if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
		if( PlayerInfo[ id ][ xGradRank ] < 1 ) return GRESKA( playerid, "Taj igrac je nije u sluzbi gradonacelnika!");
		PlayerInfo[ id ][ xGradRank ] = 0;
		SendInfoMessage( playerid, "Otpustili ste %s.", ImeIgraca( id ) );
		SendInfoMessage( id, "Gradonacelik %s vas je otpustio iz svoje sluzbe.", ImeIgraca( playerid ) );
		return true;
	}
	else if( strcmp( item, "radnici",true) == 0)
	{
		SendClientMessagee( playerid, 0xF5DEB3AA, "|----------------Zaposleni Online----------------|");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerConnected( i ) )
			{
				new string[ 50 ];
				if( PlayerInfo[ i ][ xGradRank ] == GRAD_MAYOR ) format( string, sizeof( string ), "Gradonacelnik - %s", ImeIgraca( i ) );
				else if( PlayerInfo[ i ][ xGradRank ] == GRAD_VMAYOR ) format( string, sizeof( string ), "Zamjenik Grad. - %s", ImeIgraca( i ) );
				else if( PlayerInfo[ i ][ xGradRank ] == GRAD_LBODYGUARD ) format( string, sizeof( string ), "Vodja Tjelohranitelja - %s", ImeIgraca( i ) );
				else if( PlayerInfo[ i ][ xGradRank ] == GRAD_LDRIVER ) format( string, sizeof( string ), "Vodja Vozaca - %s", ImeIgraca( i ) );
				else if( PlayerInfo[ i ][ xGradRank ] == GRAD_DRIVER ) format( string, sizeof( string ), "Vozac - %s", ImeIgraca( i ) );
				else if( PlayerInfo[ i ][ xGradRank ] == GRAD_BODYGUARD ) format( string, sizeof( string ), "Tjelohranitelj - %s", ImeIgraca( i ) );
				if( strlen( string ) > 1 ) SendClientMessagee( playerid, 0xF5DEB3AA, string );
			}
		}
		return true;
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uniformbodyguard( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1271.9607, -814.5180, 1089.9375 ) ) return GRESKA( playerid, "Niste na mjestu uzimanja uniforme!" );
	if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_BODYGUARD || PlayerInfo[ playerid ][ xGradRank ] == GRAD_LBODYGUARD )
	{
		if( !TelohraniteljUniforma[ playerid ] )
		{
			SetPlayerSkin( playerid, 24 );
			TelohraniteljUniforma[ playerid ] = true;
			SendClientMessagee( playerid, ZUTA, "Obukao si uniformu tjelohranitelja(Da vratis svoju garderobu ukucaj isto)!");
		}
		else if( TelohraniteljUniforma[ playerid ] )
		{
			SetPlayerSkin(playerid, PlayerInfo[ playerid ][ xSkin ] );
			TelohraniteljUniforma[ playerid ] = false;
			SendClientMessagee( playerid, ZUTA, "Obukao si svoju garderobu!");
		}
	}
	else GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uniformdriver( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1271.9609, -812.2278, 1089.9375 ) ) return GRESKA( playerid, "Niste na mjestu uzimanja uniforme!" );
	if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_DRIVER || PlayerInfo[ playerid ][ xGradRank ] == GRAD_LDRIVER )
	{
		if( !VozacUniforma[ playerid ] )
		{
			SetPlayerSkin( playerid, 255 );
			VozacUniforma[ playerid ] = true;
			SendClientMessagee( playerid, ZUTA, "Obukao si uniformu vozaca(Da vratis svoju garderobu ukucaj isto)!" );
		}
		else if( VozacUniforma[ playerid ] )
		{
			SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
			VozacUniforma[ playerid ] = false;
			SendClientMessagee( playerid, ZUTA, "Obukao si svoju garderobu!" );
		}
	}
	else GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:workers( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xGradRank ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu! " );
	SendClientMessagee( playerid, 0xF5DEB3AA, "|----------------Zaposleni Online----------------|");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected( i ) )
		{
			new string[ 50 ];
			if( PlayerInfo[ i ][ xGradRank ] == GRAD_MAYOR ) format( string, sizeof( string ), "Gradonacelnik - %s", ImeIgraca( i ) );
			else if( PlayerInfo[ i ][ xGradRank ] == GRAD_VMAYOR ) format( string, sizeof( string ), "Zamjenik Grad. - %s", ImeIgraca( i ) );
			else if( PlayerInfo[ i ][ xGradRank ] == GRAD_LBODYGUARD ) format( string, sizeof( string ), "Vodja Tjelohranitelja - %s", ImeIgraca( i ) );
			else if( PlayerInfo[ i ][ xGradRank ] == GRAD_LDRIVER ) format( string, sizeof( string ), "Vodja Vozaca - %s", ImeIgraca( i ) );
			else if( PlayerInfo[ i ][ xGradRank ] == GRAD_DRIVER ) format( string, sizeof( string ), "Vozac - %s", ImeIgraca( i ) );
			else if( PlayerInfo[ i ][ xGradRank ] == GRAD_BODYGUARD ) format( string, sizeof( string ), "Tjelohranitelj - %s", ImeIgraca( i ) );
			if( strlen( string ) > 1 ) SendClientMessagee( playerid, 0xF5DEB3AA, string );
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mr( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xGradRank ] >= 1 )
	{
		new poruka[64];
		if( sscanf( params, "s[64]", poruka ) ) return SendUsageMessage( playerid, "/mr [ Text ]");
		if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_BODYGUARD ) format( globalstring, sizeof( globalstring ), "** Tjelohranitelj %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_DRIVER ) format( globalstring, sizeof( globalstring ), "** Vozac %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_LDRIVER ) format( globalstring, sizeof( globalstring ), "** Vodja Vozaca %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_LBODYGUARD ) format( globalstring, sizeof( globalstring ), "** Vodja Tjelohranitelja %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_VMAYOR ) format( globalstring, sizeof( globalstring ), "** Zamjenik Grad. %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xGradRank ] ==  GRAD_MAYOR ) format( globalstring, sizeof( globalstring ), "** Gradonacelnik %s: %s, prijem. **", ImeIgraca( playerid ), poruka );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerInfo[ i ][ xGradRank ] >= 1 )
			{
				SendClientMessagee( i, 0x83BFBFFF, globalstring );
			}
		}
	}
	else GRESKA( playerid, "Samo zaposlenici kod gradonacelnika!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:orgizlaz( playerid, params[] )
{

	if(!IsPlayerInRangeOfPoint(playerid,2.0,358.2364,169.1037,1008.3837)) return GRESKA( playerid, "Niste kod saltera u opstini!" );
	if( PlayerInfo[ playerid ][ xLider ] != 0 ) return GRESKA( playerid, "Ne mozes kao lider ovo koristiti!" );
	if( PlayerInfo[ playerid ][ xClan ] != 0 )
	{
	
		if( PlayerInfo[ playerid ][ xOrgUgovor ] < 10 )
		{
		
			PlayerInfo[ playerid ][ xKazneniUgovor ] = 10;
			SendInfoMessage( playerid,  "Prekrsili ste ugovor i dobili ste 10 sati zabrane ulaska u organizacije!");

			new OrgID = PlayerInfo[ playerid ][ xClan ], name[ MAX_PLAYER_NAME ];
			GetPlayerName( playerid, name, sizeof( name ) );

			if( strcmp( name, OI[ OrgID ][ oClan1 ], true ) == 0 ) { strmid( OI[ OrgID ][ oClan1], "Niko", 0, strlen( "Niko" ), ORG_CLAN); }
			if( strcmp( name, OI[ OrgID ][ oClan2 ], true ) == 0) { strmid( OI[ OrgID ][ oClan2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan3 ], true ) == 0) { strmid( OI[ OrgID ][ oClan3 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan4 ], true ) == 0) { strmid( OI[ OrgID ][ oClan4 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan5 ], true ) == 0) { strmid( OI[ OrgID ][ oClan5 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan6 ], true ) == 0) { strmid( OI[ OrgID ][ oClan6 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan7 ], true ) == 0) { strmid( OI[ OrgID ][ oClan7 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan8 ], true ) == 0) { strmid( OI[ OrgID ][ oClan8 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan9 ], true ) == 0) { strmid( OI[ OrgID ][ oClan9 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan10 ], true ) == 0) { strmid( OI[ OrgID ][ oClan10 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan11 ], true ) == 0) { strmid( OI[ OrgID ][ oClan11 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan12 ], true ) == 0) { strmid( OI[ OrgID ][ oClan12 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan13 ], true ) == 0) { strmid( OI[ OrgID ][ oClan13 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan14 ], true ) == 0) { strmid( OI[ OrgID ][ oClan14 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan15 ], true ) == 0) { strmid( OI[ OrgID ][ oClan15 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan16 ], true ) == 0) { strmid( OI[ OrgID ][ oClan16 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan17 ], true ) == 0) { strmid( OI[ OrgID ][ oClan17 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan18 ], true ) == 0) { strmid( OI[ OrgID ][ oClan18 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan19 ], true ) == 0) { strmid( OI[ OrgID ][ oClan19 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan20 ], true ) == 0) { strmid( OI[ OrgID ][ oClan20 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan21 ], true ) == 0) { strmid( OI[ OrgID ][ oClan21 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan22 ], true ) == 0) { strmid( OI[ OrgID ][ oClan22 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan23 ], true ) == 0) { strmid( OI[ OrgID ][ oClan23 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan24 ], true ) == 0) { strmid( OI[ OrgID ][ oClan24 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan25 ], true ) == 0) { strmid( OI[ OrgID ][ oClan25 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan26 ], true ) == 0) { strmid( OI[ OrgID ][ oClan26 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan27 ], true ) == 0) { strmid( OI[ OrgID ][ oClan27 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan28 ], true ) == 0) { strmid( OI[ OrgID ][ oClan28 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan29 ], true ) == 0) { strmid( OI[ OrgID ][ oClan29 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan30 ], true ) == 0) { strmid( OI[ OrgID ][ oClan30 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }

			OI[ OrgID ][ oUbacenihClanova ]--;

			PlayerInfo[ playerid ][ xSkin ] = SetSexSkin( playerid ); SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
			PlayerInfo[ playerid ][ xClan ] = 0;
			PlayerInfo[ playerid ][ xLider ] = 0;
			PlayerInfo[ playerid ][ xOrgUgovor ] = 0;
			PlayerInfo[ playerid ][ xSpawn ] = SetRandomSpawn( playerid );
			ResetAllWeapons( playerid );
			SaveOrganization( OrgID );

			SavePlayer( playerid );
		}
		else if( PlayerInfo[ playerid ][ xOrgUgovor ] >= 10 )
		{
			new OrgID = PlayerInfo[ playerid ][ xClan ], name[ MAX_PLAYER_NAME ];
			GetPlayerName( playerid, name, sizeof( name ) );

			if( strcmp( name, OI[ OrgID ][ oClan1 ], true ) == 0 ) { strmid( OI[ OrgID ][ oClan1], "Niko", 0, strlen( "Niko" ), ORG_CLAN); }
			if( strcmp( name, OI[ OrgID ][ oClan2 ], true ) == 0) { strmid( OI[ OrgID ][ oClan2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan3 ], true ) == 0) { strmid( OI[ OrgID ][ oClan3 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan4 ], true ) == 0) { strmid( OI[ OrgID ][ oClan4 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan5 ], true ) == 0) { strmid( OI[ OrgID ][ oClan5 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan6 ], true ) == 0) { strmid( OI[ OrgID ][ oClan6 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan7 ], true ) == 0) { strmid( OI[ OrgID ][ oClan7 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan8 ], true ) == 0) { strmid( OI[ OrgID ][ oClan8 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan9 ], true ) == 0) { strmid( OI[ OrgID ][ oClan9 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan10 ], true ) == 0) { strmid( OI[ OrgID ][ oClan10 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan11 ], true ) == 0) { strmid( OI[ OrgID ][ oClan11 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan12 ], true ) == 0) { strmid( OI[ OrgID ][ oClan12 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan13 ], true ) == 0) { strmid( OI[ OrgID ][ oClan13 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan14 ], true ) == 0) { strmid( OI[ OrgID ][ oClan14 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan15 ], true ) == 0) { strmid( OI[ OrgID ][ oClan15 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan16 ], true ) == 0) { strmid( OI[ OrgID ][ oClan16 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan17 ], true ) == 0) { strmid( OI[ OrgID ][ oClan17 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan18 ], true ) == 0) { strmid( OI[ OrgID ][ oClan18 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan19 ], true ) == 0) { strmid( OI[ OrgID ][ oClan19 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan20 ], true ) == 0) { strmid( OI[ OrgID ][ oClan20 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan21 ], true ) == 0) { strmid( OI[ OrgID ][ oClan21 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan22 ], true ) == 0) { strmid( OI[ OrgID ][ oClan22 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan23 ], true ) == 0) { strmid( OI[ OrgID ][ oClan23 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan24 ], true ) == 0) { strmid( OI[ OrgID ][ oClan24 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan25 ], true ) == 0) { strmid( OI[ OrgID ][ oClan25 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan26 ], true ) == 0) { strmid( OI[ OrgID ][ oClan26 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan27 ], true ) == 0) { strmid( OI[ OrgID ][ oClan27 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan28 ], true ) == 0) { strmid( OI[ OrgID ][ oClan28 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan29 ], true ) == 0) { strmid( OI[ OrgID ][ oClan29 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }
			if( strcmp( name, OI[ OrgID ][ oClan30 ], true ) == 0) { strmid( OI[ OrgID ][ oClan30 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN ); }

			OI[ OrgID ][ oUbacenihClanova ]--;

			PlayerInfo[ playerid ][ xSkin ] = SetSexSkin( playerid ); SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
			PlayerInfo[ playerid ][ xClan ] = 0;
			PlayerInfo[ playerid ][ xLider ] = 0;
			PlayerInfo[ playerid ][ xSpawn ] = SetRandomSpawn( playerid );
			PlayerInfo[ playerid ][ xOrgUgovor ] = 0;
			SendInfoMessage( playerid, "Uspjesno ste izasli iz organizacije!" );
			ResetAllWeapons( playerid ); SaveOrganization( OrgID );
			SavePlayer( playerid );
		}
	}
	else return GRESKA( playerid, "Doslo je do greske - vi niste clan neke organizacije!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oruzjedozvola( playerid, params[] )
{
	if(IsPlayerInRangeOfPoint( playerid, 3.0, 246.4686,118.5370,1021.4188 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 232.7058,1718.2849,-41.1981 ) )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 10000 ) return GRESKA( playerid, "Morate imati 10.000$ za ovu dozvolu!" );
		if( PlayerInfo[ playerid ][ xGunLicense ] == true ) return GRESKA( playerid, "Vec posjedujete dozvolu za oruzje!" );
		PlayerInfo[ playerid ][ xGunLicense ] = true;
		DajIgracuNovac( playerid, -10000 );
		PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
		SendInfoMessage( playerid, "Dobili ste dozvolu za oruzje i platili 10000$" );
		SavePlayer( playerid );
		new string1[ 128 ];
		format( string1, sizeof( string1 ), "Igrac %s je kupio dozvolu za oruzje", ImeIgraca( playerid ) );
		LogSave( "Ostalo/LogGiveGunLicense.log", string1 );
	}
	else return GRESKA( playerid, "Niste na salteru MUP-a / SAJ-a" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:aviondozvola( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2906.8472,-2060.8962,1002.2381 ) ) return GRESKA( playerid, "Morate biti u auto skoli." );
	if( PlayerInfo[ playerid ][ xNovac ] < 10000 ) return GRESKA( playerid, "Nemate kod sebe 10.000$." );
	if( PlayerInfo[ playerid ][ xLetelica ] > 0 ) return GRESKA( playerid, "Vec imas dozvolu za avion. " );
	PlayerInfo[ playerid ][ xLetelica ] = 1;
	DajIgracuNovac( playerid, -10000 );
	PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
	SendInfoMessage( playerid, "Kupili ste dozvolu za avion za 10.000$." );
	SavePlayer( playerid );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:broddozvola( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2906.8472,-2060.8962,1002.2381 ) ) return GRESKA( playerid, "Morate biti u auto skoli." );
	if( PlayerInfo[ playerid ][ xNovac ] < 10000 ) return GRESKA( playerid, "Nemate kod sebe 10.000$." );
	if( PlayerInfo[ playerid ][ xBrodska ] > 0 ) return GRESKA( playerid, "Vec imas dozvolu za brod. " );
	PlayerInfo[ playerid ][ xBrodska ] = 1;
	DajIgracuNovac( playerid, -10000 );
	PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
	SendInfoMessage( playerid, "Kupili ste dozvolu za avion za 10.000$." );
	SavePlayer( playerid );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:alcotest( playerid, params[ ], help )
{
	new igrac;
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/alcotest [ ID/Ime ]" );
	if( !IsPlayerConnected( igrac ) || igrac == INVALID_PLAYER_ID ) return GRESKA( playerid, "Pogresan ID!" );
	if( igrac == playerid ) return GRESKA( playerid, "Ne mozete sebi dati alcotest!" );
	if( !IsPlayerNearPlayer( 5.0, playerid, igrac ) ) return GRESKA( playerid, "Niste blizu igraca kojem zelite dati alcotest!" );
	new alcohol = GetPlayerDrunkLevel( igrac ),
		Float:promils = alcohol / 1000.0;

	SendClientMessageEx( playerid, BELA, "%s je ispuhao %.2f promila.", ImeIgraca( igrac ), promils );
	SendClientMessageEx( igrac, BELA, "Ispuhali ste %.2f promila.", promils );
	format( globalstring, sizeof( globalstring ), "* Policajac %s daje alcotest gradjanu %s.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
	PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
#if nerp_droga == 1
CMD:narcotest( playerid, params[ ], help )
{
	new igrac;
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "u", igrac ) )
	{
		SendUsageMessage( playerid, "/narcotest [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( igrac == playerid ) return GRESKA( playerid, "Ne mozete sami sebi dati narco test!" );
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				if( PlayerStoned[ igrac ] == true )
				{
					//SetPVarInt( igrac, "NarkoTest", 1 );
					SetPVarInt( playerid, "PlayerHasTest", igrac );
					format( globalstring, sizeof( globalstring ), "Izvrsili ste narkotest nad %s, sacekajte malo da uredjaj ocita status!", ImeIgraca( igrac ) );
					SendClientMessagee( playerid, BELA, globalstring );
					announcement(playerid,"~w~Ocitavanje uzorka...",4000,1);
					SetTimerEx( "StanjeDrogeTimer", 5000, false, "ii", playerid,igrac );
				}
				else
				{
					SetPVarInt( igrac, "NarkoTest", 0 );
					SetPVarInt( playerid, "PlayerHasTest", igrac );
					format( globalstring, sizeof( globalstring ), "Izvrsili ste narkotest nad %s, sacekajte malo da uredjaj ocita status!", ImeIgraca( igrac ) );
					SendClientMessagee( playerid, BELA, globalstring );
					announcement(playerid,"~w~Ocitavanje uzorka...",4000,1);
					SetTimerEx( "StanjeDrogeTimer", 5000, false, "ii", playerid,igrac );

				}
			} else GRESKA( playerid, "Taj igrac nije dovoljno blizu vas.");
		}
	}
	return 1;
}

forward StanjeDrogeTimer(playerid,igrac);
public StanjeDrogeTimer(playerid,igrac)
{
	if( PlayerDrugged[ playerid ] == true )
	{
		SendInfoMessage( playerid, "Uredjaj pokazuje da je %s pozitivan na narkotike!", ImeIgraca( igrac ) );
	}
	else
	{
		SendInfoMessage( playerid, "Uredjaj pokazuje da je %s negativan na narkotike!", ImeIgraca( igrac ) );
	}
	SetPVarInt( playerid, "PlayerHasTest", 999 );
	SetPVarInt( igrac, "NarkoTest", 0 );

	return 1;
}
#endif
//////////////////////////////////////////////////////////////////////////////////
CMD:zatvorenici( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	SendClientMessagee( playerid, BELA, "|_______-=Popis svih zatvorenika=-________|");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected(i))
		{
			if( PlayerInfo[ i ][ xZatvor ] == OBICAN_ZATVOR )
			{
				format( globalstring, sizeof( globalstring ), "%s", ImeIgraca( i ) );
				SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:platikauciju( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xZatvor ] == OBICAN_ZATVOR )
	{
		if( PlayerInfo[ playerid ][ xBailPrice ] > 0 )
		{
			if( PlayerInfo[ playerid ][ xNovac ] >= PlayerInfo[ playerid ][ xBailPrice ] )
			{
				SendClientMessageEx( playerid, SVETLOPLAVA, "Izbavili ste sebe za: $%d", PlayerInfo[ playerid ][ xBailPrice ] );
				DajIgracuNovac( playerid, -PlayerInfo[ playerid ][ xBailPrice ] );
				PlayerInfo[ playerid ][ xBailPrice ] = 0;
				new rand = random( sizeof( RandomCelije ) );
				Dimi_SetPlayerPos( playerid, RandomCelije[ rand ][ 0 ], RandomCelije[ rand ][ 1 ], RandomCelije[ rand ][ 2 ] );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
				SetCameraBehindPlayer( playerid );
				TogglePlayerControllable( playerid, false );
				SetPlayerInterior( playerid, 0 );
				SetPlayerVirtualWorld( playerid, 0 );
				PlayerInfo[ playerid ][ xZatvor ] = 0; PlayerInfo[ playerid ][ xZatvorVreme ] = 0;
				PlayerTextDrawHide(playerid,JailTD[playerid]);
				SendInfoMessage( playerid, "Platili ste za izlazak i sada ste slobodni!" );
				announcement( playerid, "~g~Sloboda~n~~w~Pokusajte biti bolji gradjanin", 5000, 1);
			}
			else GRESKA( playerid, "Nemate dovoljno novca za kauciju !");
		}
		else GRESKA( playerid, "Nemate kauciju !");
	}
	else GRESKA( playerid, "Niste pritvoreni !");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tazer( playerid, params[] )
{
	new weapon, ammo;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA(playerid, "Ne mozete koristiti ovu komandu trenutno.");
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( ImaTazer[ playerid ] == false )
	{
		if( TazerMetkovi[ playerid ] == 0 ) return GRESKA( playerid, "Nemate vise metkova tazera." );
		antiCheatCS[ playerid ][ WeaponDetect ] = 3;
		GetPlayerWeaponData( playerid, 2, weapon, ammo );
		lastweapon[ playerid ][ 0 ] = weapon;
		lastweapon[ playerid ][ 1 ] = ammo;
		GiveWeaponToPlayer( playerid, 23, TazerMetkovi[ playerid ] );
		ImaTazer[ playerid ] = true;
		SendClientMessagee( playerid, BELA, "Izvadio si tazer iz futrole." );
	}
	else if( ImaTazer[ playerid ] == true )
	{
		GetPlayerWeaponData( playerid, 2, weapon, ammo );
		TazerMetkovi[ playerid ] = ammo;
		antiCheatCS[ playerid ][ WeaponDetect ] = 3;
		RemovePlayerWeapon( playerid, 23 );
		GiveWeaponToPlayer( playerid, lastweapon[ playerid ][ 0 ], lastweapon[ playerid ][ 1 ] );
		ImaTazer[ playerid ] = false;
		SendClientMessagee( playerid, BELA, "Vratio si tazer u futrolu." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:zavezi( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new igrac;
	if( BrojLisica[ playerid ] == 0  ) return GRESKA( playerid, "Nemate nijedan par lisica." );
	if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/zavezi [ ID/Ime ]");
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( OI[ PlayerInfo[ igrac ][ xClan ] ][ oTip ] == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes staviti lisice na policajca !");
			if( IsPlayerNearPlayer(5.0, playerid, igrac )  && !IsPlayerInAnyVehicle( playerid ) && !IsPlayerInAnyVehicle( igrac ) )
			{
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sam sebi stavit lisice!");
				if( PlayerCuffed[ igrac ] == 1 )
				{
					SendClientMessageEx( igrac, SVETLOPLAVA, "* Stavio vam je lisice %s.", ImeIgraca( playerid ) );
					SendInfoMessage(igrac,"Mozes kucati '/obijlisice' da si obijes lisce!");
					SendClientMessageEx( playerid, SVETLOPLAVA, "* Stavio si lisice na %s.", ImeIgraca( igrac ) );
					format( globalstring, sizeof( globalstring ), "* %s stavlja lisice na %s, tako da mu nebi pobjegao.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
					PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					announcement( igrac, "~r~Uhapsen", 2500, 3);
					TogglePlayerControllable( igrac, 0 );
					SetPlayerAttachedObject( igrac, OBJECT_SLOT_RHAND, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000 );
					SetPlayerSpecialAction( igrac, SPECIAL_ACTION_CUFFED );
					PlayerCuffed[ igrac ] = 2;
					BrojLisica[ playerid ]--;
					
				}
				else GRESKA( playerid, "Taj igrac nije sokiran !");
			}
			else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	}
	else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:odvezi( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new igrac;
	if( sscanf( params, "u", igrac ) ) return SendUsageMessage( playerid, "/odvezi [ ID/Ime ]");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes skiniti lisice sam sebi!");
				if( PlayerCuffed[ igrac ] == 2 )
				{
					SendClientMessageEx( igrac, SVETLOPLAVA, "* Skinio vam je lisice  %s.", ImeIgraca( playerid ) );
					SendClientMessageEx( playerid, SVETLOPLAVA, "* Skinili ste lisice sa %s.", ImeIgraca( igrac ) );
					announcement( igrac, "~g~Slobodan", 2500, 3);
					TogglePlayerControllable( igrac, 1 );
					ClearAnimations( igrac );
					if( IsPlayerAttachedObjectSlotUsed( igrac, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( igrac, OBJECT_SLOT_RHAND );
					SetPlayerSpecialAction( igrac, SPECIAL_ACTION_NONE );
					PlayerCuffed[ igrac ] = 0;
					if(GetPVarInt( igrac, "CuffTimerCalled") == 1 )
					{
						Dimi_KillTimer( TazerTimer[ playerid ] );
						SetPVarInt( igrac, "CuffTimerCalled", 0 );
					}
				}else GRESKA( playerid, "Taj igrac nije zavezan !");
			}else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	}else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kpu( playerid, params[] )
{
	new igrac, sediste;
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u autu !");
	if( sscanf( params, "ui", igrac, sediste ) ) return SendUsageMessage( playerid, "/kpu [ ID/Ime ] [ ID sedista ]");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( KnockedDown[ igrac ] != true ) return GRESKA( playerid, "Moras prvo da oboris igraca.(/obori)." );
			if( sediste < 1 || sediste > 3 ) return GRESKA( playerid, "ID sedista ne moze biti veci od 3 ili manji od 1.");
			if( OI[ PlayerInfo[ igrac ][ xClan ] ][ oTip ] == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes staviti policajca u auto !");
			if( IsPlayerInAnyVehicle( igrac ) ) return GRESKA( playerid, "Osumnjiceni je u vozilu, izbaci ga iz vozila prvo !");
			if( IsPlayerNearPlayer( 8.0, playerid, igrac ) )
			{
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes ubaciti sam sebe!");
				new carid = GetPlayerVehicleID( playerid );
				new Float:pos[ 6 ];
				GetPlayerPos( playerid, pos[ 0 ], pos[ 1 ], pos[ 2 ] );
				GetPlayerPos( igrac, pos[ 3 ], pos[4], pos[5] );
				GetVehiclePos( carid, pos[ 0 ], pos[ 1 ], pos[ 2 ] );
				if( floatcmp( floatabs( floatsub( pos[ 0 ], pos[ 3 ] ) ), 10.0 ) != -1 &&
				floatcmp( floatabs( floatsub( pos[ 1 ], pos[4] ) ), 10.0 ) != -1 &&
				floatcmp( floatabs( floatsub( pos[ 2 ], pos[5] ) ), 10.0 ) != -1 ) return false;
				SendClientMessageEx( igrac, SVETLOPLAVA, "* Ubacen si u vozilo od strane %s .", ImeIgraca( playerid ) );
				SendClientMessageEx( playerid, SVETLOPLAVA, "* Ubacio si u vozilo %s .", ImeIgraca( igrac ) );
				format( globalstring, sizeof( globalstring ), "* %s ubacuje %s u vozilo.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
				PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
				ClearAnimations( igrac );
				TogglePlayerControllable( igrac, 0 );
				Dimi_PutPlayerInVehicle( igrac, carid, sediste );
			} else GRESKA( playerid, "Predaleko si od osumnjicenog!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pu( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new igrac, sediste;
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u autu !");
	if( sscanf(params, "ui", igrac, sediste ) ) return SendUsageMessage( playerid, "/pu [ ID/Ime ] [ ID sedista ]");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( sediste < 1 || sediste > 3 ) return GRESKA( playerid, "ID sedista ne moze biti veci od 3 ili manji od 1.");
			if( OI[ PlayerInfo[ igrac ][ xClan ] ][ oTip ] == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes staviti policajca u auto !");
			if( IsPlayerInAnyVehicle( igrac ) ) return GRESKA( playerid, "Osumnjiceni je u vozilu, izbaci ga iz vozila prvo !");
			if( IsPlayerNearPlayer( 8.0, playerid, igrac ) )
			{
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes ubaciti sam sebe!");
				if( PlayerCuffed[ igrac ] == 2 )
				{
					new carid = GetPlayerVehicleID( playerid );
					new Float:pos[6];
					GetPlayerPos( playerid, pos[ 0 ], pos[ 1 ], pos[ 2 ] );
					GetPlayerPos( igrac, pos[ 3 ], pos[4], pos[5] );
					GetVehiclePos( carid, pos[ 0 ], pos[ 1 ], pos[ 2 ] );
					if( floatcmp( floatabs( floatsub( pos[ 0 ], pos[ 3 ] ) ), 10.0 ) != -1 &&
					floatcmp( floatabs( floatsub( pos[ 1 ], pos[4] ) ), 10.0 ) != -1 &&
					floatcmp( floatabs( floatsub( pos[ 2 ], pos[5] ) ), 10.0 ) != -1 ) return false;
					SendClientMessageEx( igrac, SVETLOPLAVA, "* Ubacen si u vozilo od strane %s .", ImeIgraca( playerid ) );
					SendClientMessageEx( playerid, SVETLOPLAVA, "* Ubacio si u vozilo %s .", ImeIgraca( igrac ) );
					format( globalstring, sizeof( globalstring ), "* %s ubacuje %s u vozilo.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
					PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					ClearAnimations( igrac );
					TogglePlayerControllable( igrac, 0 );
					Dimi_PutPlayerInVehicle( igrac, carid, sediste );
				} else GRESKA( playerid, "Taj igrac nije uhapsen !");
			} else SendClientMessagee( playerid, CRVENA, "Predaleko si od osumnjicenog!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:m( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( isnull( params ) ) return SendUsageMessage( playerid, "(/m)egaphone [megaphone chat] ");
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");

	if( Maskuse[ playerid ] == false )
		format( globalstring, sizeof( globalstring ), "{0080FF}| Policajac %s:o< %s |", ImeIgraca( playerid ), params );
	else
		format( globalstring, sizeof( globalstring ), "{0080FF}| Policajac Maska_%d:o< %s |", PlayerInfo[ playerid ][ xMaskID ], params );

	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerNearPlayer( 60.0, playerid, i ) )
		{
			SendClientMessagee( i, ZUTA, globalstring );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:wanted( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "|_______-=Popis svih osumnjicenih=-________|\n" );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected( i ) )
		{
			if( PlayerInfo[ i ][ xWanted ] > 0 )
			{
				format( globalstring, sizeof( globalstring ), "- %s | Wanted Level: %d\n", ImeIgraca( i ), PlayerInfo[ i ][ xWanted ] );
				strcat( DialogStrgEx, globalstring );
			}
		}
	}
	ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:su( playerid, params[] )
{
	new id, tekst[ 64 ], wanted;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "uis[64]", id, wanted, tekst ) ) return SendUsageMessage( playerid, "/su [ ID/Ime ] [ Broj Wanteda ] [ Razlog ]");
	if( !IsPlayerConnected( id ) ) return GRESKA( playerid, "Taj igrac je offline!");
	if( id == playerid ) return GRESKA( playerid, "Ne mozete sebi dati wanted level!");
	if( GetFactionType( id ) == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes dati wl policajcu.");
	PostaviWanted( id, tekst, ImeIgraca( playerid ), wanted );
	format( globalstring, sizeof( globalstring ), "{FF0000}|| SUSPECT || "SERVERBOJA_AQUA"%s {FFFFFF}je dao "SERVERBOJA_AQUA"%d {FFFFFF}WL igracu "SERVERBOJA_AQUA"%s {FFFFFF}Razlog: %s", ImeIgraca( playerid ), wanted, ImeIgraca( id ), tekst );
	AdminPoruka( -1, globalstring );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:blokada( playerid, params[] )
{
	new Float:plocx,Float:plocy,Float:plocz,Float:ploca, rb;
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		if( PlayerInfo[ playerid ][ xRank ] >= 3 )
		 {
			if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Niste na duznosti!");
			if( sscanf( params, "i", rb))
			{
				SendUsageMessage( playerid, "/blokada [ID]");
				SendClientMessagee( playerid, -1, "1: Mala | 2: Velika");
				SendClientMessagee( playerid, -1, "3: Cunj | 4: Preusmjerenje");
				SendClientMessagee( playerid, -1, "5: Upozorenje | 6: Blokada.u");
				SendClientMessagee( playerid, -1, "7: Mali siljci | 8: Veliki siljci");
				return 1;
			}
			if(rb == 1)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(1459,plocx,plocy,plocz,ploca);
				announcement( playerid,"~w~Mala blokada ~y~postavljena!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio malu blokadu, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 2)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
				announcement( playerid,"~w~Velika blokada ~y~postavljena!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio veliku blokadu, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 3)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca);
				announcement( playerid,"~w~Cunj ~y~postavljen!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio cunj, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 4)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(1425,plocx,plocy,plocz+0.6,ploca);
				announcement( playerid,"~w~Znak preusmjerenja ~y~postavljen!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio znak preusmjerenja, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 5)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca);
				announcement( playerid,"~w~Znak upozorenja ~y~postavljen!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio znak upozorenja, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 6)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180);
				announcement( playerid,"~w~Blokada usmjeravanja ~y~postavljena!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio blokadu usmeravanja, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 7)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateSpike(2899,plocx,plocy,plocz+0.2,ploca+180);
				announcement( playerid,"~w~Mali siljci ~y~postavljen!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio male siljke, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
			else if(rb == 8)
			{
				PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerPos( playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle( playerid,ploca);
				CreateSpike(2892,plocx,plocy,plocz,ploca+180);
				announcement( playerid,"~w~Veliki siljci ~y~postavljeni!",2000,1);

				for( new id = 1; id < MAX_ORG; id++)
				{
					if( OI[ id ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je postavio velike siljke, prijem...", ImeIgraca( playerid ) );
						OrgPoruka( id, 0x2641FEAA, globalstring );
					}
				}
				return 1;
			}
		} else SendClientMessagee( playerid, BELA, "Nisi Rank 3!");
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oblokadu( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Niste na duznosti!");
	if( PlayerInfo[ playerid ][ xRank ] >= 3 )
	{
		DeleteClosestRoadblock( playerid );
		announcement( playerid, "~w~Blokade ~y~uklonjene!", 2000, 1 );
	}
	else
		GRESKA( playerid, "Nisi Rank 3!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oblokade( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( PlayerInfo[ playerid ][ xRank ] >= 4 )
	{
	
		DeleteAllRoadblocks( playerid );
		for( new id = 1; id < MAX_ORG; id++)
		{
			if( OI[ id ][ oTip ] == ORG_TIP_PD )
			{
				format( globalstring,sizeof( globalstring ),""SERVERBOJA_AQUA"HQ: Officer %s je maknuo sve blokade oko sebe, prijem...", ImeIgraca( playerid ) );
				OrgPoruka( id, 0x2641FEAA, globalstring );
			}
		}
		announcement( playerid, "~w~Blokade ~y~uklonjene!", 2000, 1 );
	} else return GRESKA( playerid, "Morate biti rank 4+." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:bk( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( GetPVarInt( playerid, "RequestingBackup" ) != 1 )
	{
		format( globalstring, sizeof( globalstring ), "SVE JEDINICE: %s trazi pojacanje i oznacen je na GPSu (crveno).", ImeIgraca( playerid ) );
		SetPVarInt( playerid, "RequestingBackup", 1);
		new Float:Pos[ 3 ];
		GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );

		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerConnected( i ) )
			{
				if( OI[ PlayerInfo[ i ][ xClan ] ][ oTip ] == ORG_TIP_PD )
				{
					Dimi_SetPlayerCheckpoint( i, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ], 5.0 );
					CheckpointStatus[ i ] = 15;
					SendClientMessagee( i, 0x8D8DFF00, globalstring );
				}
			}
		}
		SendClientMessagee( playerid, 0x8D8DFF00, "Ukucajte /bkc da bi ste izbrisali pojacanje." );
		backuptimer[ playerid ] = SetTimerEx( "BackupClear", 180000, false, "ii", playerid, 1 );
	} else SendClientMessagee( playerid, CRVENA, "Vec imate aktivan zahtev za pojacanje!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:bkc( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	BackupClear( playerid, 0 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:govrepair( playerid, params[] )
{
	new vehicleid = GetPlayerVehicleID( playerid );
	if( GetPVarInt( playerid, "Kladjenje") == 1) return GRESKA( playerid, "Ne mozete spamati sa ovom komandom! Iskoristavanje komande = ban!");
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!" );
	if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
	{
		if( IsPlayerInRangeOfPoint( playerid, 5.0, 1585.6813, -1676.1810, 5.8968 ) || IsPlayerInRangeOfPoint( playerid, 5.0, 2795.0320, -1615.6310, 10.9219 ) || IsPlayerInRangeOfPoint( playerid, 5.0, 656.7003, -1339.4277, 13.5459 ) )
		{
			Dimi_RepairVehicle( playerid, vehicleid );
			Dimi_SetVehicleHealth( vehicleid, 1000.0 );
			antiCheatCS[ playerid ][ VehRepairTime ] = 3;
			Fuel[ vehicleid ] = 100;
			FuelTime[ vehicleid ] = 0;
			SendClientMessagee( playerid, SVETLOPLAVA, "Vase vozilo je popravljeno i napunjeno gorivom.");
			SetPVarInt( playerid, "Kladjenje", 1);
			SetTimerEx("KSpam", 30000, 0, "d", playerid);
			
		} else GRESKA( playerid, "Niste na mjestu za popravak vozila!" );
	} else GRESKA( playerid, "Da bi koristili ovu komandu morate biti u vozilu policije." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:undercover( playerid, params[] )
{
	new id = PlayerInfo[ playerid ][ xClan ];
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !IsPlayerInRangeOfPoint( playerid, 2.0, OI[ id ][ oDutyPoint ][ 0 ], OI[ id ][ oDutyPoint ][ 1 ], OI[ id ][ oDutyPoint ][ 2 ] ) ) return GRESKA( playerid, "Morate biti na pickupu za koriscenje ove komande.");
	if( PlayerInfo[ playerid ][ xRank ] < 3 ) return GRESKA( playerid, "Morate biti rank 3+." );
	new opcija[12],item;
	if( sscanf( params, "s[12]i", opcija, item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/undercover skin [skin id(1-6)]");
		SendClientMessagee( playerid, BELA, "ILI /undercover oruzje [weapon set(1-3)]");
		SendClientMessagee( playerid, BELA, "SET 1: Silence Gun, Spraycan, Parachute");
		SendClientMessagee( playerid, BELA, "SET 2: Desert Deagle, MP5, Country Rifle");
		SendClientMessagee( playerid, BELA, "SET 3: Silence Gun, Sniper Rifle, Parachute, Knife");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( opcija, "skin", true ) == 0 )
	{
		if( item == 1 )
		{
			SetPlayerSkin( playerid, 21 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
		if( item == 2 )
		{
			SetPlayerSkin( playerid, 211 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
		if( item == 3 )
		{
			SetPlayerSkin( playerid, 101 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
		if( item == 4 )
		{
			SetPlayerSkin( playerid, 183 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
		if( item == 5 )
		{
			SetPlayerSkin( playerid, 185 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
		if( item == 6 )
		{
			SetPlayerSkin( playerid, 217 );
			SendClientMessagee( playerid, SVETLOPLAVA, "* Presvukli ste se i sada vas nitko nece moci prepoznati.");
			format( globalstring, sizeof( globalstring ), "* %s skida svoju uniformu i presvlaci se.", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		}
	}
	else if( strcmp( opcija, "oruzje", true ) == 0 )
	{
		if( item == 1)
		{
			GiveWeaponToPlayer( playerid, 23,100 );
			GiveWeaponToPlayer( playerid, 41,500 );
			GiveWeaponToPlayer( playerid, 46,1 );
		}
		if( item == 2)
		{
			GiveWeaponToPlayer( playerid, 24,100 );
			GiveWeaponToPlayer( playerid, 29,200 );
			GiveWeaponToPlayer( playerid, 33,50 );
		}
		if( item == 3 )
		{
			GiveWeaponToPlayer( playerid, 23, 100 );
			GiveWeaponToPlayer( playerid, 34, 100 );
			GiveWeaponToPlayer( playerid, 46, 1 );
			GiveWeaponToPlayer( playerid, 4, 1 );
		}
	}
	SetPVarInt( playerid, "OfficerUndercover", 1);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ram( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	for( new i = 1; i < MAX_IMOVINA; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 2.0, II[ i ][ iEnter ][ 0 ], II[ i ][ iEnter ][ 1 ], II[ i ][ iEnter ][ 2 ] ) )
		{
			Dimi_SetPlayerPos( playerid, II[ i ][ iExit ][ 0 ], II[ i ][ iExit ][ 1 ], II[ i ][ iExit ][ 2 ] );
			ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
			SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
			SetCameraBehindPlayer( playerid );
			TogglePlayerControllable( playerid, false );
			SetPlayerInterior( playerid, II[ i ][ iInterior ] );
			SetPlayerVirtualWorld( playerid, II[ i ][ iVW ] );
			inProperty[ playerid ] = i;
		}
	}
	for( new i= 1; i < MAX_ORG; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 2.0, OI[ i ][ oPozExtX ], OI[ i ][ oPozExtY ], OI[ i ][ oPozExtZ ] ) )
		{
			Dimi_SetPlayerPos( playerid, OI[ i ][ oPozIntX ], OI[ i ][ oPozIntY ], OI[ i ][ oPozIntZ ] );
			ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
			SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
			SetCameraBehindPlayer( playerid );
			TogglePlayerControllable( playerid, false );
			SetPlayerInterior( playerid, OI[ i ][ oInt ] );
			SetPlayerVirtualWorld( playerid, OI[ i ][ oVw ] );
			inOrgInt[ playerid ] = i;
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oduzmi( playerid, params[])
{
	new opcija[20], igrac;
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
		if( sscanf( params, "s[20]u", opcija, igrac ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "|________________________________________________________|");
			SendUsageMessage( playerid, "/oduzmi [ opcija ] [ ID/Ime ]");
			SendClientMessagee( playerid, BELA, "autodozvola, motodozvola, c1dozvola, c2dozvola, aviodozvola");
			SendClientMessagee( playerid, BELA, "c3dozvola, broddozvola, oruzjedozvola, oruzje");
			SendClientMessagee( playerid, SVETLOPLAVA, "|________________________________________________________|");
			return 1;
		}
		if( strcmp( opcija, "autodozvola", true ) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's vozacku dozvolu B kategorije.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo vozacku dozvolu B kategorije.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xVozacka ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if( strcmp(opcija,"motodozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer(5.0, playerid, igrac))
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s vozacku dozvolu A kategorije.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo vozacku dozvolu A kategorije.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xMotorska ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"c1dozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's vozacku dozvolu C1 kategorije.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo vozacku dozvolu C1 kategorije.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xKamionskaC1 ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"c2dozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's vozacku dozvolu C2 kategorije.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo vozacku dozvolu C2 kategorije.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xKamionskaC2 ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"c3dozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's vozacku dozvolu C3 kategorije.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo vozacku dozvolu C3 kategorije.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xKamionskaC3 ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"oruzjedozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's dozvolu za oruzje.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo dozvolu za oruzje.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xGunLicense ] = false;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"broddozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's dozvolu za plovidbu.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo dozvolu za plovidbu.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xBrodska ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"aviodozvola",true) == 0)
		{
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						format( globalstring, sizeof( globalstring ), "* Oduzeli ste %s's dozvolu za letenje.", ImeIgraca( igrac ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* Policajac %s vam je oduzeo dozvolu za letenje.", ImeIgraca( playerid ) );
						SendClientMessagee( igrac, SVETLOPLAVA, globalstring);
						PlayerInfo[ igrac ][ xLetelica ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		else if(strcmp(opcija,"oruzje",true) == 0)
		{
			new oruzje = 0, w, a;
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if(IsPlayerNearPlayer( 4.0, playerid, igrac ) )
					{

						for( new i = 0; i < 13; i++)
						{
							GetPlayerWeaponData(playerid, i, w, a);

							if(w)
							{
								oruzje++;
							}
						}

						SendClientMessageEx( playerid, SVETLOPLAVA, "* Oduzeli ste %s's oruzje.", ImeIgraca( igrac ) );
						SendClientMessageEx( igrac, SVETLOPLAVA, "* Policajac %s vam je oduzeo oruzje", ImeIgraca( playerid ) );
						ResetAllWeapons( igrac );
						PlayerInfo[ playerid ][ xTakenWeps ] += oruzje;
						
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		#if nerp_droga == 1
		else if(strcmp(opcija,"drogu",true) == 0)
		{
			new svedroge = 0;
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if(IsPlayerNearPlayer( 5.0, playerid, igrac ) )
					{
						svedroge = PlayerInfo[ igrac ][ xDrug ][ 0 ] + PlayerInfo[ igrac ][ xDrug ][ 1 ] + PlayerInfo[ igrac ][ xDrug ][ 2 ] + PlayerInfo[ igrac ][ xDrug ][ 3 ] + PlayerInfo[ igrac ][ xDrug ][ 4 ];
						SendClientMessageEx( playerid, SVETLOPLAVA, "* Oduzeli ste %s svu drogu.", ImeIgraca( igrac ) );
						SendClientMessageEx( igrac, SVETLOPLAVA, "* Policajac %s vam je oduzeo svu drogu.", ImeIgraca( playerid ) );
						PlayerInfo[ playerid ][ xTakenDrugs ] += svedroge;
						PlayerInfo[ igrac ][ xDrug ][ 0 ] = 0;
						PlayerInfo[ igrac ][ xDrug ][ 1 ] = 0;
						PlayerInfo[ igrac ][ xDrug ][ 2 ] = 0;
						PlayerInfo[ igrac ][ xDrug ][ 3 ] = 0;
						PlayerInfo[ igrac ][ xDrug ][ 4 ] = 0;
						PlayerInfo[ igrac ][ xDrugCode ][ 0 ] = 0;
						PlayerInfo[ igrac ][ xDrugCode ][ 1 ] = 0;
						PlayerInfo[ igrac ][ xDrugCode ][ 2 ] = 0;
						PlayerInfo[ igrac ][ xDrugCode ][ 3 ] = 0;
						PlayerInfo[ igrac ][ xDrugCode ][ 4 ] = 0;
					} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
				}
			} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		}
		#endif
		else GRESKA( playerid, "Ta stavka ne postoji - nju ne mozete oduzeti!");
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ticket( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	new igrac, moneys, reason[128];
	if(sscanf(params, "uis[128]", igrac, moneys, reason ) ) return SendUsageMessage( playerid, "/ticket [ ID/Ime ] [ Cena ] [ razlog ]");
	if(moneys < 1 || moneys > 1000) return GRESKA( playerid, "Cena tiketa ne moze biti manja od 1 i veca od 1000 !");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				if( PlayerInfo[ igrac ][ xNovac ] < moneys) return GRESKA( playerid, "Taj igrac nema toliko novaca !");
				SendClientMessageEx( playerid, SVETLOPLAVA, "* Dali ste %s tiket od $%d, razlog: %s", ImeIgraca( igrac ), moneys, reason );
				SendClientMessageEx( igrac, SVETLOPLAVA, "* Policajac %s vam je dao tiket od $%d, razlog: %s", ImeIgraca( playerid ), moneys, reason );
				SendClientMessagee( igrac, SVETLOPLAVA, "* Ukucajte /prihvati ticket, da bi ste prihvatili tiket.");
				SetPVarInt( igrac, "TicketOffer", playerid );
				SetPVarInt( igrac, "TicketMoney", moneys );
				
			} else GRESKA( playerid, "Taj igrac nije dovoljno blizu vas !");
		}
	} else GRESKA( playerid, "Taj igrac je Offline !");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oznaka( playerid,params[], help )
{
	new tekst[ 10 ], carsignstring[ 15 ], Float:x, Float:y, Float:z;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "s[10]", tekst ) ) return SendUsageMessage( playerid, "/oznaka [ Text ]");
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!" );
	new vehicleid = GetPlayerVehicleID( playerid );
	if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] ) {
		GetVehiclePos( vehicleid, x, y, z );
		if( CarSign[ vehicleid ] == 0 )
		{
			SendClientMessagee( playerid, ZUTA, "Stavio si oznaku na svoje vozilu!");
			CarSign[ vehicleid ] = 1;
			format( carsignstring, sizeof( carsignstring ), "%s", tekst );
			vehicle3Dtext[ vehicleid ] = Create3DTextLabel( carsignstring, 0xFFFFFFC8, x, y, z, 10.0, 0, 1 );
			Attach3DTextLabelToVehicle( vehicle3Dtext[ vehicleid ] , vehicleid, -0.800000, -2.899999, 0.000000 );
		}
		else if( CarSign[ vehicleid ] == 1 )
		{
			SendClientMessagee( playerid, ZUTA, "Skinuo si oznaku sa svog vozila!");
			Delete3DTextLabel( vehicle3Dtext[ vehicleid ] );
			CarSign[ vehicleid ] = 0;
		}
	} else GRESKA( playerid, "Da bi koristili ovu komandu morate biti u vozilu policije." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:orgstats( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	ShowPDStats( playerid, playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rotacija( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		new type;
		new VID = GetPlayerVehicleID( playerid );
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!");
		if( IsVehicleBajs( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Ne moze rotacija na biciklu!");
		if( IsVehicleMotor( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Ne moze rotacija na motor!");
		if( sscanf( params, "d", type))
		{
			SendUsageMessage( playerid, "/rotacija [ broj ]");
			SendClientMessagee( playerid, BELA, "1. Rotacija unutra");
			SendClientMessagee( playerid, BELA, "2. Rotacija krov");
			SendClientMessagee( playerid, BELA, "3. Ugasiti rotaciju");
			return 1;
		}
		switch(type)
		{
			case 1:
			{
				if( Siren[ VID ] == 1) return GRESKA( playerid, "Na ovom vozilu je vec postavljena rotacija!");
				Siren[ VID ] = 1;
				SirenObject[ VID ] = CreateDynamicObject( 18646, 10.0, 10.0, 1500.0, 0, 0, 0 );
				AttachDynamicObjectToVehicle( SirenObject[ VID ], VID, 0.0, 0.75, 0.275, 0.0, 0.1, 0.0);

				if( Maskuse[ playerid ] == false )
					format( globalstring, sizeof( globalstring ), "* %s stavlja rotaciju u vozilo!", ImeIgraca( playerid ) );
				else
					format( globalstring, sizeof( globalstring ), "* Maska_%d stavlja rotaciju u vozilo!", PlayerInfo[ playerid ][ xMaskID ] );

				format( globalstring, sizeof( globalstring ), "* %s stavlja rotaciju u vozilo!", ImeIgraca( playerid ) );
				PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
				return 1;
			}
			case 2:
			{
				if(Siren[ VID ] == 1) return GRESKA( playerid, "Na ovom vozilu vec je postavljena rotacija!");
				Siren[ VID ] = 1;
				SirenObject[ VID ] = CreateDynamicObject(18646, 10.0, 10.0, 1500.0, 0, 0, 0);
				AttachDynamicObjectToVehicle( SirenObject[ VID ], VID, -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);

				if( Maskuse[ playerid ] == false )
					format( globalstring, sizeof( globalstring ), "* %s stavlja rotaciju na krov.", ImeIgraca( playerid ) );
				else
					format( globalstring, sizeof( globalstring ), "* Maska_%d stavlja rotaciju na krov.", PlayerInfo[ playerid ][ xMaskID ] );

				PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
				return 1;
			}
			case 3:
			{
				if(Siren[ VID ] == 0) return GRESKA( playerid, "Nema stavljene rotacije na ovom vozilu!");
				Siren[ VID ] = 0;
				DestroyDynamicObject( SirenObject[ VID ] );

				if( Maskuse[ playerid ] == false )
					format( globalstring, sizeof( globalstring ), "* %s skida rotaciju sa vozila", ImeIgraca( playerid ) );
				else
					format( globalstring, sizeof( globalstring ), "* Maska_%d skida rotaciju sa vozila", PlayerInfo[ playerid ][ xMaskID ] );

				PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
				return 1;
			}
			default:
			{
				SendUsageMessage( playerid, "/rotacija [ broj ]");
				SendClientMessagee( playerid, BELA, "1. Rotacija unutra");
				SendClientMessagee( playerid, BELA, "2. Rotacija krov");
				SendClientMessagee( playerid, BELA, "3. Ugasiti rotaciju");
				return 1;
			}
		}
	}
	else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:suspend( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xRank ] < 5 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );

	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/suspend [ ID/Ime ] ");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika" );
	if( PlayerInfo[ playerid ][ xRank ] < 6 && PlayerInfo[ id ][ xRank ] >= 5 ) return GRESKA( playerid, "Ne mozes suspendovati rank 5+." );
	PlayerInfo[ id ][ xRank ] = 0;
	SavePlayer( id );
	SendInfoMessage( playerid, "Suspendovali ste igraca %s.", ImeIgraca( id ) );
	SendInfoMessage( playerid, "Da skines suspend igracu, samo mu daj rank 1+." );
	SendInfoMessage( id, "%s vas je suspendovao.", ImeIgraca( playerid ) );

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ocistidosije(playerid,params[])
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if(IsPlayerInRangeOfPoint(playerid,3.0,237.4014,125.8673,1021.4188)) return GRESKA( playerid, "Niste kod kompjutera u stanici!" );
	ShowPlayerDialog( playerid, dialog_OCISTIDOSIJE, DSI, D_NASLOV, "Upisite Ime i prezime gradjanina(Ime_Prezime).", D_ODABERI, D_ODUSTANI );

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gov( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0 ) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerInfo[ playerid ][ xRank ] < 5 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) != ORG_TIP_PD && GetFactionType( playerid ) != ORG_TIP_MD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new tekst[ 90 ], string[ 128 ];
	if( sscanf( params, "s[90]", tekst ) ) return SendUsageMessage( playerid, "/gov [ tekst ]");
	SendClientMessageToAll( -1, ""col_balkanstory"-----------------------------"SERVERBOJA_AQUA"Najava iz Uprave"col_balkanstory"-----------------------------");
	//SendClientMessageToAll( -1," ");
	format( string, sizeof( string ), ""col_balkanstory"[%s] "col_white"%s - %s: "col_balkanstory"%s", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], getOrgRank( playerid, PlayerInfo[ playerid ][ xClan ] ), ImeIgraca( playerid ), tekst );
	SendClientMessageToAll( -1, string );
	//SendClientMessageToAll( -1," ");
	SendClientMessageToAll( -1, ""col_balkanstory"-----------------------------------------------------------------------------------");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:opisosumnjicenog( playerid, params[] )
{
	new ime[24], text[64], text2[64];
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "s[24]s[64]s[64]", ime, text, text2 ) ) return SendUsageMessage( playerid, "/opisosumnjicenog [ Ime ] [ izgled ] [ zlocin ]");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( OI[ PlayerInfo[ i ][ xClan ] ][ oTip ] == ORG_TIP_PD )
		{
			SendClientMessagee( i, -1, ""col_balkanstory"|----------------------OPIS LIKA-----------------------|");
			SendClientMessageEx( i, BELA, "- Ime: %s", ime );
			SendClientMessageEx( i, BELA, "- Zlocin: %s", text2 );
			SendClientMessageEx( i, BELA, "- Opis: %s", text );
			SendClientMessagee( i, -1, ""col_balkanstory"|------------------------------------------------------|");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:oprema( playerid, params[] )
{
	new id = PlayerInfo[ playerid ][ xClan ];
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, OI[ id ][ oEquipPoint ][ 0 ], OI[ id ][ oEquipPoint ][ 1 ], OI[ id ][ oEquipPoint ][ 2 ] ) ) return GRESKA( playerid, "Nisi kod Armory-ja.");
	ShowPlayerDialog( playerid, dialog_OPREMA, DSL, "MUP/SAJ oprema",  "Patrolna\nStandardna\nSpecijalna\nProfesionalna\nSnajperska\nPancir\nHealth\nStit\nSWAT\nLisice\nTazer", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:skinistit( playerid, params[] )
{
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND) && RiotShield[ playerid ] == true )
	{
		RiotShield[ playerid ] = false;
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
		format( globalstring, sizeof( globalstring ), "* %s skida svoj stit!", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else GRESKA(playerid,  "Nemas Riot Shield u ruci!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pretresi( playerid, params[] )
{
	new igrac, weapon[13], bullets[13];
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf(params, "u", igrac ) ) return SendUsageMessage( playerid, "/pretresi [ ID/Ime ]");
	if( IsPlayerConnected( igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID )
		{
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) && !IsPlayerInAnyVehicle( playerid ) && !IsPlayerInAnyVehicle( igrac ) )
			{
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes pretrest sam sebe!");

				format( globalstring, sizeof( globalstring ), "Materijali: %d", PlayerInfo[ igrac ][ xMaterijali ] );
				SendClientMessagee( playerid, BELA, globalstring);
				#if nerp_droga == 1
				format( globalstring, sizeof( globalstring ), "[_________________________ %s DROGE _________________________=]", ImeIgraca( igrac ) );
				SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
				format( globalstring, sizeof( globalstring ), "Slot 1: [%s(%d g)]", GetDrugNameByDrugID( PlayerInfo[ igrac ][ xDrugCode ][ 0 ] ), PlayerInfo[ igrac ][ xDrug ][ 0 ] );
				SendClientMessagee( playerid, BELA, globalstring);
				format( globalstring, sizeof( globalstring ), "Slot 2: [%s(%d g)]", GetDrugNameByDrugID( PlayerInfo[ igrac ][ xDrugCode ][ 1 ] ), PlayerInfo[ igrac ][ xDrug ][ 1 ] );
				SendClientMessagee( playerid, BELA, globalstring);
				format( globalstring, sizeof( globalstring ), "Slot 3: [%s(%d g)]", GetDrugNameByDrugID( PlayerInfo[ igrac ][ xDrugCode ][ 2 ] ), PlayerInfo[ igrac ][ xDrug ][ 2 ] );
				SendClientMessagee( playerid, BELA, globalstring);
				format( globalstring, sizeof( globalstring ), "SlotF 4: [%s(%d g)]", GetDrugNameByDrugID( PlayerInfo[ igrac ][ xDrugCode ][ 3 ] ), PlayerInfo[ igrac ][ xDrug ][ 3 ] );
				SendClientMessagee( playerid, BELA, globalstring);
				format( globalstring, sizeof( globalstring ), "Slot 5: [%s(%d g)]", GetDrugNameByDrugID( PlayerInfo[ igrac ][ xDrugCode ][ 4 ] ), PlayerInfo[ igrac ][ xDrug ][ 4 ] );
				SendClientMessagee( playerid, BELA, globalstring);
				#endif
				format( globalstring, sizeof( globalstring ), "* %s je pretrazio %s za ilegalne predmete.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				format( globalstring, sizeof( globalstring ), "[_________________________ %s ORUZJE ________________________=]", ImeIgraca( igrac ) );
				SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
				for( new slot = 0; slot < 13; slot++ )
				{
					GetPlayerWeaponData( igrac, slot, weapon[ slot ], bullets[ slot ] );

					if( weapon[ slot ] > 0 && bullets[slot] > 0 )
					{
						format( globalstring, sizeof( globalstring ), "ORUZJE: %s, METAKA: %d.", WeapNames[ weapon[ slot ] ], bullets[ slot ] );
						SendClientMessagee( playerid, BELA, globalstring);
					}
				}
			} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proveriidvozila( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || PlayerInfo[ playerid ][ xHelper ] >= 2)
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new ID;
		if( sscanf( params, "d", ID ) ) return SendUsageMessage( playerid, "/proveriidvozila [ ID/Ime ]");
		if( !IsPlayerConnected( ID ) ) return GRESKA( playerid, "Nepravilni ID");
		SendClientMessageEx( playerid, 0xF0F0F0FF, "%s - VOZILA", ImeIgraca( ID ) );
		if( PlayerInfo[ ID ][ xVoziloID ][ 0 ] != -1 )
		{
			format( globalstring, sizeof( globalstring ), "ID Vozila1 [%d]", VehicleInfo[ PlayerInfo[ ID ][ xVoziloID ][ 0 ] ][ vID ] );
			SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		}
		if( PlayerInfo[ ID ][ xVoziloID ][ 1 ] != -1 )
		{
			format( globalstring, sizeof( globalstring ), "ID Vozila2 [%d]", VehicleInfo[ PlayerInfo[ ID ][ xVoziloID ][ 1 ] ][ vID ] );
			SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		}
		if( PlayerInfo[ ID ][ xVoziloID ][ 2 ] != -1 )
		{
			format( globalstring, sizeof( globalstring ), "ID Vozila3 [%d]", VehicleInfo[ PlayerInfo[ ID ][ xVoziloID ][ 2 ] ][ vID ] );
			SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		}
		if( PlayerInfo[ ID ][ xVoziloID ][ 3 ] != -1 )
		{
			format( globalstring, sizeof( globalstring ), "ID Vozila4 [%d]", VehicleInfo[ PlayerInfo[ ID ][ xVoziloID ][ 3 ] ][ vID ] );
			SendClientMessage(playerid, 0xF0F0F0FF,globalstring);
		}
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:proveripojas( playerid, params[] )
{
	new ID;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( sscanf( params, "d", ID ) ) return SendUsageMessage( playerid, "/proveripojas [ ID/Ime ]");
	if( !IsPlayerConnected( ID ) ) return GRESKA( playerid, "Nepravilni ID");
	if( !IsPlayerNearPlayer( 3.0, playerid, ID ) ) return GRESKA( playerid, "Taj igrac nije pored vas.");
	if( !IsPlayerInAnyVehicle( ID ) ) return GRESKA( playerid, "Igrac nije u vozilu.");
	if( Pojas[ ID ] == true ) return SendClientMessagee( playerid, SVETLOPLAVA, "* Igrac je vezan." );
	else return SendClientMessagee( playerid, SVETLOPLAVA, "* Igrac nije vezan." );
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uhapsi( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		new id;
		if( sscanf(params, "u", id ) ) return SendUsageMessage( playerid, "/uhapsi [ ID/Ime ]");
		if( !IsPlayerInRangeOfPoint( playerid, 6.0, 1587.2568,-1633.4430,13.3676 ) &&
			!IsPlayerInRangeOfPoint( playerid, 6.0, 1262.3292,-1197.8417,23.8832) &&
			!IsPlayerInRangeOfPoint( playerid, 6.0, -2251.7346, 1948.6930, 8.1210 ) &&
			!IsPlayerInRangeOfPoint( playerid, 6.0, 298.2707, 179.4527, 1007.1719 ) &&
			!IsPlayerInRangeOfPoint( playerid, 6.0, -2313.2324, 1883.1501, 8.1210 ) ) return GRESKA( playerid, "Niste na mjestu za uhicenje igraca !");
		if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Niste na duznosti!");
		if( IsPlayerConnected( id ) )
		{
			if( id != INVALID_PLAYER_ID )
			{
				if( id == playerid ) return GRESKA( playerid, "Ne mozete uhapsiti sami sebe!");
				if( OI[ PlayerInfo[ id ][ xClan ] ][ oTip ] == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes uhapsiti policajca.");
				if( PlayerInfo[ id ][ xZatvor ] != 0 ) return GRESKA( playerid, "Igrac je vec u zatvoru." );
				if( !IsPlayerNearPlayer(5.0, playerid, id ) ) return GRESKA( playerid, "Taj igrac nije dovoljno blizu vas !");
				if( PlayerInfo[ id ][ xWanted ] < 1 ) return GRESKA( playerid, "Igrac mora imati barem 1 Wanted Level !");
				new time = PlayerInfo[ id ][ xWanted ]*6;
				new bailprice = PlayerInfo[ id ][ xWanted ]*5000;
				format( globalstring, sizeof( globalstring ), "* Uhitili ste %s i dobili %d$!", ImeIgraca( id ), PlayerInfo[ id ][ xWanted ]*300  );
				SendClientMessagee( playerid, SVETLOCRVENA, globalstring );
				for( new i = 1; i < MAX_ORG; i++)
				{
					if( OI[ i ][ oTip ] == ORG_TIP_PD )
					{
						format( globalstring, sizeof( globalstring ), "< Policajac %s je uhapsio osumnjicenog %s. >", ImeIgraca( playerid ), ImeIgraca( id ) );
						OrgPoruka( i, SVETLOCRVENA, globalstring);
					}
				}

				new hapsenje_vijesti_string[300];
				format(hapsenje_vijesti_string,sizeof(hapsenje_vijesti_string),"| VIJESTI | Dogodila su se nova hapsenja u gradu, novi uhiceni je {ffffff}%s"col_orange" - uhitio ga je {ffffff}%s",ImeIgraca( id ), ImeIgraca( playerid ));
				SCMA(NARANDZASTA,hapsenje_vijesti_string);

				format( globalstring, sizeof( globalstring ), "Uhapseni ste od %s", ImeIgraca( playerid ));
				announcement( id, globalstring, 5000, 5);
				ResetAllWeapons( id );
				PlayerInfo[ id ][ xZatvor ] = OBICAN_ZATVOR;
				PlayerInfo[ id ][ xZatvorVreme ] = time;
				PlayerInfo[ id ][ xBailPrice ] = bailprice;
				SendClientMessageEx( id, SVETLOPLAVA, "Pritvoreni ste na %d minuta. Kaucija: $%d", PlayerInfo[ id ][ xZatvorVreme ], PlayerInfo[ id ][ xBailPrice ] );
				SendClientMessagee( id, SVETLOPLAVA, "Da platite kauciju koristite /platikauciju." );
				DajIgracuNovac( playerid, PlayerInfo[ id ][ xWanted ]*300 );
				DragedPlayerID[ playerid ] = -1;
				Draged[ id ] = -1;
				PlayerInfo[ id ][ xUhapsen ] += 1;
				PlayerInfo[ playerid ][ xPDUhapsio ] += 1;
				ClearAnimations( id );
				
				format( globalstring, sizeof( globalstring ), "~r~Do slobode: ~w~%d ~r~minuta",( PlayerInfo[ id ][ xZatvorVreme ]+1 ) );
				PlayerTextDrawSetString(id,JailTD[id],globalstring);
				PlayerTextDrawShow(id,JailTD[id]);
				
				if( IsPlayerAttachedObjectSlotUsed( id, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( id, OBJECT_SLOT_RHAND );
				SetPlayerSpecialAction( id, SPECIAL_ACTION_NONE );
				PlayerCuffed[ id ] = 0;
				new rand = random(sizeof(RandomZatvor));
				Dimi_SetPlayerPos( id, RandomZatvor[ rand ][ 0 ], RandomZatvor[ rand ][ 1 ],RandomZatvor[ rand ][ 2 ] );
				PlayerInfo[ id ][ xWanted ] = 0;
				Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
				strmid( ZlocinInfo[ id ][ zPrijavio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zPocinio ], "Nema", 0, strlen("Nema"), 255 );
				strmid( ZlocinInfo[ id ][ zZlocin ], "Nema", 0, strlen("Nema"), 255 );
				announcement( id, "~y~Ucitavanje sistema i objekata...", 1000, 4 );
				SetTimerEx( "SlobodnoSada", 2000, false, "i", id );
				SetCameraBehindPlayer( id ); SetPlayerInterior( id, 1);
				SetPlayerVirtualWorld( id, 1);
				TogglePlayerControllable( id, 0 );
				SavePlayer( id );
				format( globalstring, sizeof( globalstring ), ""col_orange"|| CNN ||:{ffffff} Dogodila su se nova hapsenja u gradu, novi uhiceni je %s - uhitio ga je %s.", ImeIgraca( id ), ImeIgraca(playerid) );
				OOCNews( -1, globalstring );
				format( globalstring, sizeof( globalstring ), "{FF0000}|| ARREST || "SERVERBOJA_AQUA"%s {FFFFFF}je uhapsio igraca "SERVERBOJA_AQUA"%s {FFFFFF}| Vrijeme: %dm", ImeIgraca( playerid ), ImeIgraca( id ), time );
				AdminPoruka( -1, globalstring );
				return 1;
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:live(playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 10.0, 744.3063,-1358.3914,1001.6753 ) ) return GRESKA( playerid, "Niste u CNN studiu kod pickupa /live!");
	if( GetFactionType( playerid ) != ORG_TIP_CNN ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PlayerInfo[ playerid ][ xRank ] < 3 ) return GRESKA( playerid, "Morate biti rank 3 da biste koristili /live!");
	if( GetPVarInt( playerid, "TalkingLive" ) != 255 )
	{
		SendClientMessagee( playerid, 0x33CCFFAA, "* Razgovor uzivo zavrsio." );
		SendClientMessagee( GetPVarInt( playerid, "TalkingLive"), 0x33CCFFAA, "* Razgovor uzivo zavrsio." );
		TogglePlayerControllable( playerid, true );
		TogglePlayerControllable( GetPVarInt( playerid, "TalkingLive"), 1 );
		SetPVarInt( GetPVarInt( playerid, "TalkingLive" ), "TalkingLive", 255 );
		SetPVarInt( playerid, "TalkingLive", 255 );
		return 1;
	}
	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/live [ ID/Ime ]");
		return 1;
	}
	if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebi ukljuciti /live!");
	if( !IsPlayerNearPlayer( 3.0, playerid, id ) ) return GRESKA( playerid, "Morate biti u blizini igraca sa kojim zelite ici u uzivi program!");
	SendClientMessageEx( playerid, 0x33CCFFAA, "* Ponudili ste %s razgovor uzivo.", ImeIgraca( id ) );
	SendClientMessageEx( id, 0x33CCFFAA, "* %s vam je ponudio razgovor uzivo, ukucajte /prihvati live ako zelite prihvatiti program!", ImeIgraca( playerid ) );
	SetPVarInt( id, "LiveOffer", playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vesti( playerid, params[] )
{
	new text[ 128 ], string[ 234 ];
	if( GetFactionType( playerid ) != ORG_TIP_CNN ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!" );
	new vehicleid = GetPlayerVehicleID( playerid );
	if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
	{
		if( !newsbre )
		{
			GRESKA( playerid, "Mora proci %d sekundi izmedju slanja novosti !",  ( newstimer/1000 ) );
			return 1;
		}
		if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/vesti [Text]");
		if( strfind( text, "~", true ) != -1 )
		{
			GRESKA( playerid, "Nedopusten znak u novostima (~)!");
			return 1;
		}
		SetTimer( "NewsOn", newstimer, 0 );
		newsbre = 0;
		PlayerInfo[ playerid ][ xBrojNews ]++;
		format( string, sizeof( string ), "|| CNN News || %s: "col_white"%s", ImeIgraca( playerid ), text );
		OOCNews( 0xFFA500AA, string );
	} else GRESKA( playerid, "Da bi koristili ovu komandu morate biti u vozilu novinara" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:newsstats( playerid, params[] )
{
	if( GetFactionType( playerid )   != ORG_TIP_CNN ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	SendClientMessage( playerid, 0x33CCFFAA, "__________CNN STATS_________");
	SendClientMessageEx( playerid, BELA, "Broj objavljenih newsa: [%d]", PlayerInfo[ playerid ][ xBrojNews ] );
	SendClientMessage( playerid, 0x33CCFFAA, "____________________________");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mduty( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_MD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1137.859497, -1324.926879, 804.520690 ) ) return GRESKA( playerid, "Morate biti pored ormarica da bi koristili ovu komandu." );
	if( MedicDuty[ playerid ] == false )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "* Sada ste na duznosti doktora i primati cete pozive na hitnoj liniji.");
		MedicDuty[ playerid ] = true;
		Medics += 1;
	}
	else if( MedicDuty[ playerid ] == true )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "* Vise niste na duznosti doktora i necete primati vise pozive." );
		MedicDuty[ playerid ] = false;
		Medics -= 1;
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:muniform( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_MD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( IsPlayerInRangeOfPoint( playerid, 2.0, 1137.859497, -1324.926879, 804.520690 ) )
	{
		ShowPlayerDialog(playerid, dialog_MUNIFORM, DSL, D_NASLOV, "Skin 1\nSkin 2\nSkin 3\nSkin 4", D_ODABERI, D_ODUSTANI );
		Dimi_SetPlayerHealth( playerid, 100 );
	}
	else return greska(playerid,"Nisi u bolnici.");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:medicine( playerid, params[] )
{
	if(PlayerInfo[playerid][xZMaska] == 0) return greska(playerid,"/zmaska - Ne mozete izvrsavati svoje obaveze bez maske za zastitu!");
	new igrac, money, vehicleid = GetPlayerVehicleID( playerid );
	if( GetFactionType( playerid ) == ORG_TIP_MD )
	{
		if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
		{
			if( sscanf(params, "ui", igrac, money ) )
			{
				SendUsageMessage( playerid, "/medicine [ ID/Ime ] [ Cena ]");
				return 1;
			}
			if( money < 1 || money > 100 ) return GRESKA( playerid, "Cena leka ne moze biti manja od 1 i veca od 100$!" );
			if( PlayerInfo[ igrac ][ xLevel ] < 3 ) return GRESKA( playerid, "Ne mozes leciti igraca manjeg levela od 3." );
			if( PlayerInfo[ igrac ][ xNovac ] < money ) return GRESKA( playerid, "Samo probaj !");
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer(5.0, playerid, igrac ) )
					{
						if( igrac == playerid) return GRESKA( playerid, "Ne mozete sami sebi prodati lek !");
						SendClientMessageEx( playerid, SVETLOPLAVA, "* Ponudili ste lek %s za $%d.", ImeIgraca( igrac ), money );
						SendClientMessageEx( igrac, SVETLOPLAVA, "* Doktor %s vam je ponudio lek za $%d. Upisite /prihvati medicine ako zelite uzeti lek da vam obnovi energiju.", ImeIgraca( playerid ), money );
						SetPVarInt( igrac, "MedicineOffer", playerid );
						SetPVarInt( igrac, "MedicineMoney", money );
					} else GRESKA( playerid, "Taj igrac nije blizu vas!");
				}
			}
			return 1;
		}
		else GRESKA( playerid, "Niste u autu hitne pomoci!");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
//1144.2695,-1336.0710,804.5207
CMD:vakcinacija( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1157.3193,-1314.4224,804.5207 ) ) return GRESKA( playerid, "Morate biti u bolnici." );
	if( PlayerInfo[playerid][xKnjizica] != 1) return greska(playerid, "Vi nemate zdravstvenu knjizicu!");
	if( PlayerInfo[playerid][xVakcina] == 1) return greska(playerid, "Vi ste vec uspjeno izvrsili vakcinaciju!");
	if( PlayerInfo[playerid][xUputnica] != 1) return greska( playerid,"Vi nemate uputnicu i dokumentaciju!");
	PlayerInfo[playerid][xVakcina] = 1;
	SendInfoMessage(playerid, "Uspjesno ste izvrsili vakcinaciju!");
	DajIgracuNovac(playerid, -1000);
	return 1;
}
//11738
//Create3DandP(""col_balkanstory"|| PAKET ZA PRVU POMOC ||\n\n"col_white"Da bi ste kupili paket za prvu pomoc,\nkucajte komandu:\n\n"col_balkanstory"[ /kupiprvupomoc ]", 1138.2598,-1322.7903,804.5207, -1, -1, 11738, 5.0 );
CMD:kupiprvupomoc(playerid,params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1138.2598,-1322.7903,804.5207)) return greska(playerid,"Morate otici u bolnicu!");
	if(PlayerInfo[playerid][xRanac] == 0) return greska(playerid,"Nemas ranac u koji bi mogao staviti paket.");
	if(PlayerInfo[playerid][xPP] == 1) return greska(playerid,"Ti si vec kupio paket za prvu pomoc! Trebas prvo istrositi onaj koji si kupio! (/prvapomoc)");
	PlayerInfo[playerid][xPP] = 1;
	SendInfoMessage(playerid,"Uspjesno ste kupili paket za prvu pomoc! Da koristite: (/prvapomoc)");
	DajIgracuNovac(playerid,-5000);
	return 1;
}
CMD:prvapomoc(playerid,params[])
{
	if(PlayerInfo[playerid][xPP] != 1) return greska(playerid,"Ti nemas paket za prvu pomoc - nabavi ga u bolnici.");
	if(IsPlayerInAnyVehicle(playerid)) return greska(playerid,"Ne mozes to dok si u vozilu!");
	DodajIgracuHP(playerid,20);
	SendInfoMessage(playerid,"Uspjesno si popunio 20 posto svog helta sa paketom za prvu pomoc!");
	SendInfoMessage(playerid,"Paket za prvu pomoc mozes koristiti sve dok ne odes relog!");
	return 1;
}
CMD:ovjeriknjizicu( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1144.2695,-1336.0710,804.5207 ) ) return GRESKA( playerid, "Morate biti u bolnici." );
	if( PlayerInfo[playerid][xKnjizica] == 1) return greska(playerid, "Vi ste vec ovjerili zdravstvenu knjizicu!");
	PlayerInfo[playerid][xKnjizica] = 1;
	SendInfoMessage(playerid, "Uspjesno ste ovjerili knjizicu!");
	DajIgracuNovac(playerid, -1000);
	return 1;
}
CMD:lek( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1141.415771, -1329.014282, 804.520690 ) ) return GRESKA( playerid, "Morate biti u bolnici." );
	if( PlayerInfo[playerid][xKnjizica] != 1) return greska(playerid, "Vi nemate zdravstvenu knjizicu!");
	Dimi_SetPlayerHealth( playerid, 100 );
	TogglePlayerControllable( playerid, true );
	PlayerInfo[ playerid ][ xUbijen ] = 0;
	SendClientMessagee( playerid, SVETLOPLAVA, "* Izlecili smo vam sve rane, mozete nastaviti dalje!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:izlecizavisnost( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1138.682739, -1329.014282, 804.520690 ) ) return GRESKA( playerid, "Morate biti u bolnici." );
	if( PlayerInfo[ playerid ][ xNovac ] < 25000 ) return GRESKA( playerid, "Nemas dovoljno novca (25.000$)." );
	if( PlayerInfo[playerid][xKnjizica] != 1) return greska(playerid, "Vi nemate zdravstvenu knjizicu!");
	DajIgracuNovac( playerid, -25000 );
	PlayerInfo[ playerid ][ xHeroinAddict ] = false;
	PlayerInfo[ playerid ][ xHeroinUsed ] = 0;
	PlayerInfo[ playerid ][ xHeroinIndicator ] = 0;
	PlayerInfo[ playerid ][ xCokeCrackAddict ] = false;
	PlayerInfo[ playerid ][ xCokeCrackUsed ] = 0;
	PlayerInfo[ playerid ][ xCokeCrackIndicator ] = 0;
	PlayerInfo[ playerid ][ xMethAddict ] = false;
	PlayerInfo[ playerid ][ xMethIndicator ] = 0;
	PlayerInfo[ playerid ][ xMethUsed ] = 0;
	SavePlayer( playerid );
	TogglePlayerControllable( playerid, false );
	Dimi_SetPlayerHealth( playerid, 80.0 );
	SetPlayerInterior( playerid, 1 );
	SetPlayerVirtualWorld( playerid, playerid );
	new rand = random( sizeof( SpawnBolnica ) );
	Dimi_SetPlayerPos( playerid, SpawnBolnica[ rand ][ 0 ], SpawnBolnica[ rand ][ 1 ], SpawnBolnica[ rand ][ 2 ] );
	SetPlayerFacingAngle( playerid, 0.000 );
	ApplyAnimation( playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0 );
	announcement( playerid, "~n~~w~Bicete izleceni za ~y~3 ~w~minuta...", 4000, 4 );
	SetPlayerCameraPos(playerid, 1156.9934, -1333.7917, 806.4727);
	SetPlayerCameraLookAt(playerid, 1156.4050, -1334.6035, 806.1156);
	Odbrojavanje[ playerid ] = 180;
	VremeTDControl( playerid, true );
	BolnicaTimer[ playerid ] = SetTimerEx( "IzlecenOdZavisnosti", 180000, false, "i", playerid );
	//TogglePlayerControllable( playerid, true );
	//PlayerInfo[ playerid ][ xUbijen ] = 0;
	//SendClientMessagee( playerid, SVETLOPLAVA, "* Izlecili smo vam sve rane, mozete nastaviti dalje!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dajinekciju( playerid, params[] )
{
	new vehicleid = GetPlayerVehicleID( playerid ), igrac;
	if( GetFactionType( playerid ) == ORG_TIP_MD )
	{
		if( ( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] ) || InAmbu[ playerid ] != -1 ) {
			if( sscanf( params, "u", igrac ) )
			{
				SendUsageMessage( playerid, "/dajinekciju [ ID/Ime ]");
				return 1;
			}
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 4.0, playerid, igrac ) )
					{
						//if( PovredjenIgrac[ igrac ] == true ) {
							if( igrac == playerid) return GRESKA( playerid, "Ne mozete sami sebi dati injekciju !");
							SendClientMessageEx( playerid, SVETLOPLAVA, "* Dali ste %s injekciju protiv bolova,sada ce se ta osoba moci kretati i uci u bolnicu.", ImeIgraca( igrac ) );
							SendClientMessageEx( igrac, SVETLOPLAVA, "* Doktor %s vam je dao injekciju,sada cete moci uci u bolnicu i izlijeciti se do kraja(/lek)", ImeIgraca( playerid ) );
							TogglePlayerControllable( igrac, 1 );
							format( globalstring, sizeof( globalstring ), "* %s uzima injekciju i pika u ruku osobu %s.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
							PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
							return 1;
						//} else GRESKA( playerid, "Taj igrac nije ozlijedjen!");
					} else GRESKA( playerid, "Taj igrac nije blizu vas!");
				}
			}
			return 1;
		} else GRESKA( playerid, "Niste u autu hitne pomoci!");
	}
	return 1;
}
CMD:zmaska( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_MD )
	{
		new string[200];
		new igrac = playerid;
		if(PlayerInfo[playerid][xZMaska] == 1) 
		{
			SendInfoMessage(playerid,"Skinuo si svoju zastitnu masku!");
			PlayerInfo[igrac][xZMaska] = 0;
			if( Maskuse[ playerid ] == false )
				format( string, sizeof( string ), "* Doktor %s skida zastitnu masku sa lica!", ImeIgraca( playerid ));
			else
				format( string, sizeof( string ), "* Doktor Maska_%d skida zastitnu masku sa lica!", PlayerInfo[ playerid ][ xMaskID ] );
			PorukaRadius( 30.0, playerid, string, LJUBICASTA );
			return 1;
		}
		if(PlayerInfo[igrac][xZMaska] == 0) 
		{
			SendInfoMessage(playerid,"Stavio si svoju zastitnu masku!");
			PlayerInfo[igrac][xZMaska] = 1;
			if( Maskuse[ playerid ] == false )
				format( string, sizeof( string ), "* Doktor %s stavlja zastitnu masku na lice!", ImeIgraca( playerid ));
			else
				format( string, sizeof( string ), "* Doktor Maska_%d stavlja zastitnu masku na lice!", PlayerInfo[ playerid ][ xMaskID ]);
			PorukaRadius( 30.0, playerid, string, LJUBICASTA );
			return 1;
		}
	}
	if( GetFactionType( playerid ) != ORG_TIP_MD ) return greska(playerid,"Nisi doktor u CUM-u.");
	return 1;	
}
CMD:dajuputnicu(playerid, params[]) {
	if(PlayerInfo[playerid][xZMaska] == 0) return greska(playerid,"/zmaska - Ne mozete izvrsavati svoje obaveze bez maske za zastitu!");
	new vehicleid = GetPlayerVehicleID( playerid ), igrac;
	if( GetFactionType( playerid ) == ORG_TIP_MD )
	{
		if( ( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] ) || InAmbu[ playerid ] != -1 ) {
			if( sscanf( params, "u", igrac ) )
			{
				SendUsageMessage( playerid, "/dajuputnicu [ ID/Ime ]");
				return 1;
			}
			if( IsPlayerConnected( igrac ) )
			{
				if( igrac != INVALID_PLAYER_ID )
				{
					if( IsPlayerNearPlayer( 4.0, playerid, igrac ) )
					{
						//if( PovredjenIgrac[ igrac ] == true ) {
							if( igrac == playerid) return GRESKA( playerid, "Ne mozete sami sebi dati uputnicu i dokumentaciju!");
							if( PlayerInfo[igrac][xUputnica] == 1 ) return greska(playerid,"Ovaj gradjanin vec ima svu potrebnu dokumentaciju i uputnicu!");
							SendClientMessageEx( playerid, SVETLOPLAVA, "* Dali ste %s uputnicu za vakcinaciju!", ImeIgraca( igrac ) );
							SendClientMessageEx( igrac, SVETLOPLAVA, "* Doktor %s vam je dao uputnicu i dokumenta za vakcinaciju! (/vakcinacija)", ImeIgraca( playerid ) );
							PlayerInfo[igrac][xUputnica] = 1;
							return 1;
						//} else GRESKA( playerid, "Taj igrac nije ozlijedjen!");
					} else GRESKA( playerid, "Taj igrac nije blizu vas!");
				}
			}
			return 1;
		} else GRESKA( playerid, "Niste u autu hitne pomoci!");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:recover( playerid, params[] )
{
	if(PlayerInfo[playerid][xZMaska] == 0) return greska(playerid,"/zmaska - Ne mozete izvrsavati svoje obaveze bez maske za zastitu!");
	new moneys, igrac;
	if( GetFactionType( playerid ) == ORG_TIP_MD )
	{
		if( sscanf( params, "ui", igrac, moneys ) )
		{
			SendUsageMessage( playerid, "/recover [ ID/Ime ] [ Cena ]");
			return 1;
		}
		if( moneys < 1 || moneys > 50 ) return GRESKA( playerid, "Cena lecenja ne moze biti manja od 1 i veca od 50$!" );
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac != INVALID_PLAYER_ID )
			{
				if( IsPlayerNearPlayer( 3.0, playerid, igrac ) )
				{
					if( PlayerInfo[ igrac ][ xLevel ] < 3 ) return GRESKA( playerid, "Ne mozes leciti igraca manjeg levela od 3." );
					if( igrac == playerid ) return GRESKA( playerid, "Ne mozes ozdraviti sam sebe!");
					if( PlayerInfo[ igrac ][ xNovac ] < moneys ) return GRESKA( playerid, "Samo probaj !");
					SendClientMessageEx( playerid, SVETLOPLAVA, "* Ponudio si %s lecenje u cijeni od $%d", ImeIgraca( igrac ), moneys );
					SendClientMessageEx( igrac, SVETLOPLAVA, "* Doktor %s ti je ponudio lecenje u cijeni od $%d", ImeIgraca( playerid ), moneys );
					SendClientMessagee( igrac, SVETLOPLAVA, "* Ukucaj /prihvati recover da prihvatis lecenje.");
					SetPVarInt( igrac, "RecoverOffer", playerid );
					SetPVarInt( igrac, "RecoverMoney", moneys );
				} else GRESKA( playerid, "Taj igrac nije blizu tebe !");
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
forward Vuci( playerid );
public Vuci( playerid )
{
	if( IsPlayerConnected( playerid ) )
	{
		if( IsPlayerConnected( DragedPlayerID[ playerid ] ) )
		{
			if( !IsPlayerInAnyVehicle( playerid ) && ( !IsPlayerInAnyVehicle( DragedPlayerID[ playerid ] ) || IsPlayerInAnyVehicle( DragedPlayerID[ playerid ] ) ) )
			{
				new Float:Pos[ 3 ];
				GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
				SetPlayerPos( DragedPlayerID[ playerid ], Pos[ 0 ],  Pos[ 1 ]+0.4, Pos[ 2 ]);
				SetPlayerInterior( DragedPlayerID[ playerid ], GetPlayerInterior( playerid ) );
				SetPlayerVirtualWorld( DragedPlayerID[ playerid ], GetPlayerVirtualWorld( playerid ) );
			}
			else if( IsPlayerInAnyVehicle( playerid ) && !IsPlayerInAnyVehicle( DragedPlayerID[ playerid ] ) )
			{
				new vehicle = GetPlayerVehicleID(playerid);
				if( IsSeatAvailable( vehicle, 1 ) )
				{
					PutPlayerInVehicle( DragedPlayerID[ playerid ], vehicle, 1 );
				}
				else if( IsSeatAvailable( vehicle, 2 ) )
				{
					PutPlayerInVehicle( DragedPlayerID[ playerid ], vehicle, 2 );
				}
				else if( IsSeatAvailable( vehicle, 3 ) )
				{
					PutPlayerInVehicle( DragedPlayerID[ playerid ], vehicle, 3 );
				}
			}
		}
		else
		{
			DragedPlayerID[ playerid ] = -1;
			SendInfoMessage( playerid, "Igrac kog ste vukli je napustio server.");
			Dimi_KillTimer( DragTimer[ playerid ] );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pdizbaci( playerid, params[] )
{
	new igrac, Float:x, Float:y, Float:z;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( sscanf( params, "u", igrac ) )
	{
		SendUsageMessage( playerid, "/pdizbaci [ ID/Ime ]");
		return 1;
	}
	if( igrac != INVALID_PLAYER_ID )
	{
		if( IsPlayerConnected( igrac ) )
		{
			//if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Izadjite iz vozila prvo.");
			if( !IsPlayerInAnyVehicle( igrac ) ) return GRESKA( playerid, "Igrac mora biti u vozilu.");
			if( igrac == playerid ) return GRESKA( playerid, "Ne mozete izbaciti sami sebe." );
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				format( globalstring, sizeof( globalstring ), "* %s vas je izbacio iz vozila.", ImeIgraca( playerid ) );
				SendClientMessagee( igrac, SVETLOPLAVA, globalstring );
				format( globalstring, sizeof( globalstring ), "* Izbacili ste %s iz vozila.", ImeIgraca( igrac ) );
				SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
				format( globalstring, sizeof( globalstring ), "* %s je izbacio %s iz vozila.", ImeIgraca( playerid ) ,ImeIgraca( igrac ) );
				PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
				GetPlayerPos( igrac, x, y, z );
				Dimi_SetPlayerPos( igrac, x, y, z+5 );
				if( antiCheatCS[ igrac ][ TakeVehicle ] != INVALID_VEHICLE_ID )
				{
					BusyVehicle[ antiCheatCS[ igrac ][ TakeVehicle ] ] = -1;
				}
			} else return GRESKA( playerid, "Igrac nije pored vas." );
		}
	} else return GRESKA( playerid, "Pogresan ID igraca." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vuci( playerid, params[] )
{
	new igrac;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( sscanf( params, "u", igrac ) )
	{
		SendUsageMessage( playerid, "/vuci [ ID/Ime ]");
		return 1;
	}
	if( igrac != INVALID_PLAYER_ID )
	{
		if( IsPlayerConnected( igrac ) )
		{
			//if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Izadjite iz vozila prvo.");
			//if( IsPlayerInAnyVehicle( igrac ) ) return GRESKA( playerid, "Morate prvo izbaciti igraca iz vozila.");
			if( DragedPlayerID[ playerid ] != -1 ) return GRESKA( playerid, "Ne mozete vuci vise od jednog igraca u isto vreme");
			if( igrac == playerid ) return GRESKA( playerid, "Ne mozete vuci sami sebe." );
			if( PlayerCuffed[ igrac ] != 2 ) return GRESKA( playerid, "Igracu prvo morate staviti lisice." );
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				format( globalstring, sizeof( globalstring ), "* %s vas vuce.", ImeIgraca( playerid ) );
				SendClientMessagee( igrac, SVETLOPLAVA, globalstring );
				format( globalstring, sizeof( globalstring ), "* Vucete %s.", ImeIgraca( igrac ) );
				SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
				format( globalstring, sizeof( globalstring ), "* %s vuce %s.", ImeIgraca( playerid ) ,ImeIgraca( igrac ) );
				PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
				DragedPlayerID[ playerid ] = igrac;
				Draged[ igrac ] = playerid;
				DragTimer[ playerid ] = SetTimerEx( "Vuci", 800, true, "i", playerid, 1 );
				
			} else return GRESKA( playerid, "Igrac nije pored vas." );
		}
	} else return GRESKA( playerid, "Pogresan ID igraca." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pusti( playerid, params[] )
{
	new igrac;
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( sscanf( params, "u", igrac ) )
	{
		SendUsageMessage( playerid, "/pusti [ ID/Ime ]");
		return 1;
	}
	if( igrac != INVALID_PLAYER_ID )
	{
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac == playerid ) return GRESKA( playerid, "Ne mozete vuci sami sebe." );
			if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
			{
				if( igrac == DragedPlayerID[ playerid ] )
				{
					format( globalstring, sizeof( globalstring ), "%s vas je pustio.", ImeIgraca( playerid ) );
					SendClientMessagee( igrac, -1, globalstring );
					format( globalstring, sizeof( globalstring ), "Pustili ste %s.", ImeIgraca( igrac ) );
					SendClientMessagee( playerid, -1, globalstring );
					Dimi_KillTimer( DragTimer[ playerid ] );
					DragedPlayerID[ playerid ] = -1;
					Draged[ igrac ] = -1;
					
				} else return GRESKA( playerid, "Ne vucete tog igraca.");
			} else return GRESKA( playerid, "Igrac nije pored vas." );
		}
	} else return GRESKA( playerid, "Pogresan ID igraca." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pokaziznacku( playerid, params[] )
{
	new id = PlayerInfo[ playerid ][ xClan ], igrac;
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false )  return GRESKA( playerid, "Niste na duznosti tako da nemate znacku kod sebe." );
	if( sscanf( params, "u", igrac ) )
	{
		SendUsageMessage( playerid, "/pokaziznacku [ ID/Ime ]");
		return 1;
	}
	if( igrac != INVALID_PLAYER_ID )
	{
		if( IsPlayerConnected( igrac ) )
		{
			if( IsPlayerNearPlayer( 3.0, playerid, igrac ) )
			{
				format( globalstring, sizeof( globalstring ), "* %s je %s %s.", ImeIgraca( playerid ), OI[ id ][ oPreFix ], getOrgRank( playerid, id ) );
				SendClientMessagee( igrac, 0x00D900C8, globalstring );
				format( globalstring, sizeof( globalstring ), "* %s podize ruku i pokazuje svoju znacku %s.", ImeIgraca( playerid ), ImeIgraca( igrac ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetPlayerAttachedObject( playerid, OBJECT_SLOT_BADGE, 1247, 6, 0.1, 0.05, 0, 0, 0, 0, 0.5, 0.5, 0.5 );
				SetTimerEx( "RemoveBadge", 3000, 0, "i", playerid );
				ApplyAnimation( playerid, "DEALER", "shop_pay", 4.1, 0, 0, 0, 0, 0 );
				
			} else GRESKA( playerid, "Taj igrac nije blizu tebe !");
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:duty( playerid, params[] )
{
	new id = PlayerInfo[ playerid ][ xClan ];
	if( GetFactionType( playerid )  != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, OI[ id ][ oDutyPoint ][ 0 ], OI[ id ][ oDutyPoint ][ 1 ], OI[ id ][ oDutyPoint ][ 2 ] ) ) return GRESKA( playerid, "Niste u blizini mjesta uzimanja opreme!" );
	if( PlayerInfo[ playerid ][ xRank ] == 0 ) return GRESKA( playerid, "Suspendovani ste." );
	if( PoliceDuty[ playerid ] == false )
	{
		PoliceDuty[ playerid ] = true;
		format( globalstring, sizeof( globalstring ), "HQ: %s se prijavio na duznost **", ImeIgraca( playerid ) );
		OrgPoruka( id, 0x2641FEAA, globalstring );
		format( globalstring, sizeof( globalstring ), "* %s %s uzima znacku i opremu iz ormarica.", getOrgRank( playerid, PlayerInfo[ playerid ][ xClan ] ), ImeIgraca( playerid ) );
		PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
		SetPlayerColor( playerid, 0x2641FE00 );
	}
	else if( PoliceDuty[ playerid ] == true )
	{
		PoliceDuty[ playerid ] = false;
		ResetAllWeapons( playerid );
		Dimi_SetPlayerArmour( playerid, 0 );
		BrojLisica[ playerid ] = 0;
		Dimi_SetPlayerArmour( playerid, 0 );
		Dimi_SetPlayerHealth( playerid, 75 );
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
		format( globalstring, sizeof( globalstring ), "HQ: %s se odjavio sa duznosti **", ImeIgraca( playerid ) );
		OrgPoruka( id, 0x2641FEAA, globalstring );
		format( globalstring, sizeof( globalstring ), "* %s vraca znacku i opremu u ormaric.", ImeIgraca( playerid ) );
		PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
		SetPlayerColor( playerid, 0xFFFFFF00 );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:databaza( playerid, params[] )
{
	new vehicleid = GetPlayerVehicleID( playerid ), string[ 128 ];
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Niste na duznosti!");
	if( IsPlayerInRangeOfPoint( playerid, 2, 237.1855,123.7179,1021.4188 )  || IsPlayerInRangeOfPoint( playerid, 2, 222.3049,1746.9291,-37.4751 ))
	{
		if( GetPVarInt( playerid, "Computer" ) == 0 )
		{
			Police_TVTDControl( playerid, true );
			SelectTextDraw( playerid, 0x5D9FCEFF );
			SetPVarInt( playerid, "Computer", 1 );
			SendClientMessagee( playerid, BELA, "Koristite /databaza da ugasite databazu!" );
			format( string, sizeof string, "%s se logovao u databazu %s !", ImeIgraca( playerid ), OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ] );
			OrgPorukaLeader( PlayerInfo[ playerid ][ xClan ], 0xD2CFCFFF, string );
			return true;
		}
		if( GetPVarInt( playerid, "Computer" ) == 1 )
		{
			Police_TVTDControl( playerid, false );
			CancelSelectTextDraw( playerid );
			SetPVarInt( playerid, "Computer", 0 );
			format( string, sizeof string, "%s se izlogovao iz databaze %s !", ImeIgraca( playerid ), OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ] );
			OrgPorukaLeader( PlayerInfo[ playerid ][ xClan ], 0xD2CFCFFF, string );
			return true;
		}
	}
	else
	{
		if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
		{
			if( GetPVarInt( playerid, "Computer" ) == 0 )
			{
				Police_TVTDControl( playerid, true );
				SelectTextDraw( playerid, 0x5D9FCEFF );
				SetPVarInt( playerid, "Computer", 1 );
				SendClientMessagee( playerid, BELA, "Koristite '/databaza' da ugasite databazu!" );
				return true;
			}
			if( GetPVarInt( playerid, "Computer" ) == 1 )
			{
				Police_TVTDControl( playerid, false );
				CancelSelectTextDraw( playerid );
				SetPVarInt( playerid, "Computer", 0 );
				return true;
			}
		} else GRESKA( playerid, "Niste kod kompjutera MUP-a / SAJ-a!" );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:d( playerid, params[] )
{
	if(PlayerInfo[playerid][xVokiToki] == 0) return greska(playerid,"Vi nemate voki-toki, kupite ga na trafici.");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete pisati dok ste u zatvoru / ALKATRAZ.");
	new poruka[ 128 ], string[ 234 ];
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if(sscanf(params, "s[128]", poruka)) return SendUsageMessage( playerid, "/d [Text]");
	if( GetFactionType( playerid )  != ORG_TIP_PD && GetFactionType( playerid )  != ORG_TIP_MD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	for( new id = 1; id < MAX_ORG; id++)
	{
		if( OI[ id ][ oTip ] == ORG_TIP_PD || OI[ id ][ oTip ] == ORG_TIP_MD )
		{
			if( PlayerInfo[ playerid ][ xRank ] == 1) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank1 ], ImeIgraca( playerid ), poruka );
			else if( PlayerInfo[ playerid ][ xRank ] == 2) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank2 ], ImeIgraca( playerid ), poruka );
			else if( PlayerInfo[ playerid ][ xRank ] == 3) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank3 ], ImeIgraca( playerid ), poruka );
			else if( PlayerInfo[ playerid ][ xRank ] == 4) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank4 ], ImeIgraca( playerid ), poruka );
			else if( PlayerInfo[ playerid ][ xRank ] == 5) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank5 ], ImeIgraca( playerid ), poruka );
			else if( PlayerInfo[ playerid ][ xRank ] == 6) format(string, sizeof string, "** [%s] %s - %s: %s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank6 ], ImeIgraca( playerid ), poruka );
			OrgPoruka1( id, ROZA, string );
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:r( playerid, params[] )
{
	if(PlayerInfo[playerid][xVokiToki] == 0) return greska(playerid,"Vi nemate voki-toki, kupite ga na trafici.");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete pisati dok ste u zatvoru / ALKATRAZ.");
	new poruka[ 128 ], string[ 234 ];
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if(sscanf(params, "s[128]", poruka)) return SendUsageMessage( playerid, "/r [Text]");
	if( GetFactionType( playerid )  != ORG_TIP_PD && GetFactionType( playerid )  != ORG_TIP_MD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PlayerInfo[ playerid ][ xRank ] == 1) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank1 ], ImeIgraca( playerid ), poruka );
	else if( PlayerInfo[ playerid ][ xRank ] == 2) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank2 ], ImeIgraca( playerid ), poruka );
	else if( PlayerInfo[ playerid ][ xRank ] == 3) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank3 ], ImeIgraca( playerid ), poruka );
	else if( PlayerInfo[ playerid ][ xRank ] == 4) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank4 ], ImeIgraca( playerid ), poruka );
	else if( PlayerInfo[ playerid ][ xRank ] == 5) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank5 ], ImeIgraca( playerid ), poruka );
	else if( PlayerInfo[ playerid ][ xRank ] == 6) format(string, sizeof string, "** %s | %s - %s: "col_white"%s, prijem. **", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank6 ], ImeIgraca( playerid ), poruka );
	OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xD2CFCFFF, string );

	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( poruka, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, poruka );
			AdminPoruka( 0x808000AA, globalstring );
			return 1;
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:portable( playerid, params[] )
{
	if( IsPlayerConnected( playerid ) )
	{
		if( GetFactionType( playerid )  != ORG_TIP_HITM ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
		ShowPlayerDialog( playerid, dialog_PORTABLE, DSL, D_NASLOV, "Kontrakti\nDaj metu\nRankovi\nNaruci", D_ODABERI, D_ODUSTANI );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:nadji( playerid, params[] )
{
	if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
	if( IsPlayerConnected( playerid ) )
	{
		if( GetFactionType( playerid ) == ORG_TIP_HITM || GetFactionType( playerid ) == ORG_TIP_PD || GetFactionType( playerid ) == ORG_TIP_MD )
		{
			if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas jedan upaljen CP, prvo ga ugasi /gpsoff." );
			if( SearchNadji[ playerid ] != -1 )
			{
				SearchNadji[ playerid ] = -1;
				Dimi_DisablePlayerCheckpoint( playerid);
			}
			else if( SearchNadji[ playerid ] == -1 )
			{
				new ID;
				if( sscanf( params, "u", ID ) ) return SendUsageMessage( playerid, "/nadji [ ID Igraca/Ime ]");
				if( ID == INVALID_PLAYER_ID ) return GRESKA(playerid, "Pogresan ID!");
				if( PlayerInfo[ ID ][ xAdmin ] > 0 ) return GRESKA(playerid, "Ne mozes naci Admina." );
				if( PlayerInfo[ ID ][ xHelper ] > 0 ) return GRESKA(playerid, "Ne mozes naci GM-a." );
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos( ID, X, Y, Z );
				Dimi_SetPlayerCheckpoint( playerid, X, Y, Z, 6 );
				SearchNadji[ playerid ] = ID;

			}

		}
		else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:naruciubistvo( playerid,params[])
{
	return cmd_contract(playerid,params);
}
CMD:contract( playerid, params[] )
{
	if( IsPlayerConnected( playerid ) )
	{
		new ID, amount;
		if( sscanf(params,"ui", ID, amount)) return SendUsageMessage( playerid, "/naruciubistvo [ID Igraca/Ime] [ novac ]");
		if( ID == INVALID_PLAYER_ID ) return GRESKA(playerid, "Pogresan ID!");
		if( amount < 1000 || amount > 200000 ) return GRESKA( playerid, "Cena mete mora biti minimum $1000, ili maksimum $200000!");
		if( amount > PlayerInfo[ playerid ][ xNovac ] ) return GRESKA( playerid, "Nemate toliko novca sa sobom.");
		if( PlayerInfo[ playerid ][ xLevel ] < 5 ) return GRESKA( playerid, "Morate biti level 5." );
		if( PlayerInfo[ ID ][ xLevel ] < 5 ) return GRESKA( playerid, "Igrac mora biti level 5." );
		if( PlayerInfo[ ID ][ xAdmin ] >= 1  ) return GRESKA( playerid, "Ne mozete to uraditi na Admin TEAM." );
		if( PlayerInfo[ ID ][ xHelper ] >= 1  ) return GRESKA( playerid, "Ne mozete na GM-a." );
		if( IsPlayerConnected( ID ) )
		{
			if( ID != INVALID_PLAYER_ID )
			{
				if( OI[ PlayerInfo[ ID ][ xClan ] ][ oTip ] == ORG_TIP_HITM ) return GRESKA( playerid, "* Ne mozete naruciti ubistvo clanova agencije !");
				if( ID == playerid ) return GRESKA( playerid, "* Ne mozete naruciti svoje ubistvo!");

				if( amount > 0 && PlayerInfo[ playerid ][ xNovac ] >= amount )
				{
					DajIgracuNovac( playerid, -amount );
					PlayerInfo[ ID ][ xHitmenCena ] += amount;
					format( globalstring, sizeof( globalstring ), "* Narucili ste ubistvo %s-a, za "col_white"$%d.",ImeIgraca( ID ), amount);
					SendClientMessagee(playerid, BELA, globalstring );
					PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0 );
					for( new id = 1; id < MAX_ORG; id++)
					{
						if( OI[ id ][ oTip ] == ORG_TIP_HITM )
						{
							format( globalstring, sizeof( globalstring ), "%s je narucio ubistvo %s-a, za $%d.", ImeIgraca( playerid ), ImeIgraca( ID ), amount);
							OrgPoruka( id, ZUTA, globalstring );
						}
					}
				}
				else
				{
					GRESKA( playerid, "Nepravilan iznos transakcije.");
				}
			}
		}
		else
		{
			GRESKA( playerid, "Pogresan ID" );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:clanovi( playerid, params[] )
{
	new string[ 128 ], OrgID;
	if( PlayerInfo[ playerid ][ xClan ] != 0 ) OrgID = PlayerInfo[ playerid ][ xClan ];
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	SendClientMessagee( playerid, NARANDZASTA, "|----------------Clanovi Online----------------|");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected( i ) && PlayerLogged[ i ] == true && PlayerInfo[ i ][ xClan ] == OrgID )
		{
			format( string, sizeof( string ), "%s[%d] | %s", getOrgRank( i, PlayerInfo[ i ][ xClan ] ), PlayerInfo[ i ][ xRank ], ImeIgraca( i ) );
			SendClientMessagee( playerid, NARANDZASTA, string);
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:f( playerid, params[] ) 
{
	if(PlayerInfo[playerid][xVokiToki] == 0) return greska(playerid,"Vi nemate voki-toki, kupite ga na trafici.");
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete pisati dok ste u zatvoru / ALKATRAZ.");
	new poruka[ 128 ], string[ 234 ];
	if( sscanf(params, "s[128]", poruka)) return SendUsageMessage( playerid, "/f [Text]");
	for( new b = 0; b < sizeof( ZabranjeneReci ); b++) {
		if( strfind( poruka, ZabranjeneReci[ b ], true ) != -1 ) {
			format( globalstring, sizeof( globalstring ), "[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, poruka );
			AdminPoruka( 0x808000AA, globalstring );
		}
	}
	if( PlayerInfo[ playerid ][ xLider ] > 0 || PlayerInfo[ playerid ][ xClan ] > 0) {
		if( PlayerInfo[ playerid ][ xRank ] == 1) format(string, sizeof string, "(%s) %s %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank1 ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 2) format(string, sizeof string, "(%s) %s - %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank2 ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 3) format(string, sizeof string, "(%s) %s - %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank3 ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 4) format(string, sizeof string, "(%s) %s - %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank4 ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 5) format(string, sizeof string, "(%s) %s - %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank5 ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 6) format(string, sizeof string, "(%s) LIDER PORUKA | %s - %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], OI[ PlayerInfo[ playerid ][ xClan ]][ oRank6 ], ImeIgraca( playerid ), poruka );
		OrgPoruka( PlayerInfo[ playerid ][ xClan ], NARANDZASTA, string ); }
	else { GRESKA( playerid, "Niste u mogucnosti koristiti ovu komandu" ); return true; }
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
// Firma System
CMD:kupifirmu( playerid, params[] )
{
	new id = GetNearestBussines( playerid );
	if( id == -1 || id == 0 ) return GRESKA( playerid, "Niste blizu firme!" );
	if( BussinesInfo[ id ][ bOwned ] != 0 || BussinesInfo[ id ][ bPrice ] == 0) return GRESKA( playerid, "Ova firma se ne prodaje!");
	if( PlayerInfo[ playerid ][ xFirmaID ] != -1 ) return GRESKA( playerid, "Vec posedujes firmu!");
	if( PlayerInfo[ playerid ][ xNovac ] < BussinesInfo[ id ][ bPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca za kupovinu Firme!");
	if( PlayerInfo[ playerid ][ xLevel ] < BussinesInfo[ id ][ bLevel ] ) return SendClientMessageEx( playerid, CRVENA, "Morate biti level %d+ da bi ste kupili firmu.", BussinesInfo[ id ][ bLevel ] );
	PlayerInfo[ playerid ][ xFirmaID ] = id;
	DajIgracuNovac( playerid, -BussinesInfo[ id ][bPrice] );
	BussinesInfo[ id ][ bLocked ] = 0;
	BussinesInfo[ id ][ bNeaktivnost ] = 0;
	BussinesInfo[ id ][ bFacture ] = 100;
	BussinesInfo[ id ][ bOwned ] = 1;
	strmid( BussinesInfo[ id ][ bOwner], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255);
	Bussines_Refresh( id );
	SaveBussines( id );
	SavePlayer( playerid );
	SendInfoMessage( playerid, "Kupili ste firmu, cestitamo!" );
	//SendClientMessagee( playerid, -1, "UKOLIKO VAM FAKTURE DODJU NA 0, FIRMA CE SE PRODATI AUTOMATSKI!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:firma( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xFirmaID ] == -1 ) return GRESKA( playerid, "Ne posedujete firmu!" );
	if( strcmp( ImeIgraca( playerid ), BussinesInfo[ PlayerInfo[ playerid ][ xFirmaID ] ][ bOwner ], true) == 0 )
	{
		ShowPlayerDialog( playerid, dialog_FIRMA, DSL, D_NASLOV, "Informacije\nPromeni Ime\nZakljucaj/Otkljucaj Firmu\nPodigni Novac\nOstavi Novac\n{F81414}Prodaj Drzavi\n{F81414}Prodaj Igracu\nUbaci fakture", D_ODABERI, D_ODUSTANI );
	}
	else
	{
		SendClientMessagee( playerid, ANTICHEAT, "{FF0000}| AC |:"col_white" Ova firma nije u vasem vlasnistvu, obratite se na forumu ako mislite je greska." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:namestaj( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 ) { }
	else if( PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 ) { }
	else if( PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) { }
	else return GRESKA( playerid, "Ne mozes koristiti ovu komandu jer nemas nijednu imovinu." );
	
	new item[32];
	if( sscanf( params, "s[32] ", item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/namestaj [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] kupi, postavi, izmeni, izbrisi");
		SendClientMessagee( playerid, BELA, "[Brisanje] Brisanjem ne dobijate nikakvu naknadu i brise najblizi objekt.");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "kupi",true) == 0)
	{
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1004.7539, -1610.4541, 14.5139 ) ) return GRESKA( playerid, "Morate biti u prodavnici namestaja da bi koristili ovu komandu." );
		if( nekokupujenamestaj > 0 ) return GRESKA( playerid, "Neko vec kupuje namestaj!" );
		if( PlayerInfo[ playerid ][ xWanted ] > 0 ) return GRESKA( playerid, "Ne mozes kupovati kad imas Wanted Level." );
		nekokupujenamestaj = 1;
		KupujeNamestaj[ playerid ] = 1;
		TogglePlayerControllable( playerid, false);
		ObjektTDControl( playerid, true );
		ListaoObjekte[ playerid ] = 0;
		new i = ListaoObjekte[ playerid ];
		DestroyObject( glavniobjekt );
		glavniobjekt = CreateObject( OBPR[ i ][ 0 ], OBPR1[ i ][ 0 ], OBPR1[ i ][ 1 ], OBPR1[ i ][ 2 ],  OBPR1[ i ][ 3 ], OBPR1[ i ][4], OBPR1[ i ][5] );
		format( globalstring, sizeof( globalstring ), "cena: ~w~%d$", OBPR[ i ][ 1 ] );
		PlayerTextDrawSetString( playerid, ObjektTD[ playerid ][ 1 ], globalstring );
		InterpolateCameraPos( playerid, 1004.3580, -1605.0876, 16.2206, 985.7255, -1604.5812, 16.2206, 5000);
		InterpolateCameraLookAt( playerid, 1004.3308, -1606.0867, 15.9106, 985.6983, -1605.5802, 15.9106, 5000);
		SelectTextDraw( playerid, 0x5D9FCEFF);
		return 1;
	}
	else if( strcmp( item, "postavi",true) == 0)
	{
		if( inProperty[ playerid ] == -1 ) return GRESKA( playerid, "Niste u vasoj kuci/stanu/vikendici." );
		if( strcmp( ImeIgraca( playerid ), II[ inProperty[ playerid ] ][ iOwner ], true) == 0 )
		{
			new bandanas[10];
			bandanas[ 0 ] = PlayerInfo[ playerid ][ xObject ][ 0 ];
			bandanas[ 1 ] = PlayerInfo[ playerid ][ xObject ][ 1 ];
			bandanas[ 2 ] = PlayerInfo[ playerid ][ xObject ][ 2 ];
			bandanas[ 3 ] = PlayerInfo[ playerid ][ xObject ][ 3 ];
			bandanas[4] = PlayerInfo[ playerid ][ xObject ][ 4 ];
			bandanas[5] = PlayerInfo[ playerid ][ xObject ][ 5 ];
			bandanas[6] = PlayerInfo[ playerid ][ xObject ][ 6 ];
			bandanas[7] = PlayerInfo[ playerid ][ xObject ][ 7 ];
			bandanas[8] = PlayerInfo[ playerid ][ xObject ][ 8 ];
			bandanas[9] = PlayerInfo[ playerid ][ xObject ][ 9 ];
			ShowModelSelectionMenuEx( playerid, bandanas, 10, "Furniture", 6, 0.0, 0.0, 0.0);
		} else GRESKA( playerid, "Ova imovina nije vasa.." );
		
		return 1;
	}
	else if( strcmp( item, "izmeni",true) == 0)
	{
		if( inProperty[ playerid ] == -1 ) return GRESKA( playerid, "Niste u vasoj kuci/stanu/vikendici." );
		if( strcmp( ImeIgraca( playerid ), II[ inProperty[ playerid ] ][ iOwner ], true) == 0 )
		{
			new hid = inProperty[ playerid ];
			if( GetNearestFurniture( playerid, inProperty[ playerid ] ) == -1 ) return GRESKA( playerid, "Nema objekta u blizini." );
			new i = GetNearestFurniture( playerid, inProperty[ playerid ] );
			//DestroyDynamicObject( Furniture[ hid ][ i ][ f_Object ] );
			//Furniture[ hid ][ i ][ f_Object ] = CreateDynamicObject( Furniture[ hid ][ i ][ f_Model ], Furniture[ hid ][ i ][ f_X ], Furniture[ hid ][ i ][ f_Y ], Furniture[ hid ][ i ][ f_Z ], Furniture[ hid ][ i ][ f_rX ], Furniture[ hid ][ i ][ f_rY ], Furniture[ hid ][ i ][ f_rZ ], II[ hid ][ iVW ], II[ hid ][ iInterior ], -1, 200.0 );
			PlayerEditObject( playerid, Furniture[ hid ][ i ][ f_Object ] );
			SendClientMessagee( playerid, UGBOJA, "Pozicioniraj namestaj.");
			SendClientMessagee( playerid, BELA, "Koristite ~k~~PED_SPRINT~ da bi pomerali kameru." );
			ObjectEdition_TYPE[ playerid ] = i;

		} else GRESKA( playerid, "Ova imovina nije vasa.." );
		
		return 1;
	}
	else if( strcmp( item, "izbrisi",true) == 0)
	{
		if( inProperty[ playerid ] == -1 ) return GRESKA( playerid, "Niste u vasoj kuci/stanu/vikendici." );
		if( strcmp( ImeIgraca( playerid ), II[ inProperty[ playerid ] ][ iOwner ], true) == 0 )
		{
			if( GetNearestFurniture( playerid, inProperty[ playerid ] ) == -1 ) return GRESKA( playerid, "Nema objekta u blizini." );
			new hid = inProperty[ playerid ]; new i = GetNearestFurniture( playerid, inProperty[ playerid ] );
			Furniture[ hid ][ i ][ f_Model ] = 0;
			DestroyDynamicObject( Furniture[ hid ][ i ][ f_Object ] );
			SaveFurniture( hid );
			SendClientMessagee( playerid, UGBOJA, "Namestaj obrisan" );

		} else GRESKA( playerid, "Ova imovina nije vasa.." );
		
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/namestaj [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] kupi, postavi, izmeni, izbrisi");
		SendClientMessagee( playerid, BELA, "[Brisanje] Brisanjem ne dobijate nikakvu naknadu i brise najbliziji objekt.");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:imovina( playerid, params[] )
{
	/*if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] == -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] == -1 ) return GRESKA( playerid, "Nemate kucu/stan/vikendicu!");
	ShowPlayerDialog( playerid, dialog_PROPERTYLIST, DSL, D_NASLOV, "Imovina 1\nImovina 2\nImovina 3", D_ODABERI, D_ODUSTANI );*/

	//if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] == -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] == -1 ) return GRESKA( playerid, "Nemate kucu/stan/vikendicu!");
	new string[ 128 ];
	format( string, sizeof( string ),"%s\n%s\n%s",ImeIgraceveImovine(PlayerInfo[ playerid ][ xProperty ][ 0 ]),ImeIgraceveImovine(PlayerInfo[ playerid ][ xProperty ][ 1 ]),ImeIgraceveImovine(PlayerInfo[ playerid ][ xProperty ][ 2 ]) );
	ShowPlayerDialog( playerid, dialog_PROPERTYLIST, DSL, D_NASLOV, string, "Odaberi", "Izlaz" );
	
	
	return 1;
}


//////////////////////////////////////////////////////////////////////////////////
CMD:kupikucu( playerid, params[] )
{
	if( GetNearestHouse( playerid ) == -1 ) return GRESKA( playerid, "Niste u blizini kuce na prodaju!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec imas 3 kuce/stana/vikendice!");
	if( PlayerInfo[ playerid ][ xNovac ] < II[ GetNearestHouse( playerid ) ][ iPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca da kupite kucu!" );
	if( II[ GetNearestHouse( playerid ) ][ iOwned ] != 0 ) return GRESKA( playerid, "Ta kuca se ne prodaje!" );
	if( PlayerInfo[ playerid ][ xLevel ] < II[ GetNearestHouse( playerid ) ][ iLevel ] ) return GRESKA( playerid, "Nemate dovoljan level za ovu kucu!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 0 ] = GetNearestHouse( playerid );}
	else if( PlayerInfo[ playerid ][ xProperty ][ 1 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 1 ] = GetNearestHouse( playerid ); }
	else if( PlayerInfo[ playerid ][ xProperty ][ 2 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 2 ] = GetNearestHouse( playerid ); }
	DajIgracuNovac( playerid, -II[ GetNearestHouse( playerid ) ][ iPrice ] );
	II[ GetNearestHouse( playerid ) ][ iOwned ] = 1;
	II[ GetNearestHouse( playerid ) ][ iNeaktivnost ] = 0;
	strmid( II[ GetNearestHouse( playerid ) ][ iOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255 );
	PlayerPlaySound( playerid, 1058, 0, 0, 0 );
	SendClientMessageEx( playerid, UGBOJA, "Kupili ste kucu i platili je %d$.", II[ GetNearestHouse( playerid ) ][ iPrice ] );
	SavePlayer( playerid ); PropertyRefresh( GetNearestHouse( playerid ) ); SaveProperty( GetNearestHouse( playerid ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupistan( playerid, params[] )
{
	if( GetNearestStan( playerid ) == -1 ) return GRESKA( playerid, "Niste u blizini stana na prodaju!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec imas 3 kuce/stana/vikendice!");
	if( PlayerInfo[ playerid ][ xNovac ] < II[ GetNearestStan( playerid ) ][ iPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca da kupite stan!" );
	if( II[ GetNearestStan( playerid ) ][ iOwned ] != 0 ) return GRESKA( playerid, "Taj stan se ne prodaje!" );
	if( PlayerInfo[ playerid ][ xLevel ] < II[ GetNearestStan( playerid ) ][ iLevel ] ) return GRESKA( playerid, "Nemate dovoljan level za ovaj stan!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 0 ] = GetNearestStan( playerid );}
	else if( PlayerInfo[ playerid ][ xProperty ][ 1 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 1 ] = GetNearestStan( playerid ); }
	else if( PlayerInfo[ playerid ][ xProperty ][ 2 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 2 ] = GetNearestStan( playerid ); }
	DajIgracuNovac( playerid, -II[ GetNearestStan( playerid ) ][ iPrice ] );
	II[ GetNearestStan( playerid ) ][ iOwned ] = 1;
	II[ GetNearestStan( playerid ) ][ iNeaktivnost ] = 0;
	strmid( II[ GetNearestStan( playerid ) ][ iOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255 );
	PlayerPlaySound( playerid, 1058, 0, 0, 0 );
	SendClientMessageEx( playerid, UGBOJA, "Kupili ste stan i platili ga %d$.", II[ GetNearestStan( playerid ) ][ iPrice ] );
	SavePlayer( playerid ); PropertyRefresh( GetNearestStan( playerid ) ); SaveProperty( GetNearestStan( playerid ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupivikendicu( playerid, params[] )
{

	//return SendInfoMessage(playerid,"Trenutno nije moguce kupiti vikendicu, razlog - sistem vikendica je u izradi!");
	if( GetNearestVikendica( playerid ) == -1 ) return GRESKA( playerid, "Niste u blizini vikendice na prodaju!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec imas 3 kuce/stana/vikendice!");
	if( PlayerInfo[ playerid ][ xNovac ] < II[ GetNearestVikendica( playerid ) ][ iPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca da kupite vikendicu!" );
	if( II[ GetNearestVikendica( playerid ) ][ iOwned ] != 0 ) return GRESKA( playerid, "Ta vikendica se ne prodaje!" );
	if( PlayerInfo[ playerid ][ xLevel ] < II[ GetNearestVikendica( playerid ) ][ iLevel ] ) return GRESKA( playerid, "Nemate dovoljan level za ovu vikendicu!" );
	if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 0 ] = GetNearestVikendica( playerid );}
	else if( PlayerInfo[ playerid ][ xProperty ][ 1 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 1 ] = GetNearestVikendica( playerid ); }
	else if( PlayerInfo[ playerid ][ xProperty ][ 2 ] == -1 ) { PlayerInfo[ playerid ][ xProperty ][ 2 ] = GetNearestVikendica( playerid ); }
	DajIgracuNovac( playerid, -II[ GetNearestVikendica( playerid ) ][ iPrice ] );
	II[ GetNearestVikendica( playerid ) ][ iOwned ] = 1;
	II[ GetNearestVikendica( playerid ) ][ iNeaktivnost ] = 0;
	strmid( II[ GetNearestVikendica( playerid ) ][ iOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255 );
	PlayerPlaySound( playerid, 1058, 0, 0, 0 );
	SendClientMessageEx( playerid, UGBOJA, "Kupili ste vikendicu i platili je %d$.", II[ GetNearestVikendica( playerid ) ][ iPrice ] );
	SavePlayer( playerid ); PropertyRefresh( GetNearestVikendica( playerid ) ); SaveProperty( GetNearestVikendica( playerid ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupihotel( playerid, params[] )
{
	if( GetNearestHotel( playerid ) == -1 ) return GRESKA( playerid, "Nema hotela u vasoj blizini!" );
	if( PlayerInfo[ playerid ][ xHotelID ] != -1  ) return GRESKA( playerid, "Vec posedujes hotel!");
	if( PlayerInfo[ playerid ][ xNovac ] < hotelInfo[ GetNearestHotel( playerid ) ][ hPrice ] ) return GRESKA( playerid, "Nemate dovoljno novca!" );
	if( hotelInfo[ GetNearestHotel( playerid ) ][ hOwned ] != 0 ) return GRESKA( playerid, "Ovaj hotel nije na prodaju." );
	if( PlayerInfo[ playerid ][ xLevel ] < hotelInfo[ GetNearestHotel( playerid ) ][ hLevel ] ) return SendClientMessageEx( playerid, CRVENA, "Da bi ste kupili ovaj hotel morate biti level %d+.", hotelInfo[ GetNearestHotel( playerid ) ][ hLevel ] );
	PlayerInfo[ playerid ][ xHotelID ] = GetNearestHotel( playerid );
	DajIgracuNovac( playerid, -hotelInfo[ GetNearestHotel( playerid ) ][ hPrice ] );
	hotelInfo[ GetNearestHotel( playerid ) ][ hPorez ] = 0; hotelInfo[ GetNearestHotel( playerid ) ][ hVrednostPoreza ] = 0;
	hotelInfo[ GetNearestHotel( playerid ) ][ hOwned ] = 1;
	strmid( hotelInfo[ GetNearestHotel( playerid ) ][ hOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255 );
	PlayerPlaySound( playerid, 1058, 0, 0, 0 );
	SendClientMessagee( playerid, UGBOJA, "Kupili ste hotel." );
	SavePlayer( playerid ); HotelRefresh( GetNearestHotel( playerid ) ); SaveHotel( GetNearestHotel( playerid ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hotel( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xHotelID ] == -1 ) return GRESKA( playerid, "Ne posedujete hotel!" );
	if( strcmp( ImeIgraca( playerid ), hotelInfo[ PlayerInfo[ playerid ][ xHotelID ] ][ hOwner ], true) == 0 )
	{
		ShowPlayerDialog( playerid, dialog_HOTEL, DSL, D_NASLOV, "Informacije\nNajam\nIzbaci gosta\nPodigni Novac\nOstavi Novac\nOtkljucaj/Zakljucaj\n{F81414}Prodaj Drzavi\n{F81414}Prodaj Igracu", D_ODABERI, D_ODUSTANI );
	} else GRESKA( playerid, "Ovo nije vas hotel.." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:iznajmisobu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xHotelRoom ] != -1 ) return GRESKA( playerid, "Vec imas iznajmljenu sobu." );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2217.3083, -1146.4053, 1025.7969 ) ) return GRESKA( playerid, "Nisi na salteru u hotelu." );
	if( inHotel[ playerid ] == -1 ) return GRESKA( playerid, "Nisi na salteru u hotelu." );
	if( PlayerInfo[ playerid ][ xNovac ] < hotelInfo[ inHotel[ playerid ] ][ hRoomPrice ] ) return SendClientMessageEx( playerid, -1, "Nemate dovoljno novca(%d$) za najam.", hotelInfo[ inHotel[ playerid ] ][ hRoomPrice ] );
	if( PlayerInfo[ playerid ][ xLevel ] < 2 ) return GRESKA( playerid, "Da bi rentao sobu moras biti level 2+." );

	new hid = inHotel[ playerid ];
	if( !strcmp( hotelInfo[ hid ][ hGuest_1 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_1 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_2 ], "Niko", true ) )
	   {
		strmid( hotelInfo[ hid ][ hGuest_2 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_3 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_3 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_4 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_4 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_5 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_5 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_6 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_6 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_7 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_7 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_8 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_8 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_9 ], "Niko", true ) ) {
		strmid( hotelInfo[ hid ][ hGuest_9 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else if( !strcmp( hotelInfo[ hid ][ hGuest_10 ], "Niko", true ) )
	{
		strmid( hotelInfo[ hid ][ hGuest_10 ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), MAX_PLAYER_NAME  );
	}
	else return SendClientMessagee( playerid, BELA, "Recepcionarka: Zao nam je ali sve su sobe iznajmljene." );
	
	PlayerInfo[ playerid ][ xHotelRoom ] = hid;
	DajIgracuNovac( playerid, -hotelInfo[ hid ][ hRoomPrice ] );
	hotelInfo[ hid ][ hMoney ] += hotelInfo[ hid ][ hRoomPrice ];
	SendClientMessagee( playerid, BELA, "Recepcionarka: Evo vaseg kljuca, uzivajte." );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:odjavisobu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xHotelRoom ] == -1 ) return GRESKA( playerid, "Nemate iznajmljenu sobu." );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2217.3083, -1146.4053, 1025.7969 ) ) return GRESKA( playerid, "Nisi na salteru u hotelu." );
	if( inHotel[ playerid ] == -1 ) return GRESKA( playerid, "Nisi na salteru u hotelu." );

	new hid = inHotel[ playerid ];
	if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_1 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_1 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_2 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_2 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_3 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_3 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_4 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_4 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_5 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_5 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_6 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_6 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_7 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_7 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_8 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_8 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_9 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_9 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else if( strcmp( ImeIgraca( playerid ), hotelInfo[ hid ][ hGuest_10 ], true ) == 0)
	{
		strmid( hotelInfo[ hid ][ hGuest_10 ], "Niko", 0, strlen( "Niko" ), MAX_PLAYER_NAME );
	}
	else return GRESKA( playerid, "Niste iznajmili sobu u ovom hotelu." );
	
	PlayerInfo[ playerid ][ xHotelRoom ] = -1;
	SendClientMessagee( playerid, BELA, "Recepcionarka: Uspjesno ste odjavili sobu, dodjite nam opet." );
	SaveHotel( hid );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:breakdoor( playerid, params[] )
{
	for( new i = 1; i < MAX_IMOVINA; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 2, II[  i][ iEnter ][ 0 ], II[  i][ iEnter ][ 1 ], II[  i][ iEnter ][ 2 ] ) )
		{
			if( strcmp( II[ i ][ iOwner ], ImeIgraca( playerid ), false ) )
			{
				if( PlayerInfo[ playerid ][ xToolkit ] == false)
				{
					GRESKA( playerid, "Nemas alat za obijanje brava!" );
					return 1;
				}
				if( GetPVarInt( playerid, "Pokusaj") != 0 )
				{
					SendClientMessagee( playerid, CRVENA, "Vec ste u procesu provaljivanja!" );
					return 1;
				}
				if( II[ i ][ iLocked ] == 1)
				{
					if( II[ i ][ iAlarm ] == 4)
					{
						for(new h; h < MAX_PLAYERS; h++)
						{
							if( IsPlayerConnected( h ) )
							{
								if( strcmp( ImeIgraca( h ), II[ i ][ iOwner ], true) == 0 )
								{
									SendClientMessagee( h, ZUTA, "SMS: Netko vam pokusava provaliti u kucu, Vas Alarm!" );
								}
							}
						}
						for( new id = 1; id < MAX_ORG; id++)
						{
							if( OI[ id ][ oTip ] == ORG_TIP_PD )
							{
								OrgPoruka( id, 0x2641FEAA, "HQ: Svim jedinicama: Prijavio: Tihi Alarm" );
								OrgPoruka( id, 0x2641FEAA, "HQ: Zlocin: Provala u kucu    ||  Osumljiceni: Nepoznat" );
								format( globalstring, sizeof( globalstring ), "HQ: Adresa kuce: %s", II[ i ][ iAdress ] );
								OrgPoruka( id, 0x2641FEAA, globalstring);
							}
						}
					}
					if( II[ i ][ iLockLevel ] == 0)
					{
						SendClientMessagee( playerid, BELA, "Pokusavate provaliti bravu na kucnim vratima.(30 sec!)");
						SetTimerEx("Provala", 30000, 0, "i", playerid); Odbrojavanje[ playerid ] = 30;
					}
					else if( II[ i ][ iLockLevel ] == 1)
					{
						SendClientMessagee( playerid, BELA, "Pokusavate provaliti bravu na kucnim vratima.(60 sec!)");
						SetTimerEx("Provala", 60000, 0, "i", playerid); Odbrojavanje[ playerid ] = 60;
					}
					else if( II[ i ][ iLockLevel ] == 2)
					{
						SendClientMessagee( playerid, BELA, "Pokusavate provaliti bravu na kucnim vratima.(2 min!)");
						SetTimerEx("Provala", 120000, 0, "i", playerid); Odbrojavanje[ playerid ] = 120;
					}
					else if( II[ i ][ iLockLevel ] == 3)
					{
						SendClientMessagee( playerid, BELA, "Pokusavate provaliti bravu na kucnim vratima.(4 min!)");
						SetTimerEx("Provala", 240000, 0, "i", playerid); Odbrojavanje[ playerid ] = 240;
					}
					else if( II[ i ][ iLockLevel ] == 4)
					{
						SendClientMessagee( playerid, BELA, "Pokusavate provaliti bravu na kucnim vratima.(8 min!)");
						SetTimerEx("Provala", 480000, 0, "i", playerid); Odbrojavanje[ playerid ] = 480;
					}
					VremeTDControl( playerid, true );
					format( globalstring, sizeof( globalstring ), "* %s uzima alat i pokusava obiti bravu na vratima.", ImeIgraca( playerid ) );
					PorukaRadius( 15.0, playerid, globalstring, LJUBICASTA );
					TogglePlayerControllable( playerid, false );
					SetPVarInt( playerid, "Pokusaj", 1 );
					PlayerInfo[ playerid ][ xToolkit ] = false;
				}
				else
				{
					SendClientMessagee( playerid, CRVENA, "Vrata su otkljucana!");
					return 1;
				}
			}
			else
			{
				announcement( playerid, "~r~Necete valjda sami sebi razvaliti vrata?", 2000, 6);
				return 1;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prekiniobijanje( playerid, params[] )
{
	if( GetPVarInt( playerid, "BreakingLock" ) == 1 )
	{
		TogglePlayerControllable( playerid, true );
		Dimi_KillTimer( GetPVarInt( playerid, "BreakLockTimer" ) );
		Dimi_KillTimer( GetPVarInt( playerid, "breakcounttimer" ) );
		SetPVarInt( playerid, "BreakLockTimerCalled", 0 );
		SetPVarInt( playerid, "BreakingLock", 0 );
	}
	else if( GetPVarInt( playerid, "StartingVehicle" ) == 1 )
	{
		TogglePlayerControllable( playerid, true );
		Dimi_RemovePlayerFromVehicle( playerid );
		Dimi_KillTimer( GetPVarInt( playerid, "EngineStartTimer" ) );
		Dimi_KillTimer( GetPVarInt( playerid, "immobcounttimer" ) );
		SetPVarInt( playerid, "ImmobTimerCalled", 0 );
		SetPVarInt( playerid, "StartingVehicle", 0 );
	}
	else if(GetPVarInt( playerid, "Pokusaj") == 1)
	{
		TogglePlayerControllable( playerid, true );
		SetPVarInt( playerid, "Pokusaj", 0);
		Odbrojavanje[ playerid ] = 0;
		VremeTDControl( playerid, false );
		
	} else GRESKA( playerid, "Ova komanda sluzi da prekines provaljivanje!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:smashdoor( playerid, params[] )
{
	for( new i = 1; i < MAX_IMOVINA; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 2, II[  i][ iEnter ][ 0 ], II[  i][ iEnter ][ 1 ], II[  i][ iEnter ][ 2 ] ) )
		{
			if( strcmp( II[ i ][ iOwner ], ImeIgraca( playerid ), false ) )
			{
				if(GetPVarInt( playerid, "Pokusaj") != 0)
				{
					GRESKA( playerid, "Ne mozete koristiti ovu komandu dok ste u procesu provaljivanja!");
					return 1;
				}
				if( II[ i ][ iLocked ] == 1)
				{
					if( II[ i ][ iDoorLevel ] == 0)
					{
						if( PlayerInfo[ playerid ][ xSnaga ] < 4)
						{
							SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta!");
							return 1;
						}
						SendInfoMessage( playerid, "Uspjeli ste razbiti vrata na snagu.Vrata su se otvorila.");
						II[ i ][ iLocked ] = 0;
					}
					else if( II[ i ][ iDoorLevel ] == 1)
					{
						if( PlayerInfo[ playerid ][ xSnaga ] < 7)
						{
							SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta!");
							return 1;
						}
						SendInfoMessage( playerid, "Uspjeli ste razbiti vrata na snagu.Vrata su se otvorila.");
						II[ i ][ iLocked ] = 0;
					}
					else if( II[ i ][ iDoorLevel ] == 2)
					{
						if( PlayerInfo[ playerid ][ xSnaga ] < 10)
						{
							SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta!");
							return 1;
						}
						SendInfoMessage( playerid, "Uspjeli ste razbiti vrata na snagu.Vrata su se otvorila.");
						II[ i ][ iLocked ] = 0;
					}
					else if( II[ i ][ iDoorLevel ] == 3)
					{
						if( PlayerInfo[ playerid ][ xSnaga ] < 15)
						{
							SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta!");
							return 1;
						}
						SendInfoMessage( playerid, "Uspjeli ste razbiti vrata na snagu.Vrata su se otvorila.");
						II[ i ][ iLocked ] = 0;
					}
					else if( II[ i ][ iDoorLevel ] == 4)
					{
						if( PlayerInfo[ playerid ][ xSnaga ] < 20)
						{
							SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta!");
							return 1;
						}
						SendInfoMessage( playerid, "Uspjeli ste razbiti vrata na snagu.Vrata su se otvorila.");
						II[ i ][ iLocked ] = 0;
					}
					else if( II[ i ][ iDoorLevel ] == 5)
					{
						SendClientMessagee( playerid, CRVENA, "Vrata su precvrsta da bi ih obican covjek razbio!");
						return 1;
					}
					if( II[ i ][ iAlarm ] > 0)
					{
						if( II[ i ][ iAlarm ] >= 2)
						{
							for(new h; h < MAX_PLAYERS; h++)
							{
								if( IsPlayerConnected( h ) )
								{
									if( strcmp( ImeIgraca( h ), II[ i ][ iOwner ], true) == 0 )
									{
										SendClientMessagee( h, ZUTA, "SMS: Netko vam je provalio u kucu!Pozovite policiju, Vas Alarm!");
									}
								}
							}
						}
						if( II[ i ][ iAlarm ] >= 3)
						{
							for( new id = 1; id < MAX_ORG; id++)
							{
								if( OI[ id ][ oTip ] == ORG_TIP_PD )
								{
									OrgPoruka( id, 0x2641FEAA, "HQ: Svim jedinicama: Prijavio: Alarm");
									OrgPoruka( id, 0x2641FEAA, "HQ: Zlocin: Provala u kucu    ||  Osumljiceni: Nepoznat");
									format( globalstring, sizeof( globalstring ), "HQ: Adresa kuce: %s", II[ i ][ iAdress ] );
									OrgPoruka( id, 0x2641FEAA, globalstring);
								}
							}
						}
						format( globalstring, sizeof( globalstring ), "[%s ALARM] BEEP BEEP BEEP!!", II[ i ][ iAdress ] );
						PorukaRadius(60.0, playerid, globalstring, LJUBICASTA );
					}
					format( globalstring, sizeof( globalstring ), "* %s se zaljece i udara nogom u vrata.", ImeIgraca( playerid ) );
					PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
					ApplyAnimation( playerid, "POLICE", "Door_Kick", 4.0, 0, 0, 0, 0, 0, 1);
					ApplyAnimation( playerid, "POLICE", "Door_Kick", 4.0, 0, 0, 0, 0, 0, 1);
					return 1;
				}
				else
				{
					SendClientMessagee( playerid, CRVENA, "Vrata su otkljucana!" );
					return 1;
				}
			}
			else
			{
				GRESKA( playerid, "Ne mozes sam sebi razvalit vrata!" );
				return 1;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
// Veh System

CMD:hauba( playerid, params[] )
{
	new engine,lights,alarm,doors,bonnet,boot,objective,
		vehicle = GetPlayerVehicleID(playerid);
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER)
	{
		SendClientMessagee( playerid, CRVENA, "Morate biti vozac da bi ste mogli koristit ovu komandu.");
		return 1;
	}
	if( IsVehicleBajs( vehicle ) || IsVehicleMotor( vehicle ) || IsVehicleBrod( vehicle ) )
	{
		GRESKA( playerid, "Nepoznata akcija.");
		return 1;
	}
	GetVehicleParamsEx( vehicle, engine, lights, alarm, doors, bonnet, boot, objective );
	if( bonnet == 0)
	{
		SetVehicleParamsEx( vehicle,engine,lights,alarm,doors,1,boot,objective);
	} else
	{
		SetVehicleParamsEx( vehicle,engine,lights,alarm,doors,0,boot,objective);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:svetla( playerid, params[] )
{
	new engine,lights,alarm,doors,bonnet,boot,objective,
		vehicle = GetPlayerVehicleID(playerid);
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER )
	{
		SendClientMessagee( playerid, CRVENA, "Morate biti vozac da bi ste mogli koristit ovu komandu." );
		return 1;
	}
	if( IsVehicleBajs( vehicle ) || IsVehicleBrod( vehicle ) )
	{
		GRESKA( playerid, "Nepoznata akcija." );
		return 1;
	}
	GetVehicleParamsEx( vehicle, engine, lights, alarm, doors, bonnet, boot, objective );
	if( lights == 0 )
	{
		SendInfoMessage(playerid,"Ukljucio si svetla na vozilu!");
		SetVehicleParamsEx( vehicle,engine,1,alarm,doors,bonnet,boot,objective);
	} else
	{
		SendInfoMessage(playerid,"Iskljucio si svetla na svom vozilu!");
		SetVehicleParamsEx( vehicle,engine,0,alarm,doors,bonnet,boot,objective);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gepek( playerid, params[] )
{
	new vehicleid, found;
	for( new i = 0; i < MAX_VEHICLES; i++)
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(i, X, Y, Z);
		if( IsPlayerInRangeOfPoint( playerid, 5.0, X, Y, Z))
		{
			vehicleid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 ) return GRESKA( playerid, "Niste blizu vozila.");
	new Float:vehPos[ 3 ];
	getPosBehindVehicle( vehicleid, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ], 0.0 );
	if( !IsPlayerInRangeOfPoint( playerid, 2, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ] ) ) return GRESKA( playerid, "Morate biti pored prtljaznika." );
	if( IsANoTrunkVehicle( vehicleid ) ) return GRESKA( playerid, "Ovo vozilo nema prtljaznik!");
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Morate biti na nogama da biste zatvorili/otvorili prtljaznik.");
	if( IsVehicleBajs( vehicleid ) || IsVehicleMotor( vehicleid ) || IsVehicleBrod( vehicleid ) )
	{
		GRESKA( playerid, "Nepoznata akcija.");
		return 1;
	}
	if( ScriptIDVozila[ vehicleid ] == -1 ) return GRESKA( playerid, "Ovo vozilo nije ispravno kreirano, ako mislis da je greska obrati se Admin timu." );
	ShowPlayerDialog( playerid, dialog_GEPEK, DSL, D_NASLOV, "Otvori/Zatvori gepek\nInformacije\nOstavi\nIzvadi", D_ODABERI, D_NAZAD );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:upalivozilo( playerid, params[] )
{
	if( IsPlayerConnected( playerid ) )
	{
		new vehicle = GetPlayerVehicleID( playerid );

		if( !IsPlayerInAnyVehicle( playerid )) return GRESKA( playerid, "Morate biti u vozilu da biste koristili ovu komandu!");
		if( vCanDrive[ vehicle ] == 0 ) return GRESKA( playerid, "Ovo vozilo je unisteno i ne moze se pokrenuti.");
		if( IsVehicleBajs( vehicle ) ) return GRESKA( playerid, "Stvarno mislis upaliti biciklu? " );
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti vozac da bi ste mogli koristit ovu komandu.");
		if( Fuel[ vehicle ] == 0 ) return GRESKA( playerid, "Vozilo nema goriva ne mozete ga upaliti." );
		if( TipVozila[ vehicle ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Nisi u nijednom privatnom vozilu." );
		new autoid = ScriptIDVozila[ vehicle ];
		if( VehicleInfo[ autoid ][ vOwned ] == 1 )
		{
			if( strcmp( ImeIgraca( playerid ), VehicleInfo[ autoid ][ vOwner ], true) == 0 )
			{
				GRESKA( playerid, "Neces valjda da obijas svoje vozilo ?");
				return 1;
			}
			else
			{
				if( PlayerInfo[ playerid ][ xToolkit ] == true )
				{
					new time;
					switch( VehicleInfo[ autoid ][ vImobilizator ] )
					{
						case 0:
							time = 30000;
						case 1:
							time = 60000;
						case 2:
							time = 120000;
						case 3:
							time = 240000;
						case 4:
							time = 360000;
						case 5:
							time = 480000;
					}
					format( globalstring, sizeof( globalstring ), "* %s vadi alat za obijanje i pokusava upaliti vozilo pomocu alata.", ImeIgraca( playerid ) );
					PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
					SendClientMessagee( playerid, BELA, "Da prekinete paljenje vozila proces ukucajte /prekiniobijanje");
					TogglePlayerControllable( playerid, false );
					SetPVarInt(playerid, "EngineStartTimer", SetTimerEx("VehicleEngineStart",time,0,"i",playerid));
					SetPVarInt(playerid, "immobsecounds", (time/1000)+1);
					SetPVarInt(playerid, "immobcounttimer", SetTimerEx("ImmobCountForPlayer",1000,1,"i",playerid));
					SetPVarInt(playerid, "ImmobTimerCalled", 1);
					SetPVarInt(playerid, "StartingVehicle", 1);
					PlayerInfo[ playerid ][ xToolkit ] = false;
					
				} else GRESKA( playerid, "Nemas alat za obijanje!");
				
				return 1;
			}
		}
		else
		{
			GRESKA( playerid, "Ovo vozilo nije moguce obiti.");
			return 1;
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:obijbravu( playerid, params[] )
{
	new vehicleid, found;
	for( new i = 0; i < MAX_VEHICLES; i++ )
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos( i, X, Y, Z );
		if( IsPlayerInRangeOfPoint( playerid, 3.0, X, Y, Z ) )
		{
			vehicleid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 )
	{
		GRESKA( playerid, "Niste blizu vozila.");
		return 1;
	}
	new i = ScriptIDVozila[ vehicleid ];
	if( TipVozila[ vehicleid ] == PRIVATNO_VOZILO )
	{
		if( strcmp( ImeIgraca( playerid ), VehicleInfo[ i ][ vOwner ], true) == 0 )
		{
			GRESKA( playerid, "Necete obiti valjda svoje vozilo." );
			return 1;
		}
		else
		{
			if( PlayerInfo[ playerid ][ xLevel ] < 5 || PlayerInfo[ playerid ][ xToolkit ] == false ) return GRESKA( playerid, "Moras biti najmanje level 5/Nemas Alat za obijanje!");
			if( GetPVarInt( playerid, "BreakingLock") != 0) return GRESKA( playerid, "Vec si u procesu provaljivanja brave!");
			if( VehicleInfo[ i ][ vLocked ] == 0 ) return GRESKA( playerid, "Auto je otkljucan!");
			new time;
			switch( VehicleInfo[ i ][ vLock ] )
			{
				case 0:
					time = 30000;
				case 1:
					time = 60000;
				case 2:
					time = 120000;
				case 3:
					time = 240000;
				case 4:
					time = 360000;
				case 5:
					time = 480000;
			}
			format( globalstring, sizeof( globalstring ), "* %s vadi alat za obijanje i pokusava provaliti bravu na vozilu.", ImeIgraca( playerid ) );
			PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
			SendClientMessagee( playerid, BELA, "Da prekinete proces obijanja brave ukucajte /prekiniobijanje");
			SetPVarInt( playerid, "BreakLockTimer", SetTimerEx( "VehicleBreakLock", time, 0, "iii", playerid, vehicleid, i ) );
			TogglePlayerControllable( playerid, 0 );
			SetPVarInt( playerid, "breaksecounds", ( time/1000 )-1 );
			SetPVarInt( playerid, "breakcounttimer", SetTimerEx( "BreakLockCountForPlayer", 1000, 1, "i", playerid ) );
			SetPVarInt( playerid, "BreakLockTimerCalled", 1 );
			SetPVarInt( playerid, "BreakingVehicle", vehicleid );
			SetPVarInt( playerid, "BreakingLock", 1 );
			PlayerInfo[ playerid ][ xToolkit ] = false;
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vehinfo(playerid,params[])
{
	if(!(PlayerInfo[ playerid ][ xAdmin ] >= 1)) return greska(playerid, "Niste ovlasteni za upotrebu ove komande!");
	new vehicleid, found;
	for( new i = 0; i < MAX_VEHICLES; i++ )
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos( i, X, Y, Z );
		if( IsPlayerInRangeOfPoint( playerid, 5.0, X, Y, Z ) )
		{
			vehicleid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 )
	{
		GRESKA( playerid, "Niste blizu vozila.");
		return 1;
	}
	SendInfoMessage(playerid, "Vozilo "col_sanm"%s ima ID %i.", GetVehicleNameEx( GetVehicleModel( vehicleid ) ), vehicleid);
	return 1;
}
CMD:lock( playerid, params[] )
{
	new vehicleid, found, autoid,
		engine, lights, alarm, doors, bonnet, boot, objective;
	for( new i = 0; i < MAX_VEHICLES; i++ )
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos( i, X, Y, Z );
		if( IsPlayerInRangeOfPoint( playerid, 5.0, X, Y, Z ) )
		{
			vehicleid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 )
	{
		GRESKA( playerid, "Niste blizu vozila.");
		return 1;
	}
	if( TipVozila[ vehicleid ] == PRIVATNO_VOZILO )
	{
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vID ] == vehicleid ) { autoid = PlayerInfo[ playerid ][ xVoziloID ][ 0 ]; }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vID ] == vehicleid ) { autoid = PlayerInfo[ playerid ][ xVoziloID ][ 1 ]; }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vID ] == vehicleid ) { autoid = PlayerInfo[ playerid ][ xVoziloID ][ 2 ]; }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vID ] == vehicleid ) { autoid = PlayerInfo[ playerid ][ xVoziloID ][ 3 ]; }
		else if( PlayerInfo[ playerid ][ xRezervniKljucevi ] == ScriptIDVozila[ vehicleid ] ) { }
		else if( PlayerInfo[ playerid ][ xAdmin ] >= 1 ) { }
		else return GRESKA( playerid, "Ovo nije vase vozilo." );
		GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		
		if( doors == 0 )
		{
			VehicleInfo[ autoid ][ vLocked ] = 1;
			SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
			format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
			PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			SaveVehicle( autoid );
		}
		else if( doors == 1 )
		{
			VehicleInfo[ autoid ][ vLocked ] = 0;
			SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
			format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
			PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			SaveVehicle( autoid );
		}
	}
	else if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO )
	{
		if( OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == RENTANO_VOZILO )
	{
		if( Rentano[ playerid ] == vehicleid || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == GRADONACELNIKOVO_VOZILO )
	{
		if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_DRIVER || PlayerInfo[ playerid ][ xGradRank ] == GRAD_LDRIVER || PlayerInfo[ playerid ][ xAdmin ] >= 1 ) {
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == PROMOTER_VOZILO )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == VIP_VOZILO )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava svoje vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == POLAGANJE_VOZILO )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || Polaganje[ playerid ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
			return 1;
		}
	}
	else if( TipVozila[ vehicleid ] == PUMPA_VOZILO )
	{

		if( PumpaImanjeVozilo[ vehicleid ] == PlayerInfo[ playerid ][ xFirmaID ] || PlayerInfo[ playerid ][ xAdmin ] >= 5 )
		{

			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}

		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
		}
	}
	else if( TipVozila[ vehicleid ] == IMANJE_VOZILO )
	{

		if( PumpaImanjeVozilo[ vehicleid ] == PlayerInfo[ playerid ][ xFieldID ] || PlayerInfo[ playerid ][ xAdmin ] >= 5 )
		{

			GetVehicleParamsEx( vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if( doors == 0 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s zakljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}
			else if( doors == 1 )
			{
				SetVehicleParamsEx( vehicleid, engine, lights, alarm, 0, bonnet, boot, objective);
				format( globalstring, sizeof( globalstring ), "* %s otkljucava vozilo marke %s.", ImeIgraca( playerid ), GetVehicleNameEx( GetVehicleModel( vehicleid ) ) );
				PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			}

		}
		else
		{
			GRESKA( playerid, "Nemate kljuc ovog vozila.");
		}
	}
	else
	{
		GRESKA( playerid, "Nemate kljuc ovog vozila.");
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unrent( playerid, params[] )
{
	if( Rentano[ playerid ] == -1 ) return GRESKA( playerid, "Niste rentali vozilo!");
	if( GetPlayerInterior( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u interijeru." );
	if( GetPlayerVirtualWorld( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u virtual worldu." );
	VehicleObjectCheck( Rentano[ playerid ] );
	SetVehicleToRespawn( Rentano[ playerid ] );
	LinkVehicleToInterior( Rentano[ playerid ], 0 );
	Rentano[ playerid ] = -1;
	Dimi_KillTimer( RentTimer[ playerid ] );
	TogglePlayerControllable( playerid, true );
	SendClientMessagee( playerid, ZUTA, "Vise ne rentate vozilo!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:platikaznu( playerid, params[] )
{

	if(IsPlayerInRangeOfPoint( playerid, 3.0, 242.4187,118.5378,1021.4188 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 230.2321,1718.2751,-41.1981 ) )
	{
		if( PlayerInfo[ playerid ][ xRadarBodovi ] == 0 ) return GRESKA( playerid, "Nemate nijednu kaznu!" );
		if( PlayerInfo[ playerid ][ xNovac ] < ( PlayerInfo[ playerid ][ xRadarBodovi ]*600 ) ) return GRESKA( playerid, "Morate imati %d$ za %d kaznenih poena!", ( PlayerInfo[ playerid ][ xRadarBodovi ]*600 ), PlayerInfo[ playerid ][ xRadarBodovi ] );
		DajIgracuNovac( playerid, -( PlayerInfo[ playerid ][ xRadarBodovi ]*600 ) );
		SendInfoMessage( playerid, "Platili ste %d$ za %d kaznenih poena!", ( PlayerInfo[ playerid ][ xRadarBodovi ]*600 ), PlayerInfo[ playerid ][ xRadarBodovi ] );
		PlayerInfo[ playerid ][ xRadarBodovi ] = 0;
		SavePlayer( playerid );
	}
	else return GRESKA( playerid, "Niste na salteru MUP-a / SAJ-a" );
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vozilo( playerid, params[] )
{
	new string[ 128 ];
	format( string, sizeof( string ),"%s\n%s\n%s\n%s", getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ), getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ), getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ), getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ) );
	ShowPlayerDialog( playerid, dialog_VEHLIST, DIALOG_STYLE_LIST, D_NASLOV, string, "Odaberi", "Izlaz" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:preuzmitablice( playerid, params[] )
{

	if( IsPlayerInRangeOfPoint( playerid, 3.0, 250.6540,118.5352,1021.4188 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 235.2786,1718.2629,-41.1981 ) )
	{
		ShowPlayerDialog( playerid, dialog_UZIMATABLE, DSL, "Tablice za vozilo", "Vozilo 1\nVozilo 2\nVozilo 3\nVozilo 4", "Izaberi", "Odustani" );
	}
	else return GRESKA( playerid, "Niste na salteru MUP-a / SAJ-a" );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:postavitablice( playerid, params[] )
{
	new izbor;
	new Float:x, Float:y, Float:z;

	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti van auta!" );
	if( sscanf( params, "d",  izbor ) )
	{
		SendUsageMessage( playerid, "/postavitablice [ slot ]" );
		SendInfoMessage( playerid, "Listu vozila imate na /vehlist" );
		return 1;
	}
	if( izbor == -1 || izbor == 0 ) return GRESKA( playerid, "Pogresan slot!" );

	if( izbor == 1)
	{
		if(PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1) return GRESKA( playerid, "Nemate vozilo na tom slotu!" );
		GetVehiclePos( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vID ], x, y, z );
		if( !IsPlayerInRangeOfPoint( playerid, 7.0, x, y, z ) ) return GRESKA( playerid, "Nisi u blizini auta.");
		
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vTeh ] < 3 ) return GRESKA( playerid, "Prvo preuzmite tablice iz policijske stanice!");
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vTeh ] == 3 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vReg ] = 1;
		else if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vTeh ] == 4 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vReg ] = 2;
		VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vTeh ] = 0; VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vRegVreme ] = 720;
		SaveVehicle( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] );
		SetTimerEx( "Postaviotable", 5000, false, "ii", playerid, PlayerInfo[ playerid ][ xVoziloID ][ 0 ] );
	
	}
	else if( izbor == 2)
	{
		if(PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1) return GRESKA( playerid, "Nemate vozilo na tom slotu!" );
		GetVehiclePos( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vID ], x, y, z );
		if( !IsPlayerInRangeOfPoint( playerid, 7.0, x, y, z ) ) return GRESKA( playerid, "Nisi u blizini auta.");
		
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vTeh ] < 3 ) return GRESKA( playerid, "Prvo preuzmite tablice iz policijske stanice!");
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vTeh ] == 3 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vReg ] = 1;
		else if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vTeh ] == 4 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vReg ] = 2;
		VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vTeh ] = 0; VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vRegVreme ] = 720;
		SaveVehicle( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] );
		SetTimerEx( "Postaviotable", 5000, false, "ii", playerid, PlayerInfo[ playerid ][ xVoziloID ][ 1 ] );

	}
	else if( izbor == 3)
	{
		if(PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1) return GRESKA( playerid, "Nemate vozilo na tom slotu!" );
		GetVehiclePos( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vID ], x, y, z );
		if( !IsPlayerInRangeOfPoint( playerid, 7.0, x, y, z ) ) return GRESKA( playerid, "Nisi u blizini auta.");
		
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vTeh ] < 3 ) return GRESKA( playerid, "Prvo preuzmite tablice iz policijske stanice!");
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vTeh ] == 3 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vReg ] = 1;
		else if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vTeh ] == 4 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vReg ] = 2;
		VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vTeh ] = 0; VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vRegVreme ] = 720;
		SaveVehicle( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] );
		SetTimerEx( "Postaviotable", 5000, false, "ii", playerid, PlayerInfo[ playerid ][ xVoziloID ][ 2 ] );

	}
	else if( izbor == 4)
	{
		if(PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1) return GRESKA( playerid, "Nemate vozilo na tom slotu!" );
		GetVehiclePos( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vID ], x, y, z );
		if( !IsPlayerInRangeOfPoint( playerid, 7.0, x, y, z ) ) return GRESKA( playerid, "Nisi u blizini auta.");
		
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vTeh ] < 3 ) return GRESKA( playerid, "Prvo preuzmite tablice iz policijske stanice!");
		if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vTeh ] == 3 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vReg ] = 1;
		else if( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vTeh ] == 4 ) VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vReg ] = 2;
		VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vTeh ] = 0; VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vRegVreme ] = 720;
		SaveVehicle( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] );
		SetTimerEx( "Postaviotable", 5000, false, "ii", playerid, PlayerInfo[ playerid ][ xVoziloID ][ 3 ] );

	}
	else return GRESKA( playerid, "Pogresan slot!" );
	SendInfoMessage( playerid, "Registrovali ste vozilo na 720h!" );
	ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0,5000, 0);
	ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0,5000, 0);

	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:registrujvozilo( playerid, params[] )
{

	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 362.0341,173.6739,1008.3828) ) return GRESKA( playerid, "Morate biti na salteru u opstini!" );
	ShowPlayerDialog( playerid, dialog_PAPIRIZAREG, DSL, "Registracija vozila", "Vozilo 1\nVozilo 2\nVozilo 3\nVozilo 4", "Izaberi", "Odustani" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vehlist( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 && PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 && PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 && PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) return GRESKA( playerid, "Nemate nijedno vozilo!");
	if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] != -1)
	{
		format( globalstring, sizeof( globalstring ), "Slot: 1 || ID: %d || Marka: %s\n", PlayerInfo[ playerid ][ xVoziloID ][ 0 ], getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ) );
		strcat( DialogStrgEx, globalstring );
	}
	if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] != -1)
	{
		format( globalstring, sizeof( globalstring ), "Slot: 2 || ID: %d || Marka: %s\n", PlayerInfo[ playerid ][ xVoziloID ][ 1 ], getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ) );
		strcat( DialogStrgEx, globalstring );
	}
	if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] != -1)
	{
		format( globalstring, sizeof( globalstring ), "Slot: 3 || ID: %d || Marka: %s\n", PlayerInfo[ playerid ][ xVoziloID ][ 2 ], getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ) );
		strcat( DialogStrgEx, globalstring );
	}
	if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] != -1)
	{
		format( globalstring, sizeof( globalstring ), "Slot: 4 || ID: %d || Marka: %s\n", PlayerInfo[ playerid ][ xVoziloID ][ 3 ], getVehicleName( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ) );
		strcat( DialogStrgEx, globalstring );
	}
	ShowPlayerDialog( playerid, 0, DSMSG, "Vasa vozila", DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:daj( playerid, params[] )
{
	new x_nr[32],giveplayerid;

	if( sscanf( params, "s[32] ", x_nr ) )
	{
		SendUsageMessage( playerid, "/daj [Opcija] [ ID/Ime ] [ kolicina ]");
		SendClientMessagee( playerid, BELA, "OPCIJE: oruzje, sat, telefon, cigare, upaljac, materijale");
		return 1;
	}
	if(strcmp(x_nr,"oruzje",true) == 0)
	{
		new kolicina;
		if( sscanf( params, "s[32]ud", x_nr, giveplayerid, kolicina ) ) return SendUsageMessage( playerid, "/daj oruzje [ ID/Ime ] [ kolicina ]");
		new Float:H; GetPlayerHealth( playerid, H );
		if( H < 15.0 ) return GRESKA( playerid, "Ne mozete dati oruzje, ako imate manje od 15HP." );
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti van vozila." );
		if( IsPlayerInAnyVehicle( giveplayerid ) ) return GRESKA( playerid, "Igrac mora biti van vozila." );
		if( giveplayerid != INVALID_PLAYER_ID )
		{
			if( PlayerLogged[ giveplayerid ] == true )
			  {
				if( IsPlayerNearPlayer( 3.0, playerid, giveplayerid ) )
				 {
					new weapon = GetWeapon( playerid );

					if( GetFactionType( playerid ) == ORG_TIP_PD || GetFactionType( playerid ) == ORG_TIP_HITM )
					{
						GRESKA( playerid, "MUP/SAJ/HITMAN ne moze dati oruzje!");
						return 1;
					}
					if( WARPInfo[ playerid ][ WARIgrac ] != -1 ) return GRESKA( playerid, "Ne mozes ovo dok si u waru." );
					if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes ovo dok si na dmu." );
					if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozete sami sebi davati oruzje!");
					if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Morate biti najmanje level 3 da bi ste mogli koristit ovu komandu!");
					if( PlayerInfo[ giveplayerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Igrac nije level 2!");
					if( weapon == 0 ) return GRESKA( playerid, "Nemate nijedno oruzje u ruci!");
					if( kolicina < 0 ) return GRESKA( playerid, "Kolicina ne moze u minus.");
					if( IsMeleeWeapon( weapon ) )
					{
						antiCheatCS[ playerid ][ WeaponDetect ] = 3;
						RemovePlayerWeapon( playerid, weapon );
						SendInfoMessage( playerid, "Dali ste %s %s .", ImeIgraca( giveplayerid ), WeapNames[ weapon ] );
						SendInfoMessage( giveplayerid, "%s vam je dao %s .", ImeIgraca( playerid ), WeapNames[ weapon ] );
					}
					else
					{
						new gunAmmo = GetPlayerAmmo(playerid);
						if(weapon > 0 && gunAmmo != 0)
						{
							if(GetWeapon(giveplayerid) == weapon )
							{
								if(kolicina > gunAmmo) return GRESKA( playerid, "Nemas toliko municije!");
								GiveWeaponToPlayer( giveplayerid, weapon, kolicina );
								SetPlayerArmedWeapon( giveplayerid, weapon );
								RemovePlayerWeapon( playerid, weapon );
								GiveWeaponToPlayer( playerid, weapon, gunAmmo-kolicina );
							}
							else
							{
								GiveWeaponToPlayer( giveplayerid, weapon, gunAmmo );
								SetPlayerArmedWeapon( giveplayerid, weapon );
								RemovePlayerWeapon( playerid, weapon );
							}
						}
						antiCheatCS[ playerid ][ WeaponDetect ] = 3;
						antiCheatCS[ giveplayerid ][ WeaponDetect ] = 3;
						SendInfoMessage( playerid, "Dali ste %s %s sa %d metaka .", ImeIgraca( giveplayerid ), WeapNames[ weapon ], kolicina );
						SendInfoMessage( giveplayerid, "%s vam je dao %s sa %d metaka.", ImeIgraca( playerid ), WeapNames[ weapon ], kolicina );
					}
					format( globalstring, sizeof( globalstring ), "* %s daje oruzje %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
					PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		return 1;
	}
	else if(strcmp(x_nr,"cigare",true) == 0)
	{
		new moneys;
		if( sscanf( params, "s[32]ui", x_nr, giveplayerid, moneys ) ) return SendUsageMessage( playerid, "/daj cigare [ ID/Ime ] [ kolicina ]");
		if( PlayerLogged[ giveplayerid ] == true )
		{
			if( giveplayerid != INVALID_PLAYER_ID )
			{
				if( IsPlayerNearPlayer( 3.0, playerid, giveplayerid ) )
				{
					if( giveplayerid == playerid) return GRESKA( playerid, "Ne mozete sami sebi davati cigarete!");
					if( ( PlayerInfo[ giveplayerid ][ xCigare ] + moneys ) > 100 ) return GRESKA( playerid, "Osoba moze najvise nositi 100 cigareta kod sebe");
					if( moneys > 0 && PlayerInfo[ playerid ][ xCigare ] >= moneys )
					{
						PlayerInfo[ giveplayerid ][ xCigare ] += moneys;
						PlayerInfo[ playerid ][ xCigare ] -= moneys;
						PlayerPlaySound( giveplayerid, 1052, 0.0, 0.0, 0.0 );
						SendInfoMessage( playerid, "Poslali ste %s (ID: %d), %d cigareta.", ImeIgraca( giveplayerid ), giveplayerid, moneys );
						SendInfoMessage( giveplayerid, "Primili ste %d cigareta od %s (ID: %d).", moneys, ImeIgraca( playerid ), playerid);
						format( globalstring, sizeof( globalstring ), "* %s vadi kutiju cigareta i daje cigaretu %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
						PorukaRadius( 3.0, playerid, globalstring, LJUBICASTA );
						
					} else GRESKA( playerid, "Nemate toliko cigareta kod sebe !");
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		return 1;
	}
	else if(strcmp(x_nr,"upaljac",true) == 0)
	{
		if( sscanf( params, "s[32]u", x_nr, giveplayerid ) )
		{
			SendUsageMessage( playerid, "/daj upaljac [ ID/Ime ]");
			return 1;
		}
		if( giveplayerid != INVALID_PLAYER_ID )
		{
			if( PlayerLogged[ giveplayerid ] == true )
			{
				if( IsPlayerNearPlayer(3.0, playerid, giveplayerid ) )
				{
					if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozete sami sebi davati upaljac!");
					if( PlayerInfo[ giveplayerid ][ xUpaljac ] == 1 ) return GRESKA( playerid, "Osoba vec ima upaljac");
					if( PlayerInfo[ playerid ][ xUpaljac ] == 1 )
					{
						PlayerInfo[ playerid ][ xUpaljac ] = 0;
						PlayerInfo[ giveplayerid ][ xUpaljac ] = 1;
						PlayerPlaySound( giveplayerid, 1052, 0.0, 0.0, 0.0 );
						format( globalstring, sizeof( globalstring ), "* %s vadi upaljac iz dzepa i daje ga %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
						PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
						
					} else GRESKA( playerid, "Nemas upaljac !");
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		
		return 1;
	}
	else if(strcmp(x_nr,"telefon",true) == 0)
	{
		if( sscanf(params, "s[32]u", x_nr, giveplayerid ) ) return SendUsageMessage( playerid, "/daj telefon [ ID/Ime ]");
		if( PlayerLogged[ giveplayerid ] == true )
		{
			if( giveplayerid != INVALID_PLAYER_ID )
			  {
				if( IsPlayerNearPlayer(3.0, playerid, giveplayerid ) )
				 {
					if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozete sami sebi davati mobilni telefon!");
					if( PlayerInfo[ giveplayerid ][ xBrojTelefona ] != 0) return GRESKA( playerid, "Osoba vec ima mobilni!");
					if( PlayerInfo[ playerid ][ xBrojTelefona ] != 0)
					{
						PlayerInfo[ giveplayerid ][ xBrojTelefona ] = PlayerInfo[ playerid ][ xBrojTelefona ];
						PlayerInfo[ giveplayerid ][ xModelTelefona ] = PlayerInfo[ playerid ][ xModelTelefona ];
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						format( globalstring, sizeof( globalstring ), "* %s daje mobilni telefon %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
						PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
						PlayerInfo[ playerid ][ xBrojTelefona ] = 0;
						PlayerInfo[ playerid ][ xModelTelefona ] = 0;
						
					} else GRESKA( playerid, "Nemas mobilni !");
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
			
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		return 1;
	}
	else if(strcmp(x_nr,"sat",true) == 0)
	{
		if( sscanf(params, "s[32]u", x_nr, giveplayerid ) ) return SendUsageMessage( playerid, "/daj sat [ ID/Ime ]");
		if( giveplayerid != INVALID_PLAYER_ID )
		{
			if( PlayerLogged[ giveplayerid ] == true )
			{
				if( IsPlayerNearPlayer(3.0, playerid, giveplayerid ) )
				{
					if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozete sami sebi davati sat!");
					if( PlayerInfo[ giveplayerid ][ xSat ] != 0 ) return GRESKA( playerid, "Osoba vec ima sat!");
					if( PlayerInfo[ playerid ][ xSat ] != 0 )
					{
						PlayerInfo[ giveplayerid ][ xSat ] = PlayerInfo[ playerid ][ xSat ];
						PlayerInfo[ playerid ][ xSat ] = 0;
						PlayerPlaySound( giveplayerid, 1052, 0.0, 0.0, 0.0);
						format( globalstring, sizeof( globalstring ), "* %s skida sat sa ruke i daje ga %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
						PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
						
					} else GRESKA( playerid, "Nemas sat !");
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
			
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		return 1;
	}
	else if(strcmp(x_nr,"materijale",true) == 0)
	{
		new moneys;
		if( sscanf( params, "s[32]ui", x_nr, giveplayerid, moneys ) ) return SendUsageMessage( playerid, "/daj materijale [ ID/Ime ] [ kolicina ]");
		if( PlayerLogged[ giveplayerid ] == true )
		{
			if( giveplayerid != INVALID_PLAYER_ID )
			  {
				if( IsPlayerNearPlayer( 3.0, playerid, giveplayerid ) )
				 {
					if( giveplayerid == playerid) return GRESKA( playerid, "Ne mozete sami sebi davati materijale!");
					if( moneys > 0 && PlayerInfo[ playerid ][ xMaterijali ] >= moneys )
					{
						PlayerInfo[ giveplayerid ][ xMaterijali ] += moneys;
						PlayerInfo[ playerid ][ xMaterijali ] -= moneys;
						PlayerPlaySound( giveplayerid, 1052, 0.0, 0.0, 0.0 );
						SendInfoMessage( playerid, "Poslali ste %s (ID: %d), %d materijala.", ImeIgraca( giveplayerid ), giveplayerid, moneys );
						SendInfoMessage( giveplayerid, "Primili ste %d materijala od %s (ID: %d).", moneys, ImeIgraca( playerid ), playerid);
						format( globalstring, sizeof( globalstring ), "* %s vadi materijala i daje ih %s.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
						PorukaRadius( 3.0, playerid, globalstring, LJUBICASTA );
					} else GRESKA( playerid, "Nemate toliko materijala kod sebe !");
					
				} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
			}
			
		} else GRESKA( playerid, "Taj igrac nije povezan na server!");
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
// 24/7 System
CMD:uzmicigaretu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xCigare ] < 1) return GRESKA( playerid, "  Nemate cigareta!");
	if( PlayerInfo[ playerid ][ xUpaljac ] == 1)
	{
		ApplyAnimation( playerid, "SMOKING", "M_smk_in", 3.0, 0, 0, 0, 0, 0, 1 );
		SetPlayerSpecialAction( playerid, 21 );
		SendClientMessagee( playerid, UGBOJA, "Stisni lijevu tipku misa da pocnes pusiti." );
		SendClientMessagee( playerid, UGBOJA, "Koristi tipku ENTER da bacis cigaretu." );
		if( Maskuse[ playerid ] == false )
			format( globalstring, sizeof( globalstring ), "** %s pali cigaretu i pusi.", ImeIgraca( playerid ) );
		else
			format( globalstring, sizeof( globalstring ), "** Maska_%d pali cigaretu i pusi.", PlayerInfo[ playerid ][ xMaskID ] );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		SetPVarInt( playerid, "gSmoking", 1);
		PlayerInfo[ playerid ][ xCigare ] -= 1;
		SavePlayer( playerid );
		
	} else GRESKA( playerid, "Nemas upaljac!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:izbaci( playerid, params[] )
{
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/izbaci [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] pizza, uze, maska, sok, pivo, hamburger, piletina, cigare, upaljac");
		SendClientMessagee( playerid, BELA, "[Opcije] sodab, desvoda, sat");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "pizza",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 0 ] == 0 ) return GRESKA( playerid, "Nemate picu u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 100;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje picu iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 0 ]--;
		return 1;
	}
	else if( strcmp( item, "uze",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 1 ] == 0 ) return GRESKA( playerid, "Nemate uze u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 200;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje uze iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 1 ] = 0;
		return 1;
	}
	else if( strcmp( item, "maska",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 2 ] == 0 ) return GRESKA( playerid, "Nemate masku u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 800;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje masku iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 2 ] = 0;
		return 1;
	}
	else if( strcmp( item, "sok",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 3 ] == 0 ) return GRESKA( playerid, "Nemate sok u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 40;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje sok iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 3 ] -= 1;
		return 1;
	}
	else if( strcmp( item, "pivo",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 4 ] == 0 ) return GRESKA( playerid, "Nemate pivo u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 55;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje pivo iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 4 ] -= 1;
		return 1;
	}
	else if( strcmp( item, "hamburger",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 5 ] == 0 ) return GRESKA( playerid, "Nemate hamburger u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 65;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje hamburger iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 5 ]--;
		return 1;
	}
	else if( strcmp( item, "piletina",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 6 ] == 0 ) return GRESKA( playerid, "Nemate kokosku u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 250;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje piletinu iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 6 ]--;
		return 1;
	}
	else if( strcmp( item, "cigare",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 7 ] == 0 ) return GRESKA( playerid, "Nemate cigare u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 35;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje cigare iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 7 ] = 0;
		return 1;
	}
	else if( strcmp( item, "upaljac",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 8 ] == 0 ) return GRESKA( playerid, "Nemate upaljac u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 25;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje upaljac iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 8 ] = 0;
		return 1;
	}
	else if( strcmp( item, "sodab",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 9 ] == 0 ) return GRESKA( playerid, "Nemate sodu bikarbonu u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 80;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje sodu bikarbonu iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 9 ] -= 1;
		return 1;
	}
	else if( strcmp( item, "desvoda",true) == 0)
	{
		if( UzeoIzMarketa[ playerid ][ 10 ] == 0 ) return GRESKA( playerid, "Nemate sodu destilovanu vodu u korpi za kupovinu." );
		UkupnaCena[ playerid ] -= 40;
		format( globalstring, sizeof( globalstring ), "%s lijevom rukom izbacuje destilovanu vodu iz korpe za kupovinu.", ImeIgraca( playerid ) );
		PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
		UzeoIzMarketa[ playerid ][ 10 ] -= 1;
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/izbaci [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] pizza, uze, maska, sok, pivo, hamburger, piletina, cigare, upaljac");
		SendClientMessagee( playerid, BELA, "[Opcije] sodab, desvoda,sat ");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ubaci( playerid, params[] )
{

	new businessId = GetPlayerBusinessId( playerid, VRSTA_MARKET );

	if( businessId == -1 )
	{
		GRESKA( playerid, "Morate biti u marketu da bi koristili ovu komandu." );
	}
	else if( businessId == -2 )
	{
		GRESKA( playerid, "Nemamo vise proizvoda!" );
	}
	else
	{

		new item[ 32 ];
		if( sscanf( params, "s[32] ", item ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/ubaci [opcija]");
			SendClientMessagee( playerid, BELA, "[Opcije] pizza, uze, maska, sok, pivo, hamburger, piletina, cigare, upaljac");
			SendClientMessagee( playerid, BELA, "[Opcije] sodab, desvoda, sat");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		if( strcmp( item, "pizza",true) == 0)
		{
			if(IsPlayerInRangeOfPoint( playerid, 3.0, -14.8936,-85.8825,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 79.0627,1934.9912,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 100;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje picu u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 0 ] += 1;
			}
			else return GRESKA( playerid, "Niste kod frizidera sa piletinom!" );
			return 1;
		}
		else if( strcmp( item, "uze",true) == 0)
		{
			if( UzeoIzMarketa[ playerid ][ 1 ] == 1 ) return GRESKA( playerid, "Vec si ubacio uze." );
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -19.8782,-81.7753,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 62.5906,1950.4758,-46.5000 ))
			{
				UkupnaCena[ playerid ] += 200;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje uze u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 1 ] = 1;
			}else return GRESKA( playerid, "Niste kod stalaze za kupovinu uzeta!" );
			return 1;
		}
		else if( strcmp( item, "maska",true) == 0)
		{
			if( UzeoIzMarketa[ playerid ][ 2 ] == 1 ) return GRESKA( playerid, "Vec si ubacio masku." );
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -19.8783,-77.0707,1003.5542 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 85.7592,1939.5144,-46.5000 )  ) 
			{
				UkupnaCena[ playerid ] += 800;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje masku u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 2 ] = 1;
			}else return GRESKA( playerid, "Niste kod stalaze sa maskama!" );
			return 1;
		}
		else if( strcmp( item, "sok",true) == 0)
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -25.0427,-74.3232,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 74.4506,1945.6547,-46.5000 ))
			{
				UkupnaCena[ playerid ] += 40;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje sok u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 3 ] += 1;
			}else return GRESKA( playerid, "Niste kod frizidera sa sokovima!" );
			return 1;
		}
		else if( strcmp( item, "pivo",true) == 0)
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -17.9551,-74.3143,1003.5542 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 80.7565,1934.8174,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 55;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje pivo u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 4 ] += 1;
			}else return GRESKA( playerid, "Niste kod stalaze piva!" );
			return 1;
		}
		else if( strcmp( item, "hamburger",true) == 0 )
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -31.8768,-77.5130,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 68.2727,1939.4718,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 65;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje hamburger u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 5 ] += 1;
			}else return GRESKA( playerid, "Niste kod frizidera sa hamburgerima!" );
			return 1;
		}
		else if( strcmp( item, "piletina",true) == 0 )
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -17.2291,-81.3823,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 67.9707,1948.0797,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 250;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje piletinu u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 6 ] += 1;
			}else return GRESKA( playerid, "Niste kod frizidera sa piletinom!" );
			return 1;
		}
		else if( strcmp( item, "cigare",true) == 0 )
		{
			if( UzeoIzMarketa[ playerid ][ 7 ] == 1 ) return GRESKA( playerid, "Vec si ubacio cigare." );
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -37.3030,-76.5274,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 71.8576,1951.2085,-46.5000 ))
			{
				UkupnaCena[ playerid ] += 35;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje cigare u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 7 ] = 1;
			}else return GRESKA( playerid, "Niste kod stalaze sa cigarama!" );
			return 1;
		}
		else if( strcmp( item, "upaljac",true) == 0 )
		{
			if( UzeoIzMarketa[ playerid ][ 8 ] == 1 ) return GRESKA( playerid, "Vec si ubacio upaljac." );
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -34.9580,-74.3164,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 77.1649,1935.0197,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 25;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje upaljac u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 8 ] = 1;
			}else return GRESKA( playerid, "Niste kod stalaze sa upaljacima!" );
			return 1;
		}
		else if( strcmp( item, "sodab",true) == 0)
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -37.3028,-84.8486,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 64.0953,1935.0474,-46.5000 ) )
			{
				UkupnaCena[ playerid ] += 80;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje sodu bikarbonu u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 9 ] += 1;
			}else return GRESKA( playerid, "Niste kod stalaze sa sodom bikarbonom!" );
			return 1;
		}
		else if( strcmp( item, "desvoda",true) == 0)
		{
			if( IsPlayerInRangeOfPoint( playerid, 3.0, -37.2162,-80.3907,1003.5469 ) || IsPlayerInRangeOfPoint( playerid, 3.0, 62.4464,1937.7119,-46.5000 ))
			{
				UkupnaCena[ playerid ] += 40;
				format( globalstring, sizeof( globalstring ), "%s lijevom rukom ubacuje destilovanu vodu u korpu za kupovinu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				UzeoIzMarketa[ playerid ][ 10 ] += 1;
			}else return GRESKA( playerid, "Niste kod stalaze sa destilovanom vodom!" );
			return 1;
		}
		else
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/ubaci [opcija]");
			SendClientMessagee( playerid, BELA, "[Opcije] pizza, uze, maska, sok, pivo, hamburger, piletina, cigare, upaljac");
			SendClientMessagee( playerid, BELA, "[Opcije] sodab, desvoda, sat");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:apoteka( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, -426.4587,-1725.0701,2244.3611 ) ) return GRESKA( playerid, "Niste na salteru apoteke!" );
	ShowPlayerDialog( playerid, dialog_PHARMACY, DSL, "Apoteka", "Solna Kiselina 50$\nPseudo 85$\nCrveni Fosfor 65$\nLysergic acid 35$\nKalcijum 25$\nAmonijum Hlorid 45$", D_ODABERI, D_ODUSTANI );
	return true;
}
CMD:kupisupstance( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint( playerid, 3.0,2257.0254,-1157.7039,542.5454) && !(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]))
	{
		return GRESKA( playerid, "Vi niste u fabrici droge svoje organizacije!" );
	}
	ShowPlayerDialog( playerid, dialog_KUPOVINASUPSTANCI, DSL, "Kupovina supstanci", "Solna Kiselina - 50$\nPseudo - 85$\nCrveni Fosfor - 65$\nLysergic acid - 35$\nKalcijum - 25$\nAmonijum Hlorid - 45$", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupipaketzafix( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint( playerid, 3.0,2540.9734,-1541.6760,2023.5839) && !(inOrgGarage[playerid]==PlayerInfo[playerid][xClan]))
	{
		return GRESKA( playerid, "Vi niste u garazi svoje organizacije!" );
	}
	DajIgracuNovac(playerid, -3000);
	PlayerInfo[playerid][xPFV] = 1;
	SendInfoMessage(playerid, "Kupili ste paket za popravljanje vozila!");
	SendInfoMessage(playerid, "Isti mozete koristiti komandom '/popravivozilo' dok ne izadjete sa servera.");
	return true;
}

CMD:popravivozilo( playerid, params[] )
{
	if(PlayerInfo[playerid][xPFV] == 0) return greska(playerid, "Moras kupiti paket za popravljanje vozila u garazi svoje organizacije.");
	if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na trci." );
	if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si na eventu." );
	if( UzeoOpremu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok radis posao ili imas uniformu posla." );
	if( PlayerInfo[ playerid ][ xWanted ] != 0 ) return GRESKA( playerid, "Ne mozes fixati vozilo dok imas wanted level." );

	new Float:X, Float:Y, Float:Z, Float:A;
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Niste u vozilu!");
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Niste na mjestu vozaca!");
	GetPlayerPos( playerid, X, Y, Z );
	GetVehicleZAngle( GetPlayerVehicleID( playerid ), A );
	SetVehicleZAngle( GetPlayerVehicleID( playerid ), A );
	Dimi_RepairVehicle( playerid, GetPlayerVehicleID( playerid ) );
	Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
	antiCheatCS[ playerid ][ VehRepairTime ] = 3;
	vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
	SendInfoMessage( playerid, "Okrenuli ste se sa vozilom i popravili vozilo." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:roda( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint( playerid, 3.0, 1309.7498, -888.6172, 39.5781 ) )
	{
		new item[ 32 ], kolicina;
		static id = -1;
		if( sscanf( params, "s[32] ", item ) )
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/roda [ IZBOR ]");
			SendClientMessagee( playerid, BELA, "[IZBOR] pizza(100$), uze(200$), maska(800$), sok(40$), pivo(55$)");
			SendClientMessagee( playerid, BELA, "[IZBOR] hamburger(65$), piletina(250$), cigare(35$), upaljac(25$)");
			SendClientMessagee( playerid, BELA, "[IZBOR] sodab(80$), desvoda(40$)");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		if( strcmp( item, "pizza", true) == 0 )
		{
		
			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda pizza [ kolicina ]");
				return 1;
			}
		
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*100 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*100 );
			id = Inventory_Add( playerid, "Pizza", 2702, kolicina );

			if( id != -1 )
			{
				DajIgracuNovac( playerid, -kolicina*100 );
				BussinesRodaMoney( kolicina*80);
				SendInfoMessage( playerid, "Kupili ste %d pica za %d$.", kolicina, kolicina*100 );
				format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			}
			else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
			
			return 1;
		}
		else if( strcmp( item, "uze",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xNovac ] < 200 ) return GRESKA( playerid, "Nemate 200$ kod sebe." );
			DajIgracuNovac( playerid, -200 );
			Uze[ playerid ] = true;
			BussinesRodaMoney( 160 );
			SendInfoMessage( playerid, "Kupili ste uze za 200$." );
			format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
			PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			return 1;
		}
		else if( strcmp( item, "maska", true ) == 0 )
		{
		
			if( Inventory_HasItem(playerid, "Maska" ) )
			{
				GRESKA( playerid, "Vec imate masku." );
			}
			else if( !Inventory_HasItem(playerid, "Maska" ) )
			{
				if( PlayerInfo[ playerid ][ xNovac ] < 800 ) return GRESKA( playerid, "Nemate 800$ kod sebe." );
				id = Inventory_Add( playerid, "Maska", 19036 );
				if( id != -1 )
				{
					DajIgracuNovac( playerid, -800 );
					new rand = 100000 + random(899999);
					PlayerInfo[ playerid ][ xMaskID ] = rand;
					BussinesRodaMoney( 640);
					SendInfoMessage( playerid, "Kupili ste masku za 800$." );
					format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
					PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				}
				else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
			}
			return 1;
		}
		else if( strcmp( item, "sok",true) == 0)
		{

			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda sok [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*40 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*40 );
			id = Inventory_Add( playerid, "Sok", 2647, kolicina );

			if( id != -1 )
			{
				DajIgracuNovac( playerid, -kolicina*40 );
				SendInfoMessage( playerid, "Kupili ste %d flasa soka za %d$.", kolicina, kolicina*40 );
				format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
				BussinesRodaMoney( kolicina*30);
			}
			else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
			return 1;
		}
		else if( strcmp( item, "pivo",true) == 0)
		{

			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda pivo [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*55 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*55 );
			id = Inventory_Add( playerid, "Pivo", 1543, kolicina );

			if( id != -1 )
			{
				SendInfoMessage( playerid, "Kupili ste %d flasa piva za %d$.", kolicina, kolicina*55 );
				DajIgracuNovac( playerid, -kolicina*55 );
				BussinesRodaMoney( kolicina*40 );
				format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			}
			else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );

			return 1;
		}
		else if( strcmp( item, "hamburger",true) == 0 )
		{

			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda hamburger [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*65 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*65 );
			id = Inventory_Add( playerid, "Hamburger", 2703, kolicina );

			if( id != -1 )
			{
				SendInfoMessage( playerid, "Kupili ste %d hamburgera za %d$.", kolicina, kolicina*65 );
				DajIgracuNovac( playerid, -kolicina*65 );
				BussinesRodaMoney( kolicina*40);
				format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			}
			else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
			return 1;
		}
		else if( strcmp( item, "piletina",true) == 0 )
		{

			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda piletina [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*250 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*250 );
			id = Inventory_Add( playerid, "Piletina", 2663, kolicina );

			if( id != -1 )
			{
				SendInfoMessage( playerid, "Kupili ste %d pileta za %d$.", kolicina, kolicina*250 );
				DajIgracuNovac( playerid, -kolicina*250 );
				BussinesRodaMoney( kolicina*200);
				format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
				PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			}
			else GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
			
			return 1;
		}
		else if( strcmp( item, "cigare",true) == 0 )
		{
			
			if( PlayerInfo[ playerid ][ xNovac ] < 35 ) return GRESKA( playerid, "Nemate 35$ kod sebe." );
			DajIgracuNovac( playerid, -35 );
			PlayerInfo[ playerid ][ xCigare ] += 20;
			BussinesRodaMoney( 20 );
			SendInfoMessage( playerid, "Kupili ste kutiju cigareta za 35$." );
			format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
			PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			return 1;
		}
		else if( strcmp( item, "upaljac",true) == 0 )
		{
			if( PlayerInfo[ playerid ][ xNovac ] < 25 ) return GRESKA( playerid, "Nemate 25$ kod sebe." );
			DajIgracuNovac( playerid, -25 );
			PlayerInfo[ playerid ][ xUpaljac ] = 1;
			BussinesRodaMoney( 15 );
			SendInfoMessage( playerid, "Kupili ste upaljac za 25$." );
			format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
			PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			return 1;
		}
		else if( strcmp( item, "sodab",true) == 0)
		{

			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda sodab [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*80 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*80 );
			SendInfoMessage( playerid, "Kupili ste %d kesica sode bikarbone za %d$.", kolicina, kolicina*80 );
			DajIgracuNovac( playerid, -kolicina*80 );
			PlayerInfo[ playerid ][ xSodaB ] += kolicina;
			BussinesRodaMoney( kolicina*60 );
			format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
			PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			return 1;
		}
		else if( strcmp( item, "desvoda",true) == 0)
		{
			if( sscanf( params, "s[32]d", item, kolicina ) )
			{
				SendUsageMessage( playerid, "/roda desvoda [ kolicina ]");
				return 1;
			}
			if( PlayerInfo[ playerid ][ xNovac ] < kolicina*40 ) return GRESKA( playerid, "Nemate %d$ kod sebe.", kolicina*40 );
			SendInfoMessage( playerid, "Kupili ste %d flasa destilovane vode za %d$.", kolicina, kolicina*40 );
			DajIgracuNovac( playerid, -kolicina*40 );
			PlayerInfo[ playerid ][ xDesVoda ] += kolicina;
			BussinesRodaMoney( kolicina*30 );
			format( globalstring, sizeof( globalstring ), "%s kupuje stvari u marketu.", ImeIgraca( playerid ) );
			PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
			return 1;
		}
		else
		{
		
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/roda [ IZBOR ]");
			SendClientMessagee( playerid, BELA, "[IZBOR] pizza(100$), uze(200$), maska(800$), sok(40$), pivo(55$)");
			SendClientMessagee( playerid, BELA, "[IZBOR] hamburger(65$), piletina(250$), cigare(35$), upaljac(25$)");
			SendClientMessagee( playerid, BELA, "[IZBOR] sodab(80$), desvoda(40$)");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		}
	}
	else return GRESKA( playerid, "Morate biti u RODA marketu." );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buy( playerid, params[] )
{
	new businessId = GetPlayerBusinessId( playerid, VRSTA_MARKET );

	if( businessId == -1 )
	{
		GRESKA( playerid, "Morate biti kod kase u marketu da bi koristili ovu komandu." );
	}
	else if( businessId == -2 )
	{
		GRESKA( playerid, "Nemamo vise proizvoda!" );
	}
	else
	{
		new aa1,bb,cc,dd;
		aa1 = IsPlayerInRangeOfPoint( playerid, 3.0,80.1054,1947.5295,-46.5000);
		bb = IsPlayerInRangeOfPoint( playerid, 3.0,80.2422,1944.5304,-46.5000);
		cc = IsPlayerInRangeOfPoint( playerid, 3.0,80.1232,1941.5316,-46.5000);
		dd = IsPlayerInRangeOfPoint( playerid, 3.0,80.1526,1938.2695,-46.5000);
		
		if( IsPlayerInRangeOfPoint( playerid, 3.0, -28.0849,-89.9528,1003.5469 ) || aa1 || bb || cc || dd ) 
		{
			if( UkupnaCena[ playerid ] == 0 ) return GRESKA( playerid, "Nemas stvari u korpi koje bi kupio." );
			format( globalstring, sizeof( globalstring ), "Ukupna cena: %d. Da li ste sigurni da zelite da kupite sve stvari iz korpe?", UkupnaCena[ playerid ] );
			ShowPlayerDialog( playerid, dialog_MARKETBUY, DSMSG, D_NASLOV, globalstring, "Kupi", "Odustani" );
		}else return GRESKA( playerid, "Niste kod kase!" );
		
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:trafika( playerid, params[] )
{
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti van vozila." );
	if( PoredTrafike( playerid ) )
	{
		ShowPlayerDialog( playerid, dialog_KIOSK, DSL, D_NASLOV, "Dopuna (20$)\nDopuna (50$)\nDopuna (100$)\nDopuna (500$)\nSprite (15$)\nCokoladica (35$)\nPivo (85$)\nCoca Cola (52$)\nCigare (35$)\nUpaljac (15$)\nVoki-toki (1000$)", D_ODABERI, D_ODUSTANI );
	}
	else return GRESKA( playerid, "Morate biti kod trafike.");

	return true;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:buyhelmet( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1990.9835, -2065.2139, 13.9252 ) ) return GRESKA( playerid, "Morate biti u prodavnici za kacige kod spawna.");
	if( PlayerInfo[ playerid ][ xNovac ] < 100 ) return GRESKA( playerid, "Nemate dovoljno novca(100$)" );
	if( PlayerInfo[ playerid ][ xHelmet ] != 0) return GRESKA( playerid, "Vec imate kupljenu kacigu." );
	new helmet[6];
	helmet[ 0 ] = 18936;
	helmet[ 1 ] = 18937;
	helmet[ 2 ] = 18938;
	helmet[ 3 ] = 18977;
	helmet[4] = 18978;
	helmet[5] = 18979;
	ShowModelSelectionMenuEx( playerid, helmet, 6, "Helmets", 7, 90.0, 90.0, 90.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gps( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xGpsLevel ] )
	{
		GRESKA( playerid, "Ne posjedujete rucni GPS" );
		return true;
	}
	ShowPlayerDialog( playerid, dialog_GPS_FIND, DSL, "Izaberi tip:", "Gradske lokacije\nLokacija kuce\nLokacija biznisa\nLokacija posla", D_ODABERI, D_ODUSTANI );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gpsoff( playerid, params[] )
{
	//if( GetPVarInt( playerid, "gPlayerCheckpointStatus") == 0 ) return GRESKA( playerid, "Nemas ni jedan upaljen checkpoint." );
	Dimi_DisablePlayerCheckpoint( playerid );
	SendClientMessagee( playerid, ZUTA, "Ugasili ste checkpoint.");
	CheckpointStatus[ playerid ] = 0;
	PlayerTextDrawHide(playerid, PlayerGpsRadarText[ playerid ] );
	if( IsValidDynamicMapIcon( PlayerGpsRadar[ playerid ][_pgrIconId ] ) )
	{
		DestroyDynamicMapIcon( PlayerGpsRadar[ playerid ][_pgrIconId] );
	}
	PlayerGpsRadar[ playerid ][_pgrIconId] = -1;
	if( IsValidDynamicObject( PlayerGpsRadar[ playerid ][_pgrObject ] ) )
	{
		DestroyDynamicObject( PlayerGpsRadar[ playerid ][_pgrObject] );
	}
	PlayerGpsRadar[ playerid ][_pgrObject] = -1;
	return true;
}
/////////////////////////////GIGATRON///////////////////////////////////////////
CMD:kupitelefon( playerid, params[] )
{

	if(!IsPlayerInRangeOfPoint(playerid,50.0,1395.9540,-1197.2256,2002.9253)) return greska(playerid,"Niste u Gigatronu, prvo - idite tamo i nabavite zeljenu aparaturu!");
	
	ShowPlayerDialog( playerid, dialog_BUY_MOBILEPHONE, DSL, "Telefoni", "Samsung Galaxy S5 - 6.985$\nNokia Lumia 930 - 5.351$\nSony Xperia Z3 - 6.101$\nApple iPhone 6 - 4.568$\nLG Nexus 5 - 3.657$\nHTC Desire - 2.657$\nHuawei Ascend Mate - 1.245$\nAlcatel One Touch - 1.278$\nMotorola Nexus 6 - 5.975$\nBlackberry Z30 LTE - 3.422$", D_ODABERI, D_ODUSTANI );
	
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:kupisim( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1395.9540,-1197.2256,2002.9253)) return greska(playerid,"Niste u Gigatronu, prvo - idite tamo i nabavite zeljenu aparaturu!");
	
	ShowPlayerDialog( playerid, dialog_KUPIKARTICU, DSL, "Sim kartice", "MTS\nVIP\nTelenor", D_ODABERI, D_ODUSTANI );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiradio( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1395.9540,-1197.2256,2002.9253)) return greska(playerid,"Niste u Gigatronu, prvo - idite tamo i nabavite zeljenu aparaturu!");
	
	if( PlayerInfo[ playerid ][ xNovac ] < 550 ) return GRESKA( playerid, "Nemate dovoljno novca(550$)" );
	if( PlayerInfo[ playerid ][ xBoombox ] == true ) return GRESKA( playerid, "Vec imate radio!" );
	DajIgracuNovac( playerid, -550 );
	BussinesMoney( uFirmi[ playerid ], 55 );
	PlayerInfo[ playerid ][ xBoombox ] = true;
	SendInfoMessage( playerid, "Kupili ste radio koristite '/radio' za koristenje!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupilaptop( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1395.9540,-1197.2256,2002.9253)) return greska(playerid,"Niste u Gigatronu, prvo - idite tamo i nabavite zeljenu aparaturu!");

	if( PlayerInfo[ playerid ][ xNovac ] < 2000 ) return GRESKA( playerid, "Nemas dovoljno novca (2000$)!" );

	new id;
	if( Inventory_HasItem(playerid, "Laptop" ) )
	{
		GRESKA( playerid, "Vec imate laptop !" );
	}
	else if( !Inventory_HasItem(playerid, "Laptop" ) )
	{
		id = Inventory_Add( playerid, "Laptop", 19893 );
		if( id != -1 )
		{
			SendInfoMessage( playerid, "Kupio si laptop za 20.000$." );
			DajIgracuNovac( playerid, -20000 );
			BussinesMoney( uFirmi[ playerid ], 60 );
		}
		else return GRESKA( playerid, "Pun vam je inventory nema mjesta!" );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupigps( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1395.9540,-1197.2256,2002.9253)) return greska(playerid,"Niste u Gigatronu, prvo - idite tamo i nabavite zeljenu aparaturu!");
	new broj;
	if( sscanf( params, "d", broj ) )
	{
		SendUsageMessage( playerid, "/kupigps[ broj uredjaja ]");
		SendClientMessagee( playerid, BELA, "VRSTE: 1. GPS lokator vozila - 700$ | 2. GPS za lokacije - 500$/1000$");
		return 1;
	}
	if( broj == 1 )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 700 ) return GRESKA( playerid, "Nemate dovoljno novca(700$)" );
		if( KupljenGPS[ playerid ] == 1 ) return GRESKA( playerid, "Vec ste kupili GPS uredjaj." );
		DajIgracuNovac( playerid, -700 );
		BussinesMoney( uFirmi[ playerid ], 70 );
		KupljenGPS[ playerid ] = 1;
		SendInfoMessage( playerid, "Kupili ste GPS lokator vozila i platili 700$, ugradite ga u vase vozilo!" );
		return 1;
	}
	else if( broj == 2 )
	{
		ShowPlayerDialog( playerid, dialog_BUY_GPS, DSL, "Tip GPS-a?", "Osnovni\nSrednji\nNapredni", D_ODABERI, D_ODUSTANI );
		return 1;
	}

	return true;
}
//////////////////////////////////////////////////////////////////////////////////
// CLOTHING SYSTEM
CMD:kupiodecu( playerid, params[] )
{
	if(PlayerInfo[playerid][xAdmin] == 0 && \
		PlayerInfo[playerid][xHelper] == 0 && \
		PlayerInfo[playerid][xClan] == 0 && \
		PlayerInfo[playerid][xLevel] >= 5 && \
		PlayerInfo[playerid][xProperty][0] == -1 &&\
		PlayerInfo[playerid][xProperty][1] == -1 &&\
		PlayerInfo[playerid][xProperty][2] == -1
	) return greska(playerid,"Ne mozes mijenjati skin jer si beskucnik!");

	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca(500$).");
	if(!AdminDuty[playerid] && !PDuty[playerid] && PlayerInfo[playerid][xVIPLevel] != 5) 
	{
		if( PlayerInfo[ playerid ][ xClan ] != 0 ) return GRESKA( playerid, "Ne mozete kupiti skin jer ste u organizaciji." ); 
	}
	if( IsPlayerInRangeOfPoint( playerid, 3.0, 1309.6923, -882.9189, 39.5781 ) )
	{
		ShowModelSelectionMenu( playerid, skinlist, "Select Skin");
	}
	else
	{
		for( new i = 1; i < MAX_BUSSINES; i++ )
		{
			if( IsPlayerInRangeOfPoint( playerid, 35.0, BussinesInfo[ i ][ bExitX ], BussinesInfo[ i ][ bExitY ], BussinesInfo[ i ][ bExitZ ] ) && GetPlayerVirtualWorld( playerid ) == BussinesInfo[ i ][ bInVW ] )
			{
				if( BussinesInfo[ i ][ bType ] == VRSTA_BINCO || BussinesInfo[ i ][ bType ] == VRSTA_SUBURBAN || BussinesInfo[ i ][ bType ] == VRSTA_VICTIM || BussinesInfo[ i ][ bType ] == VRSTA_ZIP )
				{

					ShowModelSelectionMenu( playerid, skinlist, "Select Skin");
				}
				else return GRESKA( playerid, "Morate biti u butiku da bi koristili ovu komandu.");
			}
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buyglasses( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 209.8154, -33.7277, 1001.9297 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u Suburbanu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 400 ) return GRESKA( playerid, "Nemate dovoljno novca(400$).");
	if( PlayerInfo[ playerid ][ xSungMask ] != 0) return GRESKA( playerid, "Vec imate kupljene naocare ili masku." );
	new bandanas[13];
	bandanas[ 0 ] = 19138;
	bandanas[ 1 ] = 19022;
	bandanas[ 2 ] = 19028;
	bandanas[ 3 ] = 19033;
	bandanas[4] = 19012;
	bandanas[5] = 19006;
	bandanas[6] = 19009;
	bandanas[7] = 19008;
	bandanas[8] = 19034;
	bandanas[9] = 19035;
	bandanas[10] = 19029;
	bandanas[11] = 19139;
	bandanas[12] = 19140;
	ShowModelSelectionMenuEx( playerid, bandanas, 13, "Glasses", 1, 0.0, 0.0, 90.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buyfbandanas( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 151.2055, -92.5647, 1001.8047 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u Zipu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca(500$)." );
	if( PlayerInfo[ playerid ][ xFace ] != 0) return GRESKA( playerid, "Vec imate kupljenu maramu." );
	new bandanas[9];
	bandanas[ 0 ] = 18912;
	bandanas[ 1 ] = 18913;
	bandanas[ 2 ] = 18914;
	bandanas[ 3 ] = 18915;
	bandanas[4] = 18916;
	bandanas[5] = 18917;
	bandanas[6] = 18918;
	bandanas[7] = 18919;
	bandanas[8] = 18920;
	ShowModelSelectionMenuEx( playerid, bandanas, 9, "Bandanas", 2, 90.0, 90.0, 0.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buyhbandanas( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 171.4970, -92.8723, 1001.8047 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u Zipu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca(500$)." );
	if( PlayerInfo[ playerid ][ xHead ] != 0) return GRESKA( playerid, "Vec imate kupljenu kapu/bandanu/sesir." );
	new bandanas[19];
	bandanas[ 0 ] = 18891;
	bandanas[ 1 ] = 18892;
	bandanas[ 2 ] = 18893;
	bandanas[ 3 ] = 18894;
	bandanas[4] = 18895;
	bandanas[5] = 18896;
	bandanas[6] = 18897;
	bandanas[7] = 18898;
	bandanas[8] = 18899;
	bandanas[9] = 18900;
	bandanas[10] = 18901;
	bandanas[11] = 18902;
	bandanas[12] = 18903;
	bandanas[13] = 18904;
	bandanas[14] = 18905;
	bandanas[15] = 18906;
	bandanas[16] = 18907;
	bandanas[17] = 18908;
	bandanas[18] = 18910;
	ShowModelSelectionMenuEx( playerid, bandanas, 19, "Bandanas", 3, 90.0, 90.0, 0.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buycaps( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 209.3052,-7.9960,1005.2109 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u Victimu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 700 ) return GRESKA( playerid, "Nemate dovoljno novca(700$)." );
	if( PlayerInfo[ playerid ][ xHead ] != 0) return GRESKA( playerid, "Vec imate kupljenu kapu/bandanu/sesir." );
	new bandanas[5];
	bandanas[ 0 ] = 18939;
	bandanas[ 1 ] = 18940;
	bandanas[ 2 ] = 18941;
	bandanas[ 3 ] = 18942;
	bandanas[4] = 18943;
	ShowModelSelectionMenuEx( playerid, bandanas, 5, "Caps", 4, 0.0, -90.0, 0.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:buyhats( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 205.0401,-100.3267,1005.2578 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u Bincu." );
	if( PlayerInfo[ playerid ][ xNovac ] < 600 ) return GRESKA( playerid, "Nemate dovoljno novca(600$)." );
	if( PlayerInfo[ playerid ][ xHead ] != 0) return GRESKA( playerid, "Vec imate kupljenu kapu/bandanu/sesir." );
	new bandanas[22];
	bandanas[ 0 ] = 19067;
	bandanas[ 1 ] = 19068;
	bandanas[ 2 ] = 19069;
	bandanas[ 3 ] = 18926;
	bandanas[4] = 18927;
	bandanas[5] = 18928;
	bandanas[6] = 18929;
	bandanas[7] = 18930;
	bandanas[8] = 18931;
	bandanas[9] = 18932;
	bandanas[10] = 18933;
	bandanas[11] = 18934;
	bandanas[12] = 18935;
	bandanas[13] = 19093;
	bandanas[14] = 19160;
	bandanas[15] = 18944;
	bandanas[16] = 18945;
	bandanas[17] = 18946;
	bandanas[18] = 18947;
	bandanas[19] = 18948;
	bandanas[20] = 18949;
	bandanas[21] = 18950;
	bandanas[21] = 18951;
	ShowModelSelectionMenuEx( playerid, bandanas, 22, "Hats", 5, 0.0, -90.0, 0.0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:trazi( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xRanac ] == 0 ) return GRESKA( playerid, "Nemate ranac." );
	if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
	if( TrashSearch[ playerid ] == 1 ) return GRESKA( playerid, "Vec trazite po kontejneru!");
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes da trazis dok si u vozilu." );
	if( TrashLimit[ playerid ] != 0 ) return GRESKA( playerid, "Morate sacekati 30 minuta prije nego sto trazite ponovo!");
	if( Maskuse[ playerid ] == true )
		format( globalstring, sizeof( globalstring ), "Maska_%d otvara kontejner, naginje se i pocinje traziti.", PlayerInfo[ playerid ][ xMaskID ] );
	else
		format( globalstring, sizeof( globalstring ), "%s otvara kontejner, naginje se i pocinje traziti.", ImeIgraca( playerid ) );
	PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	TogglePlayerControllable( playerid, false );
	Odbrojavanje[ playerid ] = 25;
	VremeTDControl( playerid, true );
	TrashLimit[ playerid ] = 1800;
	TrashSearch[ playerid ] = 1;
	TrashTimer[ playerid ] = SetTimerEx( "TrashLimitOff", 25000, false, "i", playerid );
	ApplyAnimation(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:robatm( playerid, params[] )
{
	if( robbingATM[playerid] != -1 ) return greska(playerid,"Ne mozes pljackati ako vec pljackas!");
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new atmid = GetNearestAtm( playerid );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Tek sa levelom 3+ mozes da opljackas bankomat." );
	if( GetNearestAtm( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu bankomata." );
	if( PlayerInfo[ playerid ][ xPljackaVreme ] != 0 ) return GRESKA( playerid, "Vec si pljackao, do sledece pljacke sacekaj %d minuta.", PlayerInfo[ playerid ][ xPljackaVreme ] );
	if( atmInfo[ atmid ][ atmVremeDoRoba ] != 0 ) return GRESKA( playerid, "Ovaj bankomat je vec opljackan." );

	new odabir;
	if(sscanf(params,"i",odabir)) 
	{
		SendUsageMessage(playerid,"/robatm [ odabir ]");
		SendClientMessagee(playerid,-1,"[Opcije] 1 - presecanje zica, 2 - hakovanje atma, 3 - kradja novaca");
		return true;
	}

	if( odabir == 1 )
	{
		if( atmid == -1 ) return GRESKA( playerid, "Nisi pored bankomata." );
		if( atmInfo[ atmid ][ atmPreseceneZice ] == true ) return GRESKA( playerid, "Vec su presecene zice." );
		if( atmInfo[ atmid ][ atmVremeDoRoba ] != 0 ) return GRESKA( playerid, "Ovaj bankomat je vec opljackan." );
		if( GetWeapon( playerid ) != 4 ) return GRESKA( playerid, "Morate da imate noz u rukama" );

		atmrobTimer[ playerid ] = SetTimerEx( "RobZiceAtm", 1000, true, "d", playerid );
		robbingATM[ playerid ] = atmid;
		robbingATMSeconds[ playerid ] = 95;

		SendInfoMessage( playerid, "Poceli ste sa obijanjem bankomata, ne pomerajte se sa svog mesta." );
		return 1;		
	}
	if( odabir == 2 )
	{
		if( !LaptopRuke[ playerid ] ) return GRESKA( playerid, "Nemate laptop u rukama." );
		if( atmid == -1 ) return GRESKA( playerid, "Nisi pored bankomata." );
		if( atmInfo[ atmid ][ atmProbijenBios ] == true ) return GRESKA( playerid, "Vec je hakovan ovaj bankomat." );
		if( atmInfo[ atmid ][ atmVremeDoRoba ] != 0 ) return GRESKA( playerid, "Ovaj bankomat je vec opljackan." );

		robbingATM[ playerid ] = atmid;
		atmLoadingTDControl( playerid, true );

		atmrobTimer[ playerid ] = SetTimerEx( "ProgresAtmBar", 1000, false, "d", playerid );

		return true;
	}
	if( odabir == 3 )
	{
		if( atmid == -1 ) return GRESKA( playerid, "Nisi pored bankomata." );
		if( atmInfo[ atmid ][ atmVremeDoRoba ] != 0 ) return GRESKA( playerid, "Ovaj bankomat je vec opljackan." );
		if( atmInfo[ atmid ][ atmPreseceneZice ] == true ) 
		{
			new pokusaj = 2;//random(4);
			if( pokusaj == 1 ) 
			{
				Dimi_KillTimer( atmrobTimer[ playerid ] );
				
				SendInfoMessage( playerid, "Niste uspeli ukrasti novac, alarm se oglasio." );
				PostaviWanted( playerid, "Pokusaj pljacke bankomata", "Nepoznati", 3 );

				atmInfo[ atmid ][ atmVremeDoRoba ] = 60;
				SacuvajATM( atmid );
				PlayerInfo[ playerid ][ xPljackaVreme ] = 60;

			}
			else {
				Dimi_KillTimer( atmrobTimer[ playerid ] );
				
				new money = ( random(5000)+5000 );
				DajIgracuNovac( playerid, money );
				SavePlayer( playerid ); UpdateBankTD( playerid );
				SendInfoMessage( playerid, "Uspjesno ste ukrali iz bankomata %d$.", money );
				PostaviWanted( playerid, "Pljacka bankomata", "Nepoznati", 3 );

				atmInfo[ atmid ][ atmVremeDoRoba ] = 120;
				SacuvajATM( atmid );
				PlayerInfo[ playerid ][ xPljackaVreme ] = 120;
			}
		}
		else if( atmInfo[ atmid ][ atmProbijenBios ] == true ) 
		{
			new pokusaj = 2;//random(4);
			if( pokusaj == 1 ) {
				Dimi_KillTimer( atmrobTimer[ playerid ] );
				
				SendInfoMessage( playerid, "Niste uspeli prebaciti novac na vas racun, sistem zastite bankomata je ponovno podignut." );
				PostaviWanted( playerid, "Pokusaj pljacke bankomata", "Nepoznati", 3 );
				
				atmInfo[ atmid ][ atmVremeDoRoba ] = 60;
				SacuvajATM( atmid );
				PlayerInfo[ playerid ][ xPljackaVreme ] = 60;

			}
			else {
				Dimi_KillTimer( atmrobTimer[ playerid ] );
				
				new money = ( random(5000)+10000 );
				PlayerInfo[ playerid ][ xBRacun ] += money;
				SavePlayer( playerid ); UpdateBankTD( playerid );
				SendInfoMessage( playerid, "Uspjesno ste sa bankomata prebacili %d$ na vas racun.", money );
				PostaviWanted( playerid, "Pljacka bankomata", "Nepoznati", 3 );

				atmInfo[ atmid ][ atmVremeDoRoba ] = 120;
				SacuvajATM( atmid );
				PlayerInfo[ playerid ][ xPljackaVreme ] = 120;

			}
		}
		else return GRESKA( playerid, "Moras prvo da hakujes bankomat ili da mu preseces zice." );
		return true;
	}
	if( odabir != 1 && odabir != 2 && odabir != 3 ) return greska(playerid,"Pogresan odabir opcije, opcija ne moze biti manja od 1 ili veca od 3");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:bankomat( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci i uzmes karticu za bankomat." );
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes koristiti ovu komandu dok si u vozilu." );
	if( GetNearestAtm( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu bankomata." );
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendUsageMessage( playerid, "/bankomat [opcija]");
		SendClientMessagee( playerid, BELA, "stanje, podigni");
		return 1;
	}
	if( strcmp( item, "stanje",true) == 0)
	{
		format( globalstring, sizeof( globalstring ), "Imate $%d na vasem bankovnom racunu.", PlayerInfo[ playerid ][ xBRacun ] );
		SendClientMessage( playerid, ZUTA, globalstring );
		return 1;
	}
	else if( strcmp( item, "podigni",true) == 0)
	{
		new cashdeposit;
		if( sscanf( params, "s[32]i", item, cashdeposit ) )
		{
			SendUsageMessage( playerid, "/bankomat podigni [ iznos ]");
			return 1;
		}
		if( cashdeposit > PlayerInfo[ playerid ][ xBRacun ] || cashdeposit < 1 ) return GRESKA( playerid, "Nemate toliko novca !");
		DajIgracuNovac( playerid, cashdeposit );
		PlayerInfo[ playerid ][ xBRacun ] -= cashdeposit ;
		format( globalstring, sizeof( globalstring ), "Podigli ste $%d s vaseg racuna. Na racunu ima: $%d ", cashdeposit, PlayerInfo[ playerid ][ xBRacun ] );
		SendClientMessagee( playerid, ZUTA, globalstring); UpdateBankTD( playerid );
		return 1;
	}
	else
	{
		SendUsageMessage( playerid, "/bankomat [opcija]");
		SendClientMessagee( playerid, BELA, "stanje, podigni");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:baci( playerid, params[] )
{
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/baci [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] face, head, naocare, kaciga, sat");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "face",true) == 0)
	{
		if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
		if( PlayerInfo[ playerid ][ xFace ] == 0 ) return GRESKA( playerid, "Ne posedujes maramu(bandanu)." );
		if( FaceOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da skines maramu sa glave(/face)." );
		PlayerInfo[ playerid ][ xFace ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 0 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 1 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 2 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 3 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 4 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 5 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 6 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 7 ] = 0;
		PlayerInfo[ playerid ][ xFacePos ][ 8 ] = 0;
		SendClientMessagee( playerid, UGBOJA, "Bacio si maramu(bandanu) u kontejner(nemas je vise u statsima). " );
		return 1;
	}
	else if( strcmp( item, "head",true) == 0)
	{
		if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
		if( PlayerInfo[ playerid ][ xHead ] == 0 ) return GRESKA( playerid, "Ne posedujes kapu/sesir/maramu(bandanu)." );
		if( HeadOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da skines kapu/sesir/maramu sa glave(/head)." );
		PlayerInfo[ playerid ][ xHead ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 0 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 1 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 2 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 3 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 4 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 5 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 6 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 7 ] = 0;
		PlayerInfo[ playerid ][ xHeadPos ][ 8 ] = 0;
		SendClientMessagee( playerid, UGBOJA, "Bacio si kapu/sesir/maramu(bandanu) u kontejner(nemas je vise u statsima). " );
		return 1;
	}
	else if( strcmp( item, "naocare",true) == 0)
	{
		if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
		if( PlayerInfo[ playerid ][ xSungMask ] == 0 ) return GRESKA( playerid, "Ne posedujes naocare." );
		if( SungOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da skines naocare sa glave(/naocare)." );
		PlayerInfo[ playerid ][ xSungMask ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 0 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 1 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 2 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 3 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 4 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 5 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 6 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 7 ] = 0;
		PlayerInfo[ playerid ][ xSungMaskPos ][ 8 ] = 0;
		SendClientMessagee( playerid, UGBOJA, "Bacio si naocare u kontejner(nemas je vise u statsima). " );
		return 1;
	}
	else if( strcmp( item, "kaciga",true) == 0)
	{
		if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
		if( PlayerInfo[ playerid ][ xHelmet ] == 0 ) return GRESKA( playerid, "Ne posedujes kacigu." );
		if( HelmetOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da skines kacigu sa glave(/kaciga)." );
		PlayerInfo[ playerid ][ xHelmet ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 0 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 1 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 2 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 3 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 4 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 5 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 6 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 7 ] = 0;
		PlayerInfo[ playerid ][ xHelmetPos ][ 8 ] = 0;
		SendClientMessagee( playerid, UGBOJA, "Bacio si kacigu u kontejner(nemas je vise u statsima). " );
		return 1;
	}
	else if( strcmp( item, "sat",true) == 0)
	{
		if( GetNearestContainer( playerid ) == -1 ) return GRESKA( playerid, "Moras biti blizu kontejnera." );
		if( PlayerInfo[ playerid ][ xSat ] == 0 ) return GRESKA( playerid, "Ne posedujes sat." );
		PlayerInfo[ playerid ][ xSat ] = 0;
		SendClientMessagee( playerid, UGBOJA, "Bacio si sat u kontejner(nemas ga vise u statsima)." );
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/baci [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] face, head, naocare, kaciga, sat");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:izmeni( playerid, params[] )
{
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/izmeni [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] face, head, naocare, kaciga");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "face",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xFace ] == 0 ) return GRESKA( playerid, "Ne posedujes maramu(bandanu)." );
		if( !FaceOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da stavis maramu na glavu(/face)." );
		EditAttachedObject( playerid, OBJECT_SLOT_BANDANA); EditingBody[ playerid ] = 2;
		return 1;
	}
	else if( strcmp( item, "head",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xHead ] == 0 ) return GRESKA( playerid, "Ne posedujes kapu/sesir/maramu(bandanu)." );
		if( !HeadOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da stavis kapu/sesir/maramu na glavu(/head)." );
		EditAttachedObject( playerid, OBJECT_SLOT_HEAD); EditingBody[ playerid ] = 3;
		return 1;
	}
	else if( strcmp( item, "naocare",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xSungMask ] == 0 ) return GRESKA( playerid, "Ne posedujes naocare." );
		if( !SungOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da stavis naocare na glavu(/naocare)." );
		EditAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL); EditingBody[ playerid ] = 1;
		return 1;
	}
	else if( strcmp( item, "kaciga",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xHelmet ] == 0 ) return GRESKA( playerid, "Ne posedujes kacigu." );
		if( !HelmetOn[ playerid ] ) return GRESKA( playerid, "Prvo moras da stavis kacigu na glavu(/kaciga)." );
		EditAttachedObject( playerid, OBJECT_SLOT_HELMET ); EditingBody[ playerid ] = 6;
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/izmeni [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] face, head, naocare, kaciga");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:face( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xFace ] == 0 ) return GRESKA( playerid, "Ne posedujes maramu(bandanu)." );
	if( !FaceOn[ playerid ] )
	{
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_BANDANA, PlayerInfo[ playerid ][ xFace ],2,PlayerInfo[ playerid ][ xFacePos ][ 0 ],PlayerInfo[ playerid ][ xFacePos ][ 1 ],PlayerInfo[ playerid ][ xFacePos ][ 2 ],PlayerInfo[ playerid ][ xFacePos ][ 3 ],PlayerInfo[ playerid ][ xFacePos ][ 4 ],PlayerInfo[ playerid ][ xFacePos ][ 5 ],PlayerInfo[ playerid ][ xFacePos ][ 6 ],PlayerInfo[ playerid ][ xFacePos ][ 7 ],PlayerInfo[ playerid ][ xFacePos ][ 8 ], 0, 0);
		FaceOn[ playerid ] = true;
		if( PlayerInfo[ playerid ][ xFacePos ][ 6 ] > 2.0 || PlayerInfo[ playerid ][ xFacePos ][ 7 ] > 2.0 || PlayerInfo[ playerid ][ xFacePos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija marame odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_BANDANA ); EditingBody[ playerid ] = 2;
			return true;
		}
		
		SendInfoMessage( playerid, "Stavio si maramu na glavu." );
	}
	else if( FaceOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BANDANA);
		FaceOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si maramu sa glave." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kaciga( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xHelmet ] == 0 ) return GRESKA( playerid, "Nemate kacigu." );
	if( !HelmetOn[ playerid ] )
	{
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_HELMET ) ) return GRESKA( playerid, "Vec imate objekt na glavi.");
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_HELMET, PlayerInfo[ playerid ][ xHelmet ],2,PlayerInfo[ playerid ][ xHelmetPos ][ 0 ],PlayerInfo[ playerid ][ xHelmetPos ][ 1 ],PlayerInfo[ playerid ][ xHelmetPos ][ 2 ],PlayerInfo[ playerid ][ xHelmetPos ][ 3 ],PlayerInfo[ playerid ][ xHelmetPos ][ 4 ],PlayerInfo[ playerid ][ xHelmetPos ][ 5 ],PlayerInfo[ playerid ][ xHelmetPos ][ 6 ],PlayerInfo[ playerid ][ xHelmetPos ][ 7 ],PlayerInfo[ playerid ][ xHelmetPos ][ 8 ], 0, 0);
		HelmetOn[ playerid ] = true;
		if( PlayerInfo[ playerid ][ xHelmetPos ][ 6 ] > 2.0 || PlayerInfo[ playerid ][ xHelmetPos ][ 7 ] > 2.0 || PlayerInfo[ playerid ][ xHelmetPos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija kacige odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_HELMET ); EditingBody[ playerid ] = 6;
			return true;
		}
		SendInfoMessage( playerid, "Stavio si kacigu na glavu." );
	}
	else if( HelmetOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_HELMET );
		HelmetOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si kacigu sa glave." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:head( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xHead ] == 0 ) return GRESKA( playerid, "Ne posedujes kapu/sesir/maramu(bandanu)." );
	if( !HeadOn[ playerid ] )
	{
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_HEAD ) ) return GRESKA( playerid, "Vec imate objekt na glavi." );
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_HEAD, PlayerInfo[ playerid ][ xHead ],2,PlayerInfo[ playerid ][ xHeadPos ][ 0 ],PlayerInfo[ playerid ][ xHeadPos ][ 1 ],PlayerInfo[ playerid ][ xHeadPos ][ 2 ],PlayerInfo[ playerid ][ xHeadPos ][ 3 ],PlayerInfo[ playerid ][ xHeadPos ][ 4 ],PlayerInfo[ playerid ][ xHeadPos ][ 5 ],PlayerInfo[ playerid ][ xHeadPos ][ 6 ],PlayerInfo[ playerid ][ xHeadPos ][ 7 ],PlayerInfo[ playerid ][ xHeadPos ][ 8 ], 0, 0);
		HeadOn[ playerid ] = true;
		if( PlayerInfo[ playerid ][ xHeadPos ][ 6 ] > 2.0 || PlayerInfo[ playerid ][ xHeadPos ][ 7 ] > 2.0 || PlayerInfo[ playerid ][ xHeadPos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija kape/sesira/marame odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_HEAD ); EditingBody[ playerid ] = 3;
			return true;
		}

		SendInfoMessage( playerid, "Stavio si kapu/sesir/maramu na glavu." );
	}
	else if( HeadOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_HEAD);
		HeadOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si kapu/sesir/maramu sa glave." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:naocare( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSungMask ] == 0 ) return GRESKA( playerid, "Ne posedujes naocare." );
	if( !SungOn[ playerid ] )
	{
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL, PlayerInfo[ playerid ][ xSungMask ],2,PlayerInfo[ playerid ][ xSungMaskPos ][ 0 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 1 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 2 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 3 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 4 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 5 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 6 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 7 ],PlayerInfo[ playerid ][ xSungMaskPos ][ 8 ], 0, 0);
		SungOn[ playerid ] = true;
		if( PlayerInfo[ playerid ][ xSungMaskPos ][ 6 ] > 2.0 || PlayerInfo[ playerid ][ xSungMaskPos ][ 7 ] > 2.0 || PlayerInfo[ playerid ][ xSungMaskPos ][ 8 ] > 2.0 )
		{
			GRESKA( playerid, "Losa pozicija naocara odradi je ponovo." );
			EditAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL ); EditingBody[ playerid ] = 1;
			return true;
		}

		SendInfoMessage( playerid, "Stavio si naocare na glavu." );
	}
	else if( SungOn[ playerid ] )
	{
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_MASKSUNGL);
		SungOn[ playerid ] = false;
		SendInfoMessage( playerid, "Skinuo si naocare sa glave." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tie( playerid, params[] )
{
	if( Uze[ playerid ] != true )
	{
		GRESKA( playerid, "Nemas uze!" );
		return 1;
	}
	if( GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 438 ||
		GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 420 ||
		GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 431 ||
		GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 437 ||
		GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 416 )
	{
		GRESKA( playerid, "Ne mozete svezati nekoga dok ste u taxi-u / autobusu / kolima hitne pomoci.");
		return 1;
	}
	new giveplayerid;
	if( sscanf( params, "u", giveplayerid ) )
	{
		SendUsageMessage( playerid, "/tie [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( giveplayerid ) )
	{
		if( giveplayerid != INVALID_PLAYER_ID )
		{
			if( IgracZavezan[ giveplayerid ] == true )
			{
				GRESKA( playerid, "Igrac je vec zavezan !");
				return 1;
			}
			if( KnockedDown[ giveplayerid ] != true ) return GRESKA( playerid, "Moras prvo da oboris igraca. (/obori)" );
			if( IsPlayerNearPlayer( 8.0, playerid, giveplayerid ) )
			{
				new car = GetPlayerVehicleID( playerid );
				if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozes zavezati sam sebe!");
				if( IsPlayerInAnyVehicle( playerid ) && GetPlayerState( playerid ) == 2 && IsPlayerInVehicle( giveplayerid, car ) )
				{
					format( globalstring, sizeof( globalstring ), "* Zavezan si od strane %s ", ImeIgraca( playerid ) );
					SendClientMessagee( giveplayerid, SVETLOPLAVA, globalstring );
					format( globalstring, sizeof( globalstring ), "* Zavezaoao si %s ", ImeIgraca( giveplayerid ) );
					SendClientMessagee( playerid, SVETLOPLAVA, globalstring );

					if( Maskuse[ playerid ] == false )
						format( globalstring, sizeof( globalstring ), "* %s je svezao %s, da mu nebi pobjegao.", ImeIgraca( playerid ) ,ImeIgraca( giveplayerid ) );
					else
						format( globalstring, sizeof( globalstring ), "* Maska_%d je svezao %s, da mu nebi pobjegao.", PlayerInfo[ playerid ][ xMaskID ] ,ImeIgraca( giveplayerid ) );
					if( KnockedDown[giveplayerid] == true ) {
						Dimi_KillTimer( ClearKnock(giveplayerid) );
						//SetTimerEx( "ClearKnock", 20000, false, "i", giveplayerid );
					}
					PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					announcement( giveplayerid, "~r~Zavezan", 2500, 3 );
					Uze[ playerid ] = false;
					TogglePlayerControllable( giveplayerid, 0 );
					IgracZavezan[ giveplayerid ] = true;
					
				} else GRESKA( playerid, "Igrac nije autu, ili vi niste vozac !");
				
			} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:untie( playerid, params[] )
{
	new giveplayerid;
	if( sscanf( params, "u", giveplayerid ) )
	{
		SendUsageMessage( playerid, "/untie [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerInAnyVehicle(giveplayerid) ) return GRESKA(playerid, "Taj igrac je u vozilu - izbacite ga prvo!");
	if( IsPlayerConnected( giveplayerid ) )
	{
		if( giveplayerid != INVALID_PLAYER_ID )
		{
			if( IsPlayerNearPlayer(5.0, playerid, giveplayerid ) )
			{
				if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozes odvezati samog sebe - to mora neko drugi!");
				if( IgracZavezan[ giveplayerid ] == true )
				{
					format( globalstring, sizeof( globalstring ), "* Odvezan si od strane %s.", ImeIgraca( playerid ) );
					SendClientMessagee(giveplayerid, SVETLOPLAVA, globalstring);
					format( globalstring, sizeof( globalstring ), "* Odvezao si %s.", ImeIgraca( giveplayerid ) );
					SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
					announcement( giveplayerid, "~g~Odvezan", 2500, 3 );
					TogglePlayerControllable( giveplayerid, 1 );
					IgracZavezan[ giveplayerid ] = false;
					
				} else GRESKA( playerid, "Taj igrac nije vezan !");
				
			} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:eject( playerid, params[] )
{
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu da bi ste koristili ovu komandu !");
	if( GetPlayerState( playerid )!= PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Niste vozac !");
	new ID, string[ 75 ];
	if( sscanf( params, "u", ID ) )
	{
		SendUsageMessage( playerid, "/eject [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( ID ) )
	{
		if( ID != INVALID_PLAYER_ID )
		{
			if( ID == playerid ) return GRESKA( playerid, "Ne mozete izbaciti sami sebe!");
			if( IsPlayerInVehicle( ID, GetPlayerVehicleID( playerid ) ) )
			{
				format( string, sizeof( string ), "* Izbacili ste %s izvan auta!", ImeIgraca( ID ) );
				SendClientMessagee( playerid, SVETLOPLAVA, string);
				format( string, sizeof( string ), "* Izbacio vas je iz auta %s !", ImeIgraca( playerid ) );
				SendClientMessagee( ID, SVETLOPLAVA, string );
				new Float:vehPos[ 3 ];
				getPosBehindVehicle( GetPlayerVehicleID( playerid ), vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ], 0.0 );
				Dimi_SetPlayerPos( ID, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ] );
			}
			else
				GRESKA( playerid, "Taj igrac nije u vasem autu !");
		}
	}
	else
		GRESKA( playerid, "Nepravilan ID/DioImena!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rukovanje( playerid, params[] )
{
	new igrac, vrsta;
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes se rukovati ako si u vozilu!");
	if( sscanf( params, "ui", igrac, vrsta ) ) return SendUsageMessage( playerid, "/rukovanje [ ID/Ime ] [vrsta rukovanja(1-9)]");
	if( IsPlayerConnected(  igrac ) )
	{
		if( igrac != INVALID_PLAYER_ID)
		 {
			if( IsPlayerNearPlayer( 3.0, playerid, igrac ) )
			{
				if( IsPlayerInAnyVehicle( igrac ) ) return GRESKA( playerid, "Ne mozes se rukovati sa osobom koja je u vozilu!");
				if( igrac == playerid) return GRESKA( playerid, "Ne mozes se rukovati sam sa sobom!");
				format( globalstring, sizeof( globalstring ), "* Ponudio si rukovanje %s-u.", ImeIgraca( igrac ) );
				SendClientMessagee( playerid, 0x33CCFFAA, globalstring );
				format( globalstring, sizeof( globalstring ), "* %s ti je ponudio rukovanje.", ImeIgraca( playerid ) );
				SendClientMessagee( igrac, 0x33CCFFAA, globalstring );
				SendClientMessagee( igrac, 0xFF6347AA, "* Ako se zelis rukovati,prihvati rukovanje koristeci /prihvati rukovanje.");
				SetPVarInt( playerid, "ShakeOffer", igrac);
				SetPVarInt( igrac, "ShakeOffer", playerid );
				SetPVarInt( igrac, "ShakeStyle", vrsta);
				
			} else GRESKA( playerid, "Taj igrac nije blizu tebe !");
		}
		
	} else GRESKA( playerid, "Taj igrac nije na serveru!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:obori( playerid, params[] )
{
	new giveplayerid;
	if( sscanf( params, "u", giveplayerid ) )
	{
		SendUsageMessage( playerid, "/obori [ ID/Ime ]");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xLevel ] < 5) return GRESKA( playerid, "Moras biti najmanje Level 5 da koristis ovu komandu.");
	if( KnockedDown[ playerid ] == true ) return GRESKA( playerid, "Ne mozes koristiti ovu komandu dok si nokautiran.");
	if( !IsMeleeWeapon( GetWeapon( playerid ) ) ) return GRESKA( playerid, "Nemas nijedno melee oruzje u ruci da bi koristio ovu komandu!");
	if( IsPlayerConnected( giveplayerid ) )
	{
		if( giveplayerid != INVALID_PLAYER_ID )
		 {
			if( IsPlayerNearPlayer( 1.0, playerid, giveplayerid ) )
			{
				if( KnockedDown[ giveplayerid ] != true )
				   {
					if( giveplayerid == playerid ) return GRESKA( playerid, "Ne mozes sam sebe nokautirati.");
					if( IsPlayerInAnyVehicle( giveplayerid ) || IsPlayerInAnyVehicle( playerid ) ) return 1;
					new rands = random( 2 )+1;
					format( globalstring, sizeof( globalstring ), "* %s udara %s i pokusava ga oboriti na pod.", ImeIgraca( playerid ), ImeIgraca( giveplayerid ) );
					PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0, 1);
					if( rands == 1 )
					{
						TogglePlayerControllable( giveplayerid, 0 );
						ApplyAnimation( giveplayerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
						SetTimerEx( "ClearKnock", 20000, false, "i", giveplayerid );
						KnockedDown[ giveplayerid ] = true;
						format( globalstring, sizeof( globalstring ), "* %s ga je uspio oboriti na pod.", ImeIgraca( playerid ) );
						PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					}
					else
					{
						format( globalstring, sizeof( globalstring ), "* %s nije uspio oboriti covjeka na pod.", ImeIgraca( playerid ) );
						PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
					}
					return 1;
				} else GRESKA( playerid, "Igrac je vec nokautiran.");
				
			} else GRESKA( playerid, "Taj igrac nije blizu tebe !");
		}
		
	} else GRESKA( playerid, "Taj igrac nije na serveru!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rob( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLevel ] < 5 ) return GRESKA( playerid, "Morate biti level 5+.");
	new ID;
	if( sscanf( params, "u", ID ) )
	{
		SendUsageMessage( playerid, "/rob [ ID/Ime ]");
		return 1;
	}
	if( IsPlayerConnected( ID ) )
	{
		if( ID != INVALID_PLAYER_ID )
		{
			if( IgracZavezan[ ID ] != true ) return GRESKA( playerid, "Igrac mora biti zavezan da biste mu mogli pregledati novcanik!");
			if( IgracOpljackan[ ID ] == true ) return GRESKA( playerid, "Igrac je vec opljackan." );
			if( IsPlayerNearPlayer( 4.0, playerid, ID ) )
			{
				new novac = ( PlayerInfo[ ID ][ xNovac ]/10 );
				if( novac > 20000 ) novac = 20000;
				DajIgracuNovac( playerid, novac );
				DajIgracuNovac( ID, -novac );
				IgracOpljackan[ ID ] = true;
				SetTimerEx( "ClearPlayerRob", 240000, false, "i", ID );
				SendInfoMessage( playerid, "Opljackao si igraca %s i uzeo %d$.", ImeIgraca( ID ), novac );
				SendInfoMessage( ID, "%s vas je opljackao i uzeo vam %d$.", ImeIgraca( playerid ), novac );
				format( globalstring, sizeof( globalstring ), "* %s je izvadio novcanik %s i uzeo novac.", ImeIgraca( playerid ), ImeIgraca( ID ) );
				PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
				new string[ 128 ]; 
				format( string, sizeof( string ), "Igrac %s -> Igrac: %s | Novac: %d", ImeIgraca( playerid ), ImeIgraca( ID ), novac );
				LogSave( "Ostalo/LogRobIgraca.log", string );
				
			} else GRESKA( playerid, "Igrac nije dovoljno blizu tebe!");
		}
		
	} else GRESKA( playerid, "Taj igrac nije na serveru!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pojas( playerid, params[] )
{
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u autu!");
	if( IsVehicleBrod( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Ne mozete koristiti ovo, na brodu !");
	if( IsVehicleBajs( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Ne mozete koristiti ovo, na bicikli !");
	if( IsVehicleMotor( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Ne mozete koristiti ovo, na motoru !");
	if( Pojas[ playerid ] != true )
	{
		format( globalstring, sizeof( globalstring ), "* %s se hvata za pojas, te se vezuje njime.", ImeIgraca( playerid ) );
		PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
		Pojas[ playerid ] = true;
	}
	else
	{
		format( globalstring, sizeof( globalstring ), "* %s se hvata za pojas, te ga skida.", ImeIgraca( playerid ) );
		PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
		Pojas[ playerid ] = false;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:upali( playerid, params[] )
{
	if( IsPlayerConnected( playerid ) )
	{
		new vehicle = GetPlayerVehicleID( playerid ),
			engine,lights,alarm,doors,bonnet,boot,objective;

		if( !IsPlayerInAnyVehicle( playerid )) return GRESKA( playerid, "Morate biti u vozilu da biste koristili ovu komandu!");
		if( vCanDrive[ vehicle ] == 0 ) return GRESKA( playerid, "Ovo vozilo je unisteno i ne moze se pokrenuti.");
		if( IsVehicleBajs( vehicle ) ) return GRESKA( playerid, "Stvarno mislis upaliti biciklu? " );
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti vozac da bi ste mogli koristit ovu komandu.");
		if( Fuel[ vehicle ] == 0 ) return GRESKA( playerid, "Vozilo nema goriva ne mozete ga upaliti." );

		if( TipVozila[ vehicle ] == PRIVATNO_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vID ] == vehicle ) { }
			else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vID ] == vehicle ) { }
			else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vID ] == vehicle ) { }
			else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] != -1 && VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vID ] == vehicle ) { }
			else if( PlayerInfo[ playerid ][ xRezervniKljucevi ] == ScriptIDVozila[ vehicle ] ) { }
			else return GRESKA( playerid, "Nemate kljuceve ovog vozila." );

			GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
			if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
			PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
			SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
			SetPVarInt( playerid, "StartingVehicle", 1 );
			return 1;
		}
		else if( TipVozila[ vehicle ] == ORGANIZACIJSKO_VOZILO )
		{
			if( OrgaVozila[ vehicle ] == PlayerInfo[ playerid ][ xClan ] )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == POSLOVNO_VOZILO )
		{
		
			if( PosaoVozila[ vehicle ] == PlayerInfo[ playerid ][ xPosao ] )
			{
				GetVehicleParamsEx(vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == RENTANO_VOZILO )
		{
			if( Rentano[ playerid ] == vehicle )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == GRADONACELNIKOVO_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xGradRank ] == GRAD_DRIVER || PlayerInfo[ playerid ][ xGradRank ] == GRAD_LDRIVER )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuceve od ovog vozila ili uniformu vozaca gradonacelnika!");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == IZLOZBENO_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] == 7 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == ADMIN_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == HELPER_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == PROMOTER_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xPromoter ] >= 1 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == VIP_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xVIPLevel ] >= 1 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == POLAGANJE_VOZILO )
		{
			if( PlayerInfo[ playerid ][ xAdmin ] >= 4 || Polaganje[ playerid ] >= 1 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == PUMPA_VOZILO )
		{
			if( PumpaImanjeVozilo[ vehicle ] == PlayerInfo[ playerid ][ xFirmaID ] || PlayerInfo[ playerid ][ xAdmin ] >= 4 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else if( TipVozila[ vehicle ] == IMANJE_VOZILO )
		{
			if( PumpaImanjeVozilo[ vehicle ] == PlayerInfo[ playerid ][ xFieldID ] || PlayerInfo[ playerid ][ xAdmin ] >= 4 )
			{
				GetVehicleParamsEx( vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
				if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
				if( Maskuse[ playerid ] == true )
					format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
				else
					format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
				PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
				SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
				SetPVarInt( playerid, "StartingVehicle", 1 );
				return 1;
			}
			else
			{
				GRESKA( playerid, "Nemate kljuc ovog vozila.");
				return 1;
			}
		}
		else
		{
			GetVehicleParamsEx(vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
			if( engine == 1 ) return GRESKA( playerid, "Motor ovog vozila je vec upaljen - kucajte '/ugasi' da ga ugasite!" );
			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "* Maska_%d pokusava pokrenuti motor.", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "* %s pokusava pokrenuti motor.", ImeIgraca( playerid ) );
			PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
			SetTimerEx( "VehicleEngineStart", 1000, 0, "i", playerid );
			SetPVarInt( playerid, "StartingVehicle", 1 );
			return 1;
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ugasi( playerid, params[] )
{
	new vehicle = GetPlayerVehicleID( playerid ),
		engine,lights,alarm,doors,bonnet,boot,objective;

	if( !IsPlayerInAnyVehicle( playerid )) return GRESKA( playerid, "Morate biti u vozilu da biste koristili ovu komandu!");
	if( vCanDrive[ vehicle ] == 0 ) return GRESKA( playerid, "Ovo vozilo je unisteno i ne moze se pokrenuti.");
	if( IsVehicleBajs( vehicle ) ) return GRESKA( playerid, "Stvarno mislis upaliti biciklu? " );
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti vozac da bi ste mogli koristit ovu komandu.");
	if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes da ugasis vozilo dok si na eventu." );

	GetVehicleParamsEx(vehicle,engine, lights, alarm, doors, bonnet, boot, objective );
	if( engine == 0 ) return GRESKA( playerid, "Motor vozila je vec ugasen." );
	SetVehicleParamsEx(vehicle,0,lights,alarm,doors,bonnet,boot,objective);
	if( Maskuse[ playerid ] == true )
		format( globalstring, sizeof( globalstring ), "* Maska_%d gasi motor.", PlayerInfo[ playerid ][ xMaskID ] );
	else
		format( globalstring, sizeof( globalstring ), "* %s gasi motor.", ImeIgraca( playerid ) );
	PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:drink( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint( playerid, 10.0, 1325.7372, -875.4626, 39.5781 ) )
	{
		ShowPlayerDialog( playerid, dialog_DRINK, DSL, D_NASLOV, "Whisky 200$\nVodka 170$\nPivo 85$\nKonjak 120$\nTequila 150$\nJack Daniels 290$\nMineralna voda 60$\nCedevita 80$\nCoca Cola 50$", D_ODABERI, D_ODUSTANI );
	}
	else
	{
		for( new i = 1; i < MAX_BUSSINES; i++ )
		{
			if( IsPlayerInRangeOfPoint( playerid, 25.0, BussinesInfo[ i ][ bExitX ], BussinesInfo[ i ][ bExitY ], BussinesInfo[ i ][ bExitZ ] ) && GetPlayerVirtualWorld( playerid ) == BussinesInfo[ i ][ bInVW ])
			{
				if( BussinesInfo[ i ][ bType ] == VRSTA_BAR || BussinesInfo[ i ][ bType ] == VRSTA_DISCO || BussinesInfo[ i ][ bType ] == VRSTA_NKLUB || BussinesInfo[ i ][ bType ] == VRSTA_JAVNAK )
				{

					ShowPlayerDialog( playerid, dialog_DRINK, DSL, D_NASLOV, "Whisky 200$\nVodka 170$\nPivo 85$\nKonjak 120$\nTequila 150$\nJack Daniels 290$\nMineralna voda 60$\nCedevita 80$\nCoca Cola 50$", D_ODABERI, D_ODUSTANI );
					break;
				}
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:menu( playerid, params[] )
{
	for( new i = 1; i < MAX_BUSSINES; i++ )
	{
		if( IsPlayerInRangeOfPoint( playerid, 25.0, BussinesInfo[ i ][ bExitX ], BussinesInfo[ i ][ bExitY ], BussinesInfo[ i ][ bExitZ ] ) && GetPlayerVirtualWorld( playerid ) == BussinesInfo[ i ][ bInVW ])
		{
			if( BussinesInfo[ i ][ bType ] == VRSTA_RESTORAN )
			{
				uFirmi[ playerid ] = i;
				ShowPlayerDialog( playerid, dialog_RESTORAN, DSL, D_NASLOV, "Juha 150$\nPiletina 220$\nMorski pas 350$\nSpageti 410$\nKolac 630$\nCoca Cola 50$\nVoda 25$", D_ODABERI, D_ODUSTANI);
				break;
			}
			else if( BussinesInfo[ i ][ bType ] == VRSTA_CLUCK )
			{
				uFirmi[ playerid ] = i;
				ShowPlayerDialog( playerid, dialog_CLUCKIN, DSL, D_NASLOV, "Topli sendvic 100$\nCevapi 150$\nFileti 100$\nVocna salata 100$\nKebab 120$\nSprite 50$\nVoda 25$", D_ODABERI, D_ODUSTANI);
				break;
			}
			else if( BussinesInfo[ i ][ bType ] == VRSTA_PIZZA )
			{
				uFirmi[ playerid ] = i;
				PizzaMenuTDControl( playerid, true );
				SelectTextDraw( playerid, UGBOJA );
				//ShowPlayerDialog( playerid, dialog_PIZZA, DSL, D_NASLOV, "Pizzeta 100$\nVelika Pizza 150$\nTopli Sendvic 45$\nSalata 40$\nJumbo Pizza 250$\nSprite 50$\nVoda 25$", "Jedi", "Izlaz");
				break;
			}
			else if( BussinesInfo[ i ][ bType ] == VRSTA_BURG )
			{
				uFirmi[ playerid ] = i;
				PizzaMenuTDControl( playerid, true );
				SelectTextDraw( playerid, UGBOJA );
				//ShowPlayerDialog( playerid, dialog_PIZZA, DSL, D_NASLOV, "Pizzeta 100$\nVelika Pizza 150$\nTopli Sendvic 45$\nSalata 40$\nJumbo Pizza 250$\nSprite 50$\nVoda 25$", "Jedi", "Izlaz");
				break;
			}
			/*else if( BussinesInfo[ i ][ bType ] == VRSTA_BURG)
			{
				uFirmi[ playerid ] = i;
				TogglePlayerControllable( playerid, false );
				ShowPlayerDialog( playerid, dialog_BURGMENU , DSMSG, D_NASLOV, "Koristi CTRL/LMB kako bi listao hranu.\n\nKad nadjes zeljeni hranu, pritisni ENTER/F da bi je kupio.\n\nUkoliko zelis da prekines listanje hrane, pritisni SHIFT/SPACE.", "Zatvori","");
				ListaBurg[ playerid ] = 1;
				Dimi_SetPlayerPos( playerid, 1197.4258,-899.0271,1059.4135 );
				SetPlayerCameraPos(playerid, 1197.4313, -900.0710, 1059.9126);
				SetPlayerCameraLookAt(playerid, 1197.4203, -899.0719, 1059.8433);
				CKilometriTDControl( playerid, true );
				PlayerTextDrawSetString( playerid, CKilometri[ playerid ][ 1 ], "~w~Hamburger" );
				PlayerTextDrawSetString( playerid, CKilometri[ playerid ][ 2 ], "~w~Cena: ~r~65$" );
				break;
			}*/
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:fillcar( playerid, params[] )
{
	new vehicleid, found;
	for( new i = 0; i < MAX_VEHICLES; i++)
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(i, X, Y, Z);
		if( IsPlayerInRangeOfPoint( playerid, 5.0, X, Y, Z))
		{
			vehicleid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 ) return GRESKA( playerid, "Niste blizu vozila.");
	new Float:vehPos[ 3 ];
	getPosBehindVehicle( vehicleid, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ], 0.0 );
	if( !IsPlayerInRangeOfPoint( playerid, 2, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ] ) ) return GRESKA( playerid, "Morate biti iza vozila." );
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Morate biti na nogama da biste zatvorili/otvorili prtljaznik.");
	if( IsVehicleBajs( vehicleid ) ) {
		GRESKA( playerid, "Nepoznata akcija.");
		return 1;
	}
	if( !ImaKanticu[ playerid ] ) return GRESKA( playerid, "Nemate kanticu u rukama." );
	if( ( 10 + Fuel[ vehicleid ] ) > getAmountFuel( vehicleid ) )
	{
		GRESKA( playerid, "Rezervoar mora biti prazan bar 10L da bi ga napunili.");
		return 1;
	}
	Fuel[ vehicleid ] += 10;
	FuelTime[ vehicleid ] = 0;
	SendInfoMessage( playerid, "Napunili ste vozilo sa 10 litara goriva." );
	ImaKanticu[ playerid ] = false;
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupikanticu( playerid, params[] )
{
	new businessId = GetPlayerBusinessId( playerid, VRSTA_PUMPA ), id = -1;
	if( PlayerInfo[ playerid ][ xNovac ] < 200 ) return GRESKA( playerid, "Nemate 200$ kod sebe." );
	if( businessId == -1 )
	{
		GRESKA( playerid, "Morate biti u marketu pumpe." );
	} else if( businessId == -2 )
	{
		GRESKA( playerid, "Nemamo vise proizvoda!" );
	} else
	{
		id = Inventory_Add( playerid, "Kantica", 1650 );
		if( id != -1 )
		{
			DajIgracuNovac( playerid, -200 );
			SendClientMessagee( playerid, ZUTA, "Kupili ste kanticu za 200$ i dodana vam je u inventory." );
			BussinesMoney( uFirmi[ playerid ], 150 );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupioruzje( playerid, params[] )
{
	new businessId = GetPlayerBusinessId( playerid, VRSTA_GUNSHOP );
	if( businessId == -1 )
	{
		GRESKA( playerid, "Morate biti u gunshopu." );
	}
	else if( businessId == -2 )
	{
		GRESKA( playerid, "Nemamo vise proizvoda!" );
	}
	else
	{
		if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Oruzje mozete posjedovati sa level 3+!" );
		if( PlayerInfo[ playerid ][ xGunLicense ] == false ) return GRESKA( playerid, "Nemate dozvolu za oruzje!" );
		ShowPlayerDialog( playerid, dialog_GUNSHOP, DSL, D_NASLOV, "Noz - 1500$\nBassebal bat - 500$\nColt 45 - 5000$\nDeagle - 8000$\nShotgun - 12000$\nMP5 - 16000$\nM4 - 20000$\nPancir - 10000$", "Kupi", D_ODUSTANI );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:treniraj( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 25.0, 771.0096,13.4834,1000.6988 ) ) return GRESKA( playerid, "Da biste koristili ovu komandu morate biti u teretani." );
	new item[ 32 ];
	if( sscanf(params, "s[32] ", item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/treniraj [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] Boxing ($2000), KungFu($2400), Grab'n'Kick ($2800), KneeHead ($3000)");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "boxing",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 2000 ) return GRESKA( playerid, "Nemate dovoljno novca(2000 $)." );
		PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
		SetPlayerFightingStyle ( playerid, FIGHT_STYLE_BOXING);
		SetTimerEx("BoxTrain", 1000, false, "i", playerid);
		format( globalstring, sizeof( globalstring ), "* %s hoda do vrece za boks i pocinje je udarati.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		DajIgracuNovac( playerid, -2000 );
		return 1;
	}
	else if( strcmp( item, "kungfu",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 2400 ) return GRESKA( playerid, "Nemate dovoljno novca(2400 $)." );
		PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
		SetPlayerFightingStyle ( playerid, FIGHT_STYLE_KUNGFU);
		SetTimerEx("KungTrain", 1000, false, "i", playerid);
		format( globalstring, sizeof( globalstring ), "* %s hoda do vrece za boks i pocinje je udarati.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		DajIgracuNovac( playerid, -2400 );
		return 1;
	}
	else if( strcmp( item, "grab'n'kick",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 2800 ) return GRESKA( playerid, "Nemate dovoljno novca(2800 $)." );
		PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
		SetPlayerFightingStyle ( playerid, FIGHT_STYLE_GRABKICK);
		SetTimerEx("GrabTrain", 1000, false, "i", playerid);
		format( globalstring, sizeof( globalstring ), "* %s hoda do vrece za boks i pocinje je udarati.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		DajIgracuNovac( playerid, -2800 );
		return 1;
	}
	else if( strcmp( item, "kneehead",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 3000 ) return GRESKA( playerid, "Nemate dovoljno novca(3000 $)." );
		PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
		SetPlayerFightingStyle ( playerid, FIGHT_STYLE_KNEEHEAD);
		SetTimerEx("KneeTrain", 1000, false, "i", playerid);
		format( globalstring, sizeof( globalstring ), "* %s hoda do vrece za boks i pocinje je udarati.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		DajIgracuNovac( playerid, -3000 );
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/treniraj [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] Boxing ($2000), KungFu($2400), Grab'n'Kick ($2800), KneeHead ($3000)");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:lesson( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSkolaLimit ] == 1 ) return GRESKA( playerid, "Vec si polagao jednom, sledeci put mozes sledeci payday. ");
	if( IsPlayerInRangeOfPoint( playerid, 3, 1664.8800,-1367.4441,-48.9541 ) )
	{
		if( GetPlayerVirtualWorld( playerid ) != 2 ) return GRESKA( playerid, "Moras biti u Osnovnoj Skoli." );
		new Float:RandomPozicija[4][4] =
		 {
			{1667.6226,-1358.8826,-48.9541, 180.0000},
			{1663.8583,-1359.0941,-48.9541, 180.0000},
			{1664.1572,-1362.5344,-48.9541, 180.0000},
			{1667.7842,-1362.2119,-48.9541, 180.0000}
		};
		if( PlayerInfo[ playerid ][ xOsnovna ] == 3 ) return GRESKA( playerid, "Vec si polozio osnovnu skolu. " );
		new poz = random( sizeof( RandomPozicija ) );
		Odbrojavanje[ playerid ] = 180;
		VremeTDControl( playerid, true );
		Dimi_SetPlayerPos( playerid, RandomPozicija[poz][ 0 ], RandomPozicija[poz][ 1 ], RandomPozicija[poz][ 2 ] );
		SetPlayerFacingAngle( playerid, RandomPozicija[poz][ 3 ] );
		announcement( playerid, "~w~Casovi osnovne skole", 5000, 1 );
		TogglePlayerControllable( playerid, false );
		ApplyAnimation( playerid,"PED","SEAT_IDLE",4,0,0,0, 1,0,1);
		Uciskolu[ playerid ] = true;
		SkolaTimer[ playerid ] = SetTimerEx( "OsnovnaCasovi", 180000, 0, "ii", playerid, (PlayerInfo[ playerid ][ xOsnovna ]+1) );
		format( globalstring, sizeof( globalstring ), "* %s sjeda na stolicu i slusa lekciju od ucitelja.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3, 1667.8092,-1379.7235,-48.9541 ) )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Moras biti u Srednjoj Skoli." );
		if( PlayerInfo[ playerid ][ xOsnovna ] != 3 ) return GRESKA( playerid, "Da bi zavrsio srednju moras prvo zavrsiti osnovnu. " );
		new Float:RandomPozicija1[4][4] =
		{
			{1667.7314,-1373.4442,-48.9541, 180.0000},
			{1664.3392,-1373.3768,-48.9541, 180.0000},
			{1664.2988,-1377.2484,-48.9541, 180.0000},
			{1667.7661,-1377.1738,-48.9541, 180.0000}
		};
		if( PlayerInfo[ playerid ][ xSrednja ] == 6 ) return GRESKA( playerid, "Vec si polozio srednju skolu. " );
		new poz = random( sizeof( RandomPozicija1 ) );
		Odbrojavanje[ playerid ] = 180;
		VremeTDControl( playerid, true );
		Dimi_SetPlayerPos( playerid, RandomPozicija1[poz][ 0 ], RandomPozicija1[poz][ 1 ], RandomPozicija1[poz][ 2 ] );
		SetPlayerFacingAngle( playerid, RandomPozicija1[poz][ 3 ] );
		announcement( playerid, "~w~Casovi srednje skole", 5000, 1 );
		TogglePlayerControllable( playerid, false );
		ApplyAnimation( playerid,"PED","SEAT_IDLE",4,0,0,0, 1,0,1);
		Uciskolu[ playerid ] = true;
		SkolaTimer[ playerid ] = SetTimerEx( "SrednjaCasovi", 180000, 0, "ii", playerid, (PlayerInfo[ playerid ][ xSrednja ]+1) );
		format( globalstring, sizeof( globalstring ), "* %s sjeda na stolicu i slusa lekciju od ucitelja.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3, 1665.9690,-1392.0660,-48.95411 ) )
	{
		if( GetPlayerVirtualWorld( playerid ) != 3 ) return GRESKA( playerid, "Moras biti u fakultetu." );
		new Float:RandomPozicija2[4][4] =
		{
			{1667.9868,-1389.2526,-48.9541, 180.0000},
			{1663.9470,-1389.3354,-48.9541, 180.0000},
			{1663.7031,-1385.6427,-48.9541, 180.0000},
			{1667.6373,-1385.7008,-48.9541, 180.0000}
		};
		if( PlayerInfo[ playerid ][ xSrednja ] != 6 ) return GRESKA( playerid, "Da bi zavrsio fakultet, moras prvo srednju. " );
		if( PlayerInfo[ playerid ][ xFakultet ] == 15 ) return GRESKA( playerid, "Vec si zavrsio fakultet " );
		new poz = random( sizeof( RandomPozicija2 ) );
		Odbrojavanje[ playerid ] = 180;
		VremeTDControl( playerid, true );
		Dimi_SetPlayerPos( playerid, RandomPozicija2[poz][ 0 ], RandomPozicija2[poz][ 1 ], RandomPozicija2[poz][ 2 ] );
		SetPlayerFacingAngle( playerid, RandomPozicija2[poz][ 3 ] );
		announcement( playerid, "~w~Casovi fakulteta", 5000, 1 );
		TogglePlayerControllable( playerid, false );
		ApplyAnimation( playerid,"PED","SEAT_IDLE",4,0,0,0, 1,0,1);
		Uciskolu[ playerid ] = true;
		SkolaTimer[ playerid ] = SetTimerEx( "FakultetCasovi", 180000, 0, "ii", playerid, (PlayerInfo[ playerid ][ xFakultet ]+1) );
		format( globalstring, sizeof( globalstring ), "* %s sjeda na stolicu i slusa lekciju od ucitelja.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else
	{
		GRESKA( playerid, "Nisi u ucionici." );
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:polaganje( playerid, params[] )
{
	new item[32];
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2906.8472,-2060.8962,1002.2381 ) ) return GRESKA( playerid, "Nisi u auto skoli!");
	if( sscanf( params, "s[32]", item ) )
	{
		SendUsageMessage( playerid, "/polaganje [vrsta]");
		SendClientMessagee( playerid, BELA, "A(motor), B(auto), C1(Kombi), C2(Kamion), C3(Kamion sa prikolicom)");
		SendClientMessagee( playerid, BELA, "A(1000$), B(3000$), C1(4500$), C2(6000$), C3(8000$)");
		return 1;
	}
	if( strcmp( item, "a",true) == 0 )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Nisi u auto skoli!" );
		if( PlayerInfo[ playerid ][ xMotorska ] > 0 ) return GRESKA( playerid, "Vec imate dozvolu!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000) return GRESKA( playerid, "Nemate dovoljno novaca!");
		SetPVarInt( playerid, "dialog_M_POLAGANJE", 1);
		DajIgracuNovac( playerid, -1000 ); PolaganjeBodovi[ playerid ] = 0;
		ShowPlayerDialog( playerid, dialog_M_ISPIT, DSMSG, ""col_white"Pitanje br. 1", ""col_white"Kojom stranom se vozi u Beogradu?", "Lijevom", "Desnom");
	}
	else if( strcmp( item, "b",true) == 0 )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Nisi u auto skoli!" );
		if( PlayerInfo[ playerid ][ xVozacka ] > 0 ) return GRESKA( playerid, "Vec imas dozvolu za voznju auta!");

		if( PlayerInfo[ playerid ][ xNovac ] < 3000) return GRESKA( playerid, "Nemate dovoljno novaca!");
		DajIgracuNovac( playerid, -3000 );
		SetPVarInt( playerid, "dialog_POLAGANJE", 1);
		PolaganjeBodovi[ playerid ] = 0;
		ShowPlayerDialog( playerid, dialog_A_ISPIT, DSMSG, ""col_white"Pitanje br. 1", ""col_white"Kojom stranom se vozi u Evropi?", "Lijevom", "Desnom");
	}
	else if( strcmp( item, "c1",true) == 0 )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Nisi u auto skoli!" );
		if( PlayerInfo[ playerid ][ xKamionskaC1 ] > 0 ) return GRESKA( playerid, "Vec imate dozvolu!");
		if( PlayerInfo[ playerid ][ xNovac ] < 4500) return GRESKA( playerid, "Nemate dovoljno novaca!");
		SetPVarInt( playerid, "dialog_K_POLAGANJE", 1);
		DajIgracuNovac( playerid, -4500 ); PolaganjeBodovi[ playerid ] = 0;
		ShowPlayerDialog( playerid, dialog_K_ISPIT, DSMSG, ""col_white"Pitanje br. 1", ""col_white"Kojom stranom se vozi u Beogradu?", "Lijevom", "Desnom");
	}
	else if( strcmp( item, "c2",true) == 0 )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Nisi u auto skoli!" );
		if( PlayerInfo[ playerid ][ xKamionskaC2 ] > 0 ) return GRESKA( playerid, "Vec imate dozvolu!");
		if( PlayerInfo[ playerid ][ xNovac ] < 6000) return GRESKA( playerid, "Nemate dovoljno novaca!");
		SetPVarInt( playerid, "dialog_C2_POLAGANJE", 1);
		DajIgracuNovac( playerid, -6000 ); PolaganjeBodovi[ playerid ] = 0;
		ShowPlayerDialog( playerid, dialog_C2_ISPIT, DSMSG, ""col_white"Pitanje br. 1", ""col_white"Kojom stranom se vozi u Beogradu?", "Lijevom", "Desnom");
	}
	else if( strcmp( item, "c3",true) == 0 )
	{
		if( GetPlayerVirtualWorld( playerid ) != 1 ) return GRESKA( playerid, "Nisi u auto skoli!" );
		if( PlayerInfo[ playerid ][ xKamionskaC3 ] > 0 ) return GRESKA( playerid, "Vec imate dozvolu!");
		if( PlayerInfo[ playerid ][ xNovac ] < 8000 ) return GRESKA( playerid, "Nemate dovoljno novaca!");
		SetPVarInt( playerid, "dialog_C3_POLAGANJE", 1 );
		DajIgracuNovac( playerid, -8000 ); PolaganjeBodovi[ playerid ] = 0;
		ShowPlayerDialog( playerid, dialog_C3_ISPIT, DSMSG, ""col_white"Pitanje br. 1", ""col_white"Kojom stranom se vozi u Beogradu?", "Lijevom", "Desnom");
	}
	else
	{
		SendUsageMessage( playerid, "/polaganje [vrsta]");
		SendClientMessagee( playerid, BELA, "A(motor), B(auto), C1(Kombi), C2(Kamion), C3(Kamion sa prikolicom)");
		SendClientMessagee( playerid, BELA, "A(1000$), B(3000$), C1(4500$), C2(6000$), C3(8000$)");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tow( playerid, params[] )
{
	if( IsPlayerInAnyVehicle( playerid ))
	{
		if(GetVehicleModel(GetPlayerVehicleID( playerid )) == 525)
		{
			if(GetPlayerState( playerid ) == 2)
			{
				new Float:pX,Float:pY,Float:pZ;
				GetPlayerPos( playerid,pX,pY,pZ);
				new Float:vX,Float:vY,Float:vZ;
				new Found = 0;
				new vid = 0;
				while((vid<MAX_VEHICLES)&&(!Found))
				{
					vid++;
					GetVehiclePos(vid,vX,vY,vZ);
					if((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID( playerid )))
					{
						Found=1;
						if( IsTrailerAttachedToVehicle( GetPlayerVehicleID( playerid ) ) )
							DetachTrailerFromVehicle( GetPlayerVehicleID( playerid ) );
						else
							Dimi_AttachTrailerToVehicle( vid, GetPlayerVehicleID( playerid ) );
					}
				}
				if(!Found)
					GRESKA( playerid, "Nema automobila okolo.");
			} else SendClientMessagee( playerid, CRVENA, "Moras biti vozac!");
			
		} else SendClientMessagee( playerid, CRVENA, "Moras biti u Tow Trucku da bi koristio ovo!");
		
	} else SendClientMessagee( playerid, CRVENA, "Moras biti u vozilu da bi koristio ovo!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:postavidinamit( playerid, params[] )
{
	if( !Dinamit[ playerid ] ) return GRESKA( playerid, "Nemate dinamit u rukama." );
	if( VrataBankeSrusena ) return GRESKA( playerid, "Vrata su vec srusena." );
	if( !IsPlayerInRangeOfPoint( playerid, 5, 1470.7416, -1015.8396, 2045.6861 ) ) return GRESKA( playerid, "Morate biti pored trezora banke." );
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	if( BankaOpljackana ) return GRESKA( playerid, "Banka je vec opljackana." );
	new hour, minute, second;
	gettimeEx( hour, minute, second );
	FixHour( hour );
	hour = shifthour;

	if( ( hour >= 09 ) && ( hour <= 23 ) )
	{
		DinamitObjekt = CreateDynamicObject( 1654, 1470.7329, -1015.5365, 2046.0665, 0.0000, 0.0000, 180.0000 );
		SekundDinamita = 10;
		SetTimer( "PukoDinamit", 1000, false );
		Dinamit[ playerid ] = false;
		new string[ 128 ];
		format( string, sizeof( string ), "{ffffff}[ DINAMIT POSTAVLJEN ]"col_red"Eksplozija dinamita!\nPomerite se od dinamita, eksplozija za:\n"col_white"%d sekundi", SekundDinamita );
		Dinamit3D = Create3DTextLabel( string, BELA, 1470.7329, -1015.5365, 2046.0665, 30.0, -1, 0);

		PostaviWanted( playerid, "Pokusaj obijanja sefa", "Nepoznati", 3 );
		
	} else return GRESKA( playerid, "Mozete pljackati samo od 9h do 23h." );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:provalilozinku( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 5, 1464.5374, -1005.3227, 2045.4697 ) ) return GRESKA( playerid, "Morate biti pored sefa banke." );
	if( !LaptopRuke[ playerid ] ) return GRESKA( playerid, "Nemate laptop u rukama." );
	if( SruseniLaseri ) return GRESKA( playerid, "Laseri su vec sklonjeni." );
	if( BankaOpljackana ) return GRESKA( playerid, "Banka je vec opljackana." );
	new hour, minute, second;
	gettimeEx( hour, minute, second );
	FixHour( hour );
	hour = shifthour;
	
	if( ( hour >= 09 ) && ( hour <= 23 ) )
	{
		PokusajiHakedovanja[ playerid ] = 0;
		HakovanjeTimer[ playerid ] = SetTimerEx( "hakedovanje", 500, false, "d", playerid );
		ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
		SendInfoMessage( playerid, "Krenuli ste sa hakovanjem lozinke." );
		PostaviWanted( playerid, "Pokusaj obijanja sefa", "Nepoznati", 3 );
		
	} else return GRESKA( playerid, "Mozete pljackati samo od 9h do 23h." );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pljackajzlataru( playerid, params[] )
{

	if( !IsPlayerInDynamicArea( playerid, ZlataraSef ) ) return GRESKA( playerid, "Morate biti kod sefa zlatare." );

	if( GetFactionType( playerid ) == ORG_TIP_PD || GetFactionType( playerid ) == ORG_TIP_HITM )
	{
		GRESKA( playerid, "MUP/SAJ/ ne moze pljackati zlataru!");
		return 1;
	}

	if( ServerInfo[ Zlato ] == 0 ) return GRESKA( playerid, "U zlatari nema zlata za pljackanje." );
	if( PljackaZlato[ playerid ] > 0 ) return GRESKA( playerid, "Moras bezati 5 minuta od policije da bi dobio zlato." );
	if( ZlataraOpljackana ) return GRESKA( playerid, "Zlatara je vec opljackana." );

	new policajci = 0, igraci = 0, hour, minute, seconds;
	gettimeEx( hour, minute, seconds );
	FixHour( hour );
	hour = shifthour;

	for(new i; i < MAX_PLAYERS; i++)
	{
		if( GetFactionType( i ) == ORG_TIP_PD && PoliceDuty[ i ] ) policajci++;

		if( PlayerInfo[ i ][ xClan ] == PlayerInfo[ playerid ][ xClan ] )
		 {
			igraci++;
		}
	}
	if( ( hour >= 23 ) && ( hour <= 09 ) ) return GRESKA( playerid, "Plackati se moze od 10 do 22h !");
	if( policajci < 3 ) return GRESKA( playerid, "Ne mozete pljackati zlataru ako nema 3 policajaca online na duty." );
	if( igraci < 3 )  return GRESKA( playerid, "Moras imati bar 3 ljudi iz organizacije online." );
	if( GetWeapon( playerid ) >= 22 && GetWeapon( playerid ) <= 40 )
	{
		if( ( hour >= 09 ) && ( hour <= 23 ) )
		{
			ZlatoVreme[ playerid ] = 300;
			PljackaZlato[ playerid ] = 0;
			ZlataraOpljackana = true;
			ZlataraUToku = true;
			PljackanjeZlatareTimer[ playerid ] = SetTimerEx( "PljackanjeZlatarice", 1000, true, "d", playerid );
			SendInfoMessage( playerid, "Zapoceli ste pljacku zlatare." );
			SendInfoMessage( playerid, "Pljacka zlatare traje 300 sekundi." );
			SendInfoMessage( playerid, "Svake sekunde koju pljackate dobijate 1-2g zlata." );
			PostaviWanted( playerid, "Pljacka Zlatare", "Nepoznati", 6 );
			TimerZlatareVracanje = SetTimer( "SkiniRobZlatare", 2400000, false );
			new string[ 128 ];
			format( string, sizeof( string ), "Igrac %s je zapoceo pljackanje zlatare", ImeIgraca( playerid ) );
			LogSave( "Ostalo/LogPljackaZlatare.log", string );
			OOCNews( 0xFFA500AA, "{FF0000}PAZNJA!! {FFFFFF}U toku je pljacka zlatare Pandora mole se svi gradjani da ne prilaze zlatari!!" );
			OOCNews( 0xFFA500AA, "{FF0000}PAZNJA!! {FFFFFF}Moli se MUP i SAJ da intervenisu i zaustave pljackase!!" );
			format( globalstring, sizeof( globalstring ), "{FF0000}|| PLJACKA || "SERVERBOJA_AQUA"%s [%d] {FFFFFF}pljacka zlataru!", ImeIgraca( playerid ), playerid );
			AdminPoruka( -1, globalstring );
			
		} else return GRESKA( playerid, "Mozete pljackati samo od 9h do 23h." );
	}
	else return GRESKA( playerid, "Nemate oruzije za pljackanje zlatare!" );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pljackajbanku( playerid, params[] )
{
	if( !IsPlayerInDynamicArea( playerid, bankSafe ) ) return GRESKA( playerid, "Morate biti kod sefa banke." );
	if( GetFactionType( playerid ) == ORG_TIP_PD || GetFactionType( playerid ) == ORG_TIP_HITM )
	{
		GRESKA( playerid, "MUP/SAJ/ ne moze pljackati banku!");
		return 1;
	}
	if( ServerInfo[ NovacBanka ] == 0 ) return GRESKA( playerid, "U banci nema novca kojeg bi ste opljackali." );
	if( PljackaNovac[ playerid ] > 0 ) return GRESKA( playerid, "Moras bezati 5 minuta od policije da bi dobio novac." );
	if( BankaOpljackana ) return GRESKA( playerid, "Banka je vec opljackana." );
	if( !VrataBankeSrusena ) return GRESKA( playerid, "Morate prvo srusiti vrata da bi ste robali.");
	new policajci = 0, igraci = 0, hour, minute, seconds;
	gettimeEx( hour, minute, seconds );
	FixHour( hour );
	hour = shifthour;
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( GetFactionType( i ) == ORG_TIP_PD && PoliceDuty[ i ] ) policajci++;
		if( PlayerInfo[ i ][ xClan ] == PlayerInfo[ playerid ][ xClan ] )
		{
			igraci++;
		}
	}
	if( ( hour >= 23 ) && ( hour <= 09 ) ) return GRESKA( playerid, "Plackati se moze od 10 do 22h !");
	if( policajci < 3 ) return GRESKA( playerid, "Ne mozete pljackati banku ako nema 3 policajaca online na duty." );
	if( igraci < 3 )  return GRESKA( playerid, "Moras imati bar 3 ljudi iz organizacije online." );
	if( GetWeapon( playerid ) >= 22 && GetWeapon( playerid ) <= 40 )
	{
		if( ( hour >= 09 ) && ( hour <= 23 ) )
		{
			PljackaVreme[ playerid ] = 300;
			PljackaNovac[ playerid ] = 0; 
			BankaOpljackana = true;
			PljackaUToku = true;
			PljackanjeBankeTimer[ playerid ] = SetTimerEx( "PljackanjeBankice", 1000, true, "d", playerid );
			SendInfoMessage( playerid,"Zapoceli ste pljacku banke." );
			SendInfoMessage( playerid, "Pljacka banke traje 300 sekundi." );
			SendInfoMessage( playerid, "Svake sekunde koju pljackate dobijate 300-350 dolara." );
			PostaviWanted( playerid, "Pljacka Banke", "Nepoznati", 6 );
			TimerBankeVracanje = SetTimer( "SkiniRobBanke", 2400000, false );
			new string[ 128 ]; 
			format( string, sizeof( string ), "Igrac %s je zapoceo pljackanje banke", ImeIgraca( playerid ) );
			LogSave( "Ostalo/LogPljackaBanke.log", string );
			
			OOCNews( 0xFFA500AA, "{FF0000}PAZNJA - {FFFFFF}U toku je pljacka Komercijalne Banke mole se svi gradjani da ne prilaze banci." );
			OOCNews( 0xFFA500AA, "{FF0000}PAZNJA - {FFFFFF}Moli se MUP i SAJ da intervenisu i zaustave pljackase!" );
			
			//OOCNews( 0xFFA500AA, ""col_balkanstory"|| CNN News || "col_white"Neko pokusava da opljacka glavnu banku!" );
			//OOCNews( 0xFFA500AA, ""col_balkanstory"|| CNN News || "col_white"Molimo policiju da zaustavi pljacku." );
			
			format( globalstring, sizeof( globalstring ), "{FF0000}|| PLJACKA || "SERVERBOJA_AQUA"%s [%d] {FFFFFF}pljacka banku - molimo staff da vodi brigu u roleplayu!", ImeIgraca( playerid ), playerid );
			AdminPoruka( -1, globalstring );
			
		} else return GRESKA( playerid, "Plackati se moze od 10 do 22h !");
	}
	else return GRESKA( playerid, "Nemate oruzije za pljackanje banke!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:unesilozinku( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 5, 1464.5374, -1005.3227, 2045.4697 ) ) return GRESKA( playerid, "Morate biti pored sefa banke." );
	if( SruseniLaseri ) return GRESKA( playerid, "Laseri su vec sklonjeni." );
	new lozinka[ 32 ], hour, minute, second;
	gettimeEx( hour, minute, second );
	FixHour( hour );
	hour = shifthour;
	if( PokusajiHakedovanja[ playerid ] != 15 ) return GRESKA( playerid, "Vas proces hakovanja nije jos otkrio lozinku." );
	if( sscanf(params, "s[32]", lozinka ) )
	{
		SendUsageMessage( playerid, "/unesilozinku [ lozinka ]");
		return 1;
	}
	if( ( hour >= 09 ) && ( hour <= 23 ) )
	{
		if( strcmp( LozinkaBanke, lozinka, true ) == 0 )
		{
			for( new i = 0; i < 14; i++ )
			{
				DestroyDynamicObject( LaseriBanka[ i ] );
			}
			SruseniLaseri = true;
			Dimi_KillTimer( HakovanjeTimer[ playerid ] );
			SendInfoMessage( playerid, "Uspjesno ste provalili lozinku i skloni bezbedonosne lasere." );
			SendInfoMessage( playerid, "Sada mozete sigurno uci u sef banke." );
		}
		else
		{
			GRESKA( playerid, "Uneli ste pogresnu lozinku te oglasili alarm." );
			PostaviWanted( playerid, "Pokusaj pljacke banke", "Nepoznati", 3 );
		}
		
	} else return GRESKA( playerid, "Mozete pljackati samo od 9h do 23h." );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupispric( playerid, params[] )
{

	if(!IsPlayerInRangeOfPoint(playerid,3.0,2621.4048,-1486.9042,16.5247)) return GRESKA( playerid, "Niste na standu sa spricevima!");
	if( PlayerInfo[ playerid ][ xInekcija ] == false )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < 100 ) return GRESKA( playerid, "Nemate dovoljno novca (100$)!" );
		SendInfoMessage( playerid, "Kupili ste spric i platili 100$." );
		PlayerInfo[ playerid ][ xInekcija ] = true;
		DajIgracuNovac( playerid, -100 );
	}
	else return GRESKA( playerid, "Vec imate spric!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupialat( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,2608.3884,-1506.7689,15.6666)) return GRESKA( playerid, "Niste na standu sa alatom!");
	if( PlayerInfo[ playerid ][ xToolkit ] == false )
	{
	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca (500$)!" );
	SendInfoMessage( playerid, "Kupili ste alat za obijanje i platili 500$!" );
	PlayerInfo[ playerid ][ xToolkit ] = true;
	DajIgracuNovac( playerid, -500 );
	}
	else return GRESKA( playerid, "Vec imate alat!");

	return 1;
}
CMD:obijlisice(playerid, params[])
{
	if( PlayerCuffed[ playerid ] != 2 ) return greska(playerid,"Ti nisi cuffovan (nemas lisice).");
	if( PlayerInfo[ playerid ][ xToolkit ] == false ) return greska(playerid,"Nemas alat za obijanje - nabavi ga na crnom trazistu!");
	PlayerInfo[playerid][xToolkit] = false;
	SendInfoMessage(playerid,"Uspjesno si sebi obio svoje lisice!");
	PlayerCuffed[playerid] = 0;
	TogglePlayerControllable(playerid,true);
	new igrac = playerid;
	TogglePlayerControllable( igrac, 1 );
	ClearAnimations( igrac );
	if( IsPlayerAttachedObjectSlotUsed( igrac, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( igrac, OBJECT_SLOT_RHAND );
	SetPlayerSpecialAction( igrac, SPECIAL_ACTION_NONE );
	PlayerCuffed[ igrac ] = 0;
	if(GetPVarInt( igrac, "CuffTimerCalled") == 1 )
	{
		Dimi_KillTimer( TazerTimer[ playerid ] );
		SetPVarInt( igrac, "CuffTimerCalled", 0 );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupidinamit( playerid, params[] )
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,2616.4929,-1486.9813,16.5199)) return GRESKA( playerid, "Niste na standu sa dinamitom!");
	if( PlayerInfo[ playerid ][ xNovac ] < 2000 ) return GRESKA( playerid, "Nemate dovoljno novca (2000$)!" );
	new id;
	if( Inventory_HasItem(playerid, "Dinamit" ) )
	{
		GRESKA( playerid, "Vec imate dinamit!" );
	}
	else if( !Inventory_HasItem(playerid, "Dinamit" ) )
	{
		id = Inventory_Add( playerid, "Dinamit", 1654 );
		if( id != -1 )
		{
			SendInfoMessage( playerid, "Kupili ste dinamit i platili 2000$." );
			DajIgracuNovac( playerid, -2000 );
		}
		else return GRESKA( playerid, "Nemate mjesta u inventoriu!" );
	}

	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:electric( playerid, params[] )
{
	if( GetFactionType( playerid )  != ORG_TIP_ELEK ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new item[ 32 ];
	if( sscanf( params, "s[32] ", item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/electric [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] oprema, start, stop, popravi");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "oprema", true ) == 0 )
	{
		if( !ElectricOprema[ playerid ] )
		{
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) )
			{
				GRESKA( playerid, "Vec imas neki objekt u lijevoj ruci!");
				return 1;
			}
			SetPlayerAttachedObject( playerid, OBJECT_SLOT_LHAND, 18644, 5, 0.082183, 0.021501, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			SendJobMessage( playerid, "Uzeli ste potreban alat sada mozete krenuti sa poslom." );
			ElectricOprema[ playerid ] = true;
		}
		else if( ElectricOprema[ playerid ] )
		{
			if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) ) return GRESKA( playerid, "Nemas nijedan objekt u levoj ruci!");
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
			SendJobMessage( playerid, "Ostavili ste poslovni alat." );
			ElectricOprema[ playerid ] = false;
		}
		return 1;
	}
	else if( strcmp( item, "start", true ) == 0 )
	{
		new kolicina, autoid = -1;
		for( new i = 1; i < MAX_CARS; i++ )
		{
			if( VehicleInfo[ i ][ vID ] == GetPlayerVehicleID( playerid ) )
			{
				if( VehicleInfo[ i ][ vUsage ] == ORGANIZACIJSKO_VOZILO )
				{
					if( VehicleInfo[ i ][ vOrganization ] == PlayerInfo[ playerid ][ xClan ] )
					{
						autoid = i;
						break;
					}
				}
			}
		}
		if( autoid == -1 ) return GRESKA( playerid, "Morate biti u vozilu za posao." );
		if( !ElectricOprema[ playerid ] ) return GRESKA( playerid, "Nemate alat za posao." );
		if( sscanf( params, "s[32]d", item, kolicina ) )
		{
			SendUsageMessage( playerid, "/electric start [ 1.stupovi | 2.brojila ]");
			return 1;
		}
		if( kolicina == 1 )
		{
			if( GetVehicleModel( GetPlayerVehicleID( playerid ) ) != 552 ) return GRESKA( playerid, "Morate biti u vozilu za posao." );
			Dimi_SetPlayerCheckpoint( playerid, BanderaPos[ 0 ][ 0 ], BanderaPos[ 0 ][ 1 ], BanderaPos[ 0 ][ 2 ], 5.0 );
			CheckpointStatus[ playerid ] = 18;
			electricNACP[ playerid ] = false;
			SendJobMessage( playerid, "Bandera za popravku vam je oznacena CPom na mapi." );
			ElectricPosao[ playerid ] = 1;
		}
		else if( kolicina == 2 )
		{
			new randombrojcic = (random( ServerInfo[ BrojImovina ] ) + 1);
			Dimi_SetPlayerCheckpoint( playerid, II[ randombrojcic ][ iEnter ][ 0 ], 
				II[ randombrojcic ][ iEnter ][ 1 ], II[ randombrojcic ][ iEnter ][ 2 ], 2.5 );
			CheckpointStatus[ playerid ] = 19;
			ElectricPosao[ playerid ] = 2;
			EIDK[ playerid ] = randombrojcic;
			BrojilaKuca[ playerid ] = 0;
			SendJobMessage( playerid, "Kuca za ocitavanje brojila vam je oznacena CPom na mapi." );
		}
		else return GRESKA( playerid, "Pogresan broj( 1-2 )." );
		return 1;
	}
	else if( strcmp( item, "stop", true ) == 0 )
	{
		if( ElectricPosao[ playerid ] == 1 )
		{
			if( Bandera[ playerid ] >= 10 )
			{
				DajIgracuNovac( playerid, 1000 );
				ElectricPosao[ playerid ] = 0;
				SendJobMessage( playerid, "Zavrsili ste posao i zaradili "col_white"1000$." );
			}
			else if( Bandera[ playerid ] < 10 )
			{
				ElectricPosao[ playerid ] = 0;
				SendJobMessage( playerid, "Zavrsili ste posao i niste nista zaradili.." );
			}
		}
		return 1;
	}
	else if( strcmp( item, "popravi", true ) == 0 )
	{
		if( ElectricPosao[ playerid ] == 1 )
		{
			if( !ElectricOprema[ playerid ] ) return GRESKA( playerid, "Nemate alat za posao." );
			if( !IsPlayerInRangeOfPoint( playerid, 3.0, BanderaPosGore[ Bandera[ playerid ] ][ 0 ], BanderaPosGore[ Bandera[ playerid ] ][ 1 ], BanderaPosGore[ Bandera[ playerid ] ][ 2 ] ) ) return GRESKA( playerid, "Niste na merdevinama." );
			if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti na nogama." );
			if( electricNACP[ playerid ] != true ) return GRESKA( playerid, "Morate prvo proci kroz zadnji cp." );
			electricNACP[ playerid ] = false;
			SendJobMessage( playerid, "Poceli se sa popravkom bandere, pricekajte "col_white"5s." );
			ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 5000, 0 );
			SetTimerEx( "BanderaGotova", 5000, false, "d", playerid );
			Bandera[ playerid ]++;
		}
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/electric [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] oprema, start, stop, popravi");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
forward BanderaGotova( playerid );
public BanderaGotova( playerid )
{
	if( ElectricOprema[ playerid ] && Bandera[ playerid ] >= 1 && ElectricPosao[ playerid ] == 1 )
	{
		ClearAnimations( playerid );
		if( IsPlayerInRangeOfPoint( playerid, 3.0, BanderaPosGore[ (Bandera[ playerid ]-1) ][ 0 ], BanderaPosGore[ (Bandera[ playerid ]-1) ][ 1 ], BanderaPosGore[ (Bandera[ playerid ]-1) ][ 2 ] ) )
		{
			if( Bandera[ playerid ] == 20 )
			{
				PlayerInfo[ playerid ][ xPlatniRacun ] += 15000;
				SavePlayer( playerid ); UpdatePlataTD( playerid );
				ElectricPosao[ playerid ] = 0;
				Bandera[ playerid ] = 0;
				SendJobMessage( playerid, "Zavrsili ste posao i zaradili "col_white"15000$." );
				return 1;
			}
			Dimi_SetPlayerCheckpoint( playerid, BanderaPos[ Bandera[ playerid ] ][ 0 ], BanderaPos[ Bandera[ playerid ] ][ 1 ], BanderaPos[ Bandera[ playerid ] ][ 2 ], 5.0 );
			CheckpointStatus[ playerid ] = 18;
			SendJobMessage( playerid, "Bandera za popravku vam je oznacena CPom na mapi." );
		}
		else
		{
			ElectricPosao[ playerid ] = 0;
			Bandera[ playerid ] = 0;
			SendJobMessage( playerid, "Niste bili na merdevinama kad ste zavrsavali popravku i vas posao je prekinut." );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
forward BrojiloGotovo( playerid );
public BrojiloGotovo( playerid )
{
	if( ElectricOprema[ playerid ] && BrojilaKuca[ playerid ] >= 1 && ElectricPosao[ playerid ] == 2 )
	{
		ClearAnimations( playerid );
		if( IsPlayerInRangeOfPoint( playerid, 3.0, II[ EIDK[ playerid ] ][ iEnter ][ 0 ], II[ EIDK[ playerid ] ][ iEnter ][ 1 ], II[ EIDK[ playerid ] ][ iEnter ][ 2 ] ) )
		{
			if( BrojilaKuca[ playerid ] == 3 )
			{
				PlayerInfo[ playerid ][ xPlatniRacun ] += 20000;
				SavePlayer( playerid ); UpdatePlataTD( playerid );
				ElectricPosao[ playerid ] = 0;
				BrojilaKuca[ playerid ] = 0;
				EIDK[ playerid ] = -1;
				SendJobMessage( playerid, "Zavrsili ste poslom i zaradili "col_white"20000$." );
				return 1;
			}
			new randombrojcic2 = (random( ServerInfo[ BrojImovina ] ) + 1);
			Dimi_SetPlayerCheckpoint( playerid, 
				II[ randombrojcic2 ][ iEnter ][ 0 ], 
				II[ randombrojcic2 ][ iEnter ][ 1 ], 
				II[ randombrojcic2 ][ iEnter ][ 2 ], 2.5 );
			CheckpointStatus[ playerid ] = 19;
			EIDK[ playerid ] = randombrojcic2;
			SendJobMessage( playerid, "Kuca za ocitavanje brojila vam je oznacena CPom na mapi." );
		}
		else
		{
			ElectricPosao[ playerid ] = 0;
			BrojilaKuca[ playerid ] = 0;
			EIDK[ playerid ] = -1;
			SendJobMessage( playerid, "Niste bili kod kuce kad ste zavrsavali ocitavanje i vas posao je prekinut." );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mechanic( playerid, params[] )
{
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}

	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_MEHANICAR ) return GRESKA( playerid, "Ovu komandu moze koristiti samo Mehanicar." );
	new item[32], kolicina;
	new engine,lights,alarm,doors,bonnet,boot,objective;
	if( sscanf( params, "s[32] ", item))
	{
		SendUsageMessage( playerid, "/mechanic [opcija]");
		SendClientMessagee( playerid, BELA, "duty, popravimotor, popravigume");
		SendClientMessagee( playerid, BELA, "uzmikanister, ostavikanister, natocigorivo");
		return 1;
	}
	if( strcmp( item, "popravimotor",true) == 0)
	{
		new igrac;
		if( PlayerInfo[ playerid ][ xMDelovi ] < 3 ) return GRESKA( playerid, "Nemas dovoljno delova(3) za popravku motora." );
		if( sscanf( params, "s[32]u", item, igrac))
		{
			SendUsageMessage( playerid, "/mechanic popravimotor [ ID/Ime ]" );
			return 1;
		}
		//if( kolicina < 100 || kolicina > 200 ) return GRESKA( playerid, "Cena popravka ne moze biti manja od 100 i veca od 200!");
		if( GetPlayerState( igrac ) != 2 ) return GRESKA( playerid, "Igrac mora biti u vozilu!");
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac != INVALID_PLAYER_ID)
			{
				if( PlayerInfo[ igrac ][ xLevel ] < 3 ) return GRESKA( playerid, "Igrac mora biti 3+ da bi mu popravio vozilo." );
				if( IsVehicleMotor( GetPlayerVehicleID( igrac ) ) ) { }
				else
				{
					if( !IsPlayerInRangeOfPoint( playerid, 30.0, 1965.9033, -1558.8748, 14.7136 ) ) return GRESKA( playerid, "Vozilo mozete popravljati samo u mehanicarskoj garazi!");
				}
				if( IsPlayerNearPlayer( 5.0, playerid, igrac ) && IsPlayerInAnyVehicle( igrac ) )
				{
					GetVehicleParamsEx( GetPlayerVehicleID( igrac ), engine, lights, alarm, doors, bonnet, boot, objective );
					if( bonnet == 0 && !IsVehicleBajs( GetPlayerVehicleID( igrac ) ) && !IsVehicleMotor( GetPlayerVehicleID( igrac ) ) && !IsVehicleLetelica( GetPlayerVehicleID( igrac ) ) && !IsVehicleBrod( GetPlayerVehicleID( igrac ) ) )
					{
						SendClientMessagee( playerid, CRVENA, "Otvorite haubu prvo!" );
						return 1;
					}
					if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sam sebi.");
					SendJobMessage( playerid, "Ponudili ste %s popravak motora vozila za $%d .", ImeIgraca( igrac ), PosloviInfo[ MehanicarMotorPlata ] );
					SendClientMessageEx( igrac, SVETLOPLAVA, "* AutoMehanicar %s zeli vam popraviti motor vozila za $%d, (ukucajte /prihvati popravimotor) da bi ste prihvatili.", ImeIgraca( playerid ), PosloviInfo[ MehanicarMotorPlata ] );
					SetPVarInt( igrac, "RepairEOffer", playerid );
					SetPVarInt( igrac, "RepairEPrice", PosloviInfo[ MehanicarMotorPlata ] );
					
				} else GRESKA( playerid, "Taj igrac nije blizu vas / nije u autu.");
			}
			
		} else GRESKA( playerid, "Taj igrac je offline.");
		return 1;
	}
	else if( strcmp( item, "popravigume",true) == 0)
	{
		new igrac;
		if( PlayerInfo[ playerid ][ xMDelovi ] < 1 ) return GRESKA( playerid, "Nemas dovoljno delova(1) za popravku okvira vozila." );
		if( sscanf( params, "s[32]u", item, igrac))
		{
			SendUsageMessage( playerid, "/mechanic popravigume [ ID/Ime ]" );
			return 1;
		}
		//if( kolicina < 100 || kolicina > 200 ) return GRESKA( playerid, "Cena popravka ne moze biti manja od 100 i veca od 200!");
		if( GetPlayerState( igrac ) != 2 ) return GRESKA( playerid, "Igrac mora biti u vozilu!");
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac != INVALID_PLAYER_ID)
			{
				if( PlayerInfo[ igrac ][ xLevel ] < 3 ) return GRESKA( playerid, "Igrac mora biti 3+ da bi mu popravio vozilo." );
				if( !IsPlayerInRangeOfPoint( playerid, 30.0, 1978.4115, -1607.9307, 14.4022 ) ) return GRESKA( playerid, "Vozilo mozete popravljati samo u mehanicarskoj garazi!");
				if( IsPlayerNearPlayer(5.0, playerid, igrac ) && IsPlayerInAnyVehicle( igrac ) )
				{
					if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sam sebi.");
					SendJobMessage( playerid, "Ponudili ste %s popravak guma vozila za $%d .", ImeIgraca( igrac ), PosloviInfo[ MehanicarGumePlata ] );
					SendClientMessageEx( igrac, SVETLOPLAVA, "* AutoMehanicar %s zeli vam popraviti gume vozila za $%d, (ukucajte /prihvati popravigume ) da bi ste prihvatili.", ImeIgraca( playerid ), PosloviInfo[ MehanicarGumePlata ] );
					SetPVarInt( igrac, "RepairTOffer", playerid );
					SetPVarInt( igrac, "RepairTPrice", PosloviInfo[ MehanicarGumePlata ] );
					
				} else GRESKA( playerid, "Taj igrac nije blizu vas / nije u autu.");
			}
			
		} else GRESKA( playerid, "Taj igrac je offline.");
		
		return 1;
	}
	else if( strcmp( item, "duty",true) == 0)
	{

		if( GetPVarInt( playerid, "JobDuty" ) == 0 )
		{
			SendJobMessage( playerid, "Sada ste na duznosti mehanicara i primati cete pozive" );
			SetPVarInt( playerid, "JobDuty", 1 );
			Mechanics += 1;
			format( globalstring, sizeof( globalstring ), "Mehanicar %s sada je na duznosti.", ImeIgraca( playerid ) );
			OOCNews( 0x00D900C8, globalstring );
			SetPlayerSkin( playerid, 50);
		}
		else if( GetPVarInt( playerid, "JobDuty" ) == 1 )
		{
			SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
			SendJobMessage( playerid, "Vise niste na duznosti.");
			SetPVarInt( playerid, "JobDuty", 0);
			Mechanics -= 1;
		}
		return 1;
	}
	/*else if( strcmp( item, "immob",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xMehSkill ] < 400 ) return GRESKA( playerid, "Da bi ugradili nekom imobilizator morate imati Level 5 vestine automehanicara." );
		new igrac, delovi;
		if( sscanf( params, "s[32]ud", item, igrac, kolicina))
		{
			SendUsageMessage( playerid, "/mechanic immob [ ID/Ime ] [ Cena ]" );
			return 1;
		}
		if( GetPlayerState( igrac ) != 2 ) return GRESKA( playerid, "Igrac mora biti u vozilu!");
		new vehicleid = GetPlayerVehicleID( igrac ), autoid = ScriptIDVozila[ vehicleid ];

		if( TipVozila[ vehicleid ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete ugradjivati imobilizator samo na privatnim vozilima." );
		if( VehicleInfo[ autoid ][ vImobilizator ] + 1 == 1)
		{
			delovi = 20;
			if( kolicina < 800 || kolicina > 1000 ) return GRESKA( playerid, "Cena za imobilizator level 1,ne moze biti veca od 800 a manja od 1000." );
			if( PlayerInfo[ playerid ][ xMDelovi ] < 20 ) return GRESKA( playerid, "Nemas dovoljno delova(20) za ugradnju alarma." );
		}
		else if( VehicleInfo[ autoid ][ vImobilizator ] + 1 == 2)
		{
			delovi = 40;
			if( kolicina < 1800 || kolicina > 2000 ) return GRESKA( playerid, "Cena za imobilizator level 2,ne moze biti veca od 1800 a manja od 2000." );
			if( PlayerInfo[ playerid ][ xMDelovi ] < 40 ) return GRESKA( playerid, "Nemas dovoljno delova(40) za ugradnju alarma." );
		}
		else if( VehicleInfo[ autoid ][ vImobilizator ] + 1 == 3)
		{
			delovi = 80;
			if( kolicina < 3800 || kolicina > 4000 ) return GRESKA( playerid, "Cena za imobilizator level 3,ne moze biti veca od 3800 a manja od 4000." );
			if( PlayerInfo[ playerid ][ xMDelovi ] < 80 ) return GRESKA( playerid, "Nemas dovoljno delova(80) za ugradnju alarma." );
		}
		else if( VehicleInfo[ autoid ][ vImobilizator ] + 1 == 4)
		{
			delovi = 200;
			if( kolicina < 9800 || kolicina > 10000 ) return GRESKA( playerid, "Cena za imobilizator level 4,ne moze biti veca od 9800 a manja od 10000." );
			if( PlayerInfo[ playerid ][ xMDelovi ] < 200 ) return GRESKA( playerid, "Nemas dovoljno delova(200) za ugradnju alarma." );
		}
		else if( VehicleInfo[ autoid ][ vImobilizator ] + 1 == 5)
		{
			delovi = 240;
			if( kolicina < 14800 || kolicina > 15000 ) return GRESKA( playerid, "Cena za imobilizator level 5,ne moze biti veca od 14800 a manja od 15000." );
			if( PlayerInfo[ playerid ][ xMDelovi ] < 240 ) return GRESKA( playerid, "Nemas dovoljno delova(240) za ugradnju alarma." );
		}
		else
		{
			SendClientMessagee( playerid, CRVENA, "To vozilo vec ima najveci level imobilizatora." );
			return 1;
		}

		if( !IsPlayerInRangeOfPoint( playerid, 8.0, 1965.9033, -1558.8748, 14.7136 ) ) return GRESKA( playerid, "Vozilo mozete unapredjivati samo u mehanicarskoj garazi!");
		if( !IsPlayerNearPlayer( 5.0, playerid, igrac ) )  return GRESKA( playerid, "Igrac nije blizu vas." );
		if( PlayerInfo[ igrac ][ xNovac ] < kolicina ) return GRESKA( playerid, "Igrac nema dovoljno novca." );
		if( strcmp( ImeIgraca( igrac ), VehicleInfo[ autoid ][ vOwner ], true) == 0 )
		{
			if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sam sebi.");
			SendJobMessage( playerid, "Ponudili ste %s ugradnju imobilizatora u vozilo za $%d .", ImeIgraca( igrac ), kolicina );
			SendClientMessageEx( igrac, SVETLOPLAVA, "* AutoMehanicar %s zeli vam ugraditi imobilizator vozila za $%d, (ukucajte /prihvati immob ) da bi ste prihvatili.", ImeIgraca( playerid ), kolicina );
			SetPVarInt( igrac, "RepairIOffer", playerid );
			SetPVarInt( igrac, "RepairIPrice", kolicina );
			SetPVarInt( igrac, "RepairIvID", autoid );
			SetPVarInt( igrac, "RepairIDelovi", delovi );
		}
		else return GRESKA( playerid, "Igrac nije vlasnik tog vozila." );
		return 1;
	}*/
	else if( strcmp( item, "uzmikanister",true) == 0)
	{
		if( !IsPlayerInRangeOfPoint( playerid, 2.0, 1948.1025, -1586.7581, 13.9192 ) ) return GRESKA( playerid, "Da bi uzeli kanister sa gorivom morate biti kod pumpe.");
		if( sscanf( params, "s[32]i", item, kolicina ) ) {
			SendUsageMessage( playerid, "/mechanic uzmikanister [ kolicina goriva( Litri ) ]" );
			return 1;
		}
		if( kolicina < 0 || kolicina > 10 ) return GRESKA( playerid, "Gorivo moze ici od 1 do 10 litara." );
		if( ( GetPVarInt( playerid, "CanisterFuel" ) + kolicina ) > 10 ) return GRESKA( playerid, "Nemate mesta za toliko litara goriva.");
		if( GetPVarInt( playerid, "CanisterFuel" ) == 0 ) { if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) return GRESKA( playerid, "Vec imate jedan objekt u desnoj ruci."); }
		PovecajPVarInt( playerid, "CanisterFuel", kolicina );
		SendJobMessage( playerid, "zeli ste kanister sa gorivom. " );
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 1650, 6, 0.145482, 0.035119, 0.040793, 8.881844, 276.183959, 329.795593, 1.561557, 1.177534, 1.265636 );
		return 1;
	}
	else if( strcmp( item, "ostavikanister",true) == 0)
	 {
		if( !IsPlayerInRangeOfPoint( playerid, 2.0, 1948.1025, -1586.7581, 13.9192 ) ) return GRESKA( playerid, "Da bi ostavili kanister sa gorivom morate biti kod pumpe.");
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) return GRESKA( playerid, "Nemate kanister u ruci.");
		SetPVarInt( playerid, "CanisterFuel", 0 );
		SendJobMessage( playerid, "Ostavili ste kanister sa gorivom. " );
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		return 1;
	}
	else if( strcmp( item, "natocigorivo",true) == 0)
	 {
		new litri, igrac;
		if( sscanf( params, "s[32]udd", item, igrac, litri, kolicina ) )
		{
			SendUsageMessage( playerid, "/mechanic natocigorivo [ ID/Ime ] [ litri ] [ Cena ]" );
			return 1;
		}
		if( GetPVarInt( playerid, "CanisterFuel" ) == 0 ) return GRESKA( playerid, "Nemas goriva u kanisteru." );
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) return GRESKA( playerid, "Nemate kanister u ruci.");
		if( litri >  GetPVarInt( playerid, "CanisterFuel" ) ) return GRESKA( playerid, "Nemas toliko goriva u kanisteru. " );
		if( kolicina < 20 || kolicina > 280 ) return GRESKA( playerid, "Cena se moze kretati od 20 do 280. " );
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac != INVALID_PLAYER_ID )
			{
				if( PlayerInfo[ igrac ][ xLevel ] < 3 ) return GRESKA( playerid, "Igrac mora biti 3+ da bi mu popravio vozilo." );
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sam sebi." );
				if( IsPlayerNearPlayer( 5.0, playerid, igrac )&& IsPlayerInAnyVehicle( igrac ) )
				{
				SendJobMessage( playerid, "Ponudili ste %s da mu napunite auto sa %dL za $%d .", ImeIgraca( igrac ), litri, kolicina );
				SendClientMessageEx( igrac, SVETLOPLAVA, "* AutoMehanicar %s vam zeli napuniti auto sa %dL za $%d, (ukucajte /prihvati refill) da bi ste prihvatili.", ImeIgraca( playerid ), litri, kolicina);
				SetPVarInt( igrac, "RefillOffer", playerid );
				SetPVarInt( igrac, "RefillPrice", kolicina );
				SetPVarInt( igrac, "RefillAmount", litri );
				}
				else GRESKA( playerid, "Taj igrac nije blizu vas / nije u autu.");
			}
			
		} else GRESKA( playerid, "Taj igrac je offline.");
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/mechanic [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] duty, popravimotor, popravigume");
		SendClientMessagee( playerid, BELA, "[Opcije] uzmikanister, ostavikanister, natocigorivo");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////frenkie
CMD:popravimotor(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1936.0375,-2016.8180,13.7771))
	{
		new engine,lights,alarm,doors,bonnet,boot,objective;
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Morate imati 1000$ za popravku motora!" );
		GetVehicleParamsEx( GetPlayerVehicleID( playerid ), engine, lights, alarm, doors, bonnet, boot, objective );
		if( bonnet == 0 && !IsVehicleBajs( GetPlayerVehicleID( playerid ) ) && !IsVehicleMotor( GetPlayerVehicleID( playerid ) ) && !IsVehicleLetelica( GetPlayerVehicleID( playerid ) ) && !IsVehicleBrod( GetPlayerVehicleID( playerid ) ) )
		{
			SendClientMessagee( playerid, CRVENA, "Otvorite haubu prvo!" );
			return 1;
		}
		Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 3;
		SendInfoMessage(playerid, "Uspjesno ste popravili motor vozila i platili 1000$");
		if(vCanDrive[ GetPlayerVehicleID( playerid ) ] == 0)
		{
			vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
			TogglePlayerControllable( playerid, true );
		}
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:popravisasiju(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1936.0375,-2016.8180,13.7771))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Morate imati 1000$ za popravku sasije!" );
		new panels, doors, lights, tires, panels1, doors1, lights1;
		GetVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels, doors, lights, tires);
		panels1 = encode_panels(0, 0, 0, 0, 0, 0, 0); // fix all panels
		doors1 = encode_doors(0, 0, 0, 0, 0, 0); // fix all doors
		lights1 = encode_lights(0, 0, 0, 0); // fix all lights
		UpdateVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels1, doors1, lights1, tires );
		SendInfoMessage(playerid, "Sasija vaseg vozila je popravljena i platili ste 1000$");
		DajIgracuNovac( playerid, -1000 );
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:popravigume(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1936.0375,-2016.8180,13.7771))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Morate imati 1000$ za popravku guma!" );
		new panels, doors, lights, tires, tires1;
		GetVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels, doors, lights, tires);
		tires1 = encode_tires(0, 0, 0, 0); // fix all tires
		UpdateVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels, doors, lights, tires1 );
		SendInfoMessage(playerid, "Gume vaseg vozila su popravljenje i platili ste 1000$");
		DajIgracuNovac( playerid, -1000 );
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
forward TehnickiPregled( playerid );
public TehnickiPregled( playerid )
{
	new vehicleid = GetPlayerVehicleID( playerid ), Float:Health;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	if( vehicleid != INVALID_VEHICLE_ID )
	{
		GetVehicleHealth( vehicleid, Health );
		if( Health > 980 )
		{
			VehicleInfo[ ScriptIDVozila[ vehicleid ] ][ vTeh ] = 1;
			TogglePlayerControllable( playerid, true );
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, 0, 0, boot, objective);
			SendInfoMessage( playerid, "Vase vozilo je ispravno i prosli ste tehnicki pregled!");
			SendInfoMessage( playerid, "Vase vozilo je spremno za registraciju!");
			return true;
		}
		else
		{
			TogglePlayerControllable( playerid, true );
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, 0, 0, boot, objective);
			SendInfoMessage( playerid, "Vozilo ne moze proci tehnicki jer je osteceno, prvo ga popravite!");
			return true;
		}
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:tehnickipregled( playerid, params[] )
{
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti u autu!" );
	if( TipVozila[ GetPlayerVehicleID( playerid ) ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Vozilo nije u privatnom vlasnistvu!" );
	if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Nemate 1000$ u dzepu." );
	new Float:health;
	GetVehicleHealth( GetPlayerVehicleID( playerid ), health );
	if( health < 950 ) return GRESKA( playerid, "Auto je osteceno, prvo ga popravite!");
	if( strcmp( ImeIgraca( playerid ), VehicleInfo[ ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] ][ vOwner ], true ) == 0 ) { }
	else return GRESKA( playerid, "Ovo vozilo nije u vasem vlasnistvu." );
	if( !IsPlayerInRangeOfPoint( playerid, 5.0, 1935.0571,-2025.8098,14.2209 ) ) return GRESKA( playerid, "Niste u auto servisu!" );
	if( VehicleInfo[ ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] ][ vTeh ] != 0 ) return GRESKA( playerid, "Ovo vozilo je vec pregledano!" );
	if( VehicleInfo[ ScriptIDVozila[ GetPlayerVehicleID( playerid ) ] ][ vReg ] != 0 ) return GRESKA( playerid, "Vozilo vam je registrovano!" );
	DajIgracuNovac( playerid, -1000 );
	SetTimerEx( "TehnickiPregled", 14000, 0, "i", playerid );
	SetCameraBehindPlayer( playerid );
	TogglePlayerControllable( playerid, false );
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx( GetPlayerVehicleID( playerid ), engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx( GetPlayerVehicleID( playerid ), engine, lights, alarm, 1, 1, boot, objective);
	SendInfoMessage( playerid, "Vase vozilo se pregleda, sacekajte malo!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:farbanje(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1935.0571,-2025.8098,14.2209))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Morate imati 1000$ za farbanje!" );
		ShowPlayerDialog( playerid, dialog_FARBANJEVOZILAODABIR1, DSL, "Vrste farbanja", "[1] Farbanje gotovm bojom\n[2] Farbanjem bojom po zelji", "Odabir", "Izlaz");
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:ugradialarm(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1935.2322,-2007.9379,14.2209))
	{
		new autoid = ScriptIDVozila[ GetPlayerVehicleID( playerid ) ];
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "   " );
		if( VehicleInfo[ autoid ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete ugradjivati alarm samo na privatnim vozilima." );
		if(strcmp( ImeIgraca( playerid ), VehicleInfo[ autoid ][ vOwner ], true) == 0 )
		{
			ShowPlayerDialog(playerid,dialog_BIRAALARMVOZILA, DIALOG_STYLE_TABLIST_HEADERS, "Odabir alarma",
			"{FFFFFF}Brand\tCijena\tZastita\n\
			{FFFFFF}Scuta\t$2000\tObicna\n\
			{FFFFFF}Defend Lock\t$3000\tDobra\n\
			{FFFFFF}Scorpion\t$5000\tNeprednija\n\
			{FFFFFF}Cobra\t$7000\tJaka\n\
			{FFFFFF}Skidanje alarma\t$1000\t ", // Etc.
			"Odabir", "Izlaz");
		}
		
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:natocigorivo(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1935.2322,-2007.9379,14.2209))
	{
		new vehicleid = GetPlayerVehicleID( playerid );
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( IsVehicleBajs( vehicleid ) ) return GRESKA( playerid, "Ne mozete bicikl napuniti gorivom.");
		if( PuniGorivo[ playerid ] == true ) return GRESKA( playerid, "Vec punis gorivo." );
		ShowPlayerDialog( playerid, dialog_SIPAGORIVOUSERVISU, DSI, "Sipanje goriva", "Unesite koliko litara goriva zelite nasuti u vozilo", "Uredu", "Izlaz");

	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:ugradibravu(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,1935.2322,-2007.9379,14.2209))
	{
		new autoid = ScriptIDVozila[ GetPlayerVehicleID( playerid ) ];
		if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
		if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
		if( PlayerInfo[ playerid ][ xNovac ] < 1000 ) return GRESKA( playerid, "Nemate 1000$!" );
		if( VehicleInfo[ autoid ][ vUsage ] != PRIVATNO_VOZILO ) return GRESKA( playerid, "Mozete ugradjivati bravu samo na privatnim vozilima." );
		if(strcmp( ImeIgraca( playerid ), VehicleInfo[ autoid ][ vOwner ], true) == 0 )
		{
			ShowPlayerDialog(playerid, dialog_BIRABRAVUVOZILA, DIALOG_STYLE_TABLIST_HEADERS, "Odabir brave",
			"{FFFFFF}Brand\tCijena\tKvaliteta\n\
			{FFFFFF}Mul-T-Lock\t$2000\tObicna\n\
			{FFFFFF}Hudiny\t$3000\tSrednja\n\
			{FFFFFF}Komel\t$5000\tDobra\n\
			{FFFFFF}Defend Lock\t$7000\tOjacana\n\
			{FFFFFF}Zeder\t$10000\tJaka\n\
			{FFFFFF}Skidanje brave\t$1000\t ", // Etc.
			"Odabir", "Izlaz");
		}
	}
	else return GRESKA( playerid, "Morate biti u auto servisu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:neonshop( playerid, params[] )
{
	//if( IsPlayerInRangeOfPoint( playerid, 3.0, 1935.0571,-2025.8098,14.2209 ) || IsPlayerInRangeOfPoint( playerid, 2.5, 699.1390, -1183.1641, 16.0707 ) )
	if( IsPlayerInRangeOfPoint( playerid, 3.0, 1935.0571,-2025.8098,14.2209 ) || IsPlayerInRangeOfPoint( playerid, 2.5, 699.1390, -1183.1641, 16.0707 ) || IsPlayerInRangeOfPoint( playerid, 9.0, 695.6638, -1189.9620, 16.0697 ) )
	{
			if( IsVehicleBrod( GetPlayerVehicleID( playerid ) ) || IsVehicleMotor( GetPlayerVehicleID( playerid ) ) ||
			IsVehicleBajs( GetPlayerVehicleID( playerid ) ) ) return GRESKA(playerid, "Ne moze na ovom vozilu!");
			if(!IsPlayerInAnyVehicle(playerid)) return GRESKA( playerid, "Morate biti u vozilu!" );
			if( GetPlayerState( playerid ) != 2 ) return GRESKA( playerid, "Moras biti na mjestu vozaca!");
			
			ShowPlayerDialog(playerid, dialog_NEONSHOP, DIALOG_STYLE_TABLIST_HEADERS, "Odabir neonke",
			"{FFFFFF}Boja\tCijena\tPrimjer\n\
			{FFFFFF}Plava\t$2000\t{007AF4}=====\n\
			{FFFFFF}Crvena\t$2000\t{FB0000}=====\n\
			{FFFFFF}Zelena\t$2000\t{00E83A}=====\n\
			{FFFFFF}Bijela\t$2000\t=====\n\
			{FFFFFF}Pink\t$2000\t{FF80FF}=====\n\
			{FFFFFF}Zuta\t$2000\t{FFFF00}=====\n\
			{FFFFFF}Skidanje neonki\t$1000\t ", // Etc.
			"Odabir", "Izlaz");
			
	}
	else return GRESKA(playerid, "Morate biti u auto servisu!" );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:natocicisternu( playerid, params[] )
{

	new fsID = IsThatFuelStationMy( playerid ), trailerid = GetVehicleTrailer( GetPlayerVehicleID( playerid ) );
	if( fsID == -1 ) return GRESKA( playerid, "Nemate u vlasnistvu nijednu pumpu." );

	if( !IsPlayerInVehicle( playerid, VehicleInfo[ FuelStation[ fsID ][ fsTruckID ] ][ vID ] ) ) return GRESKA( playerid, "Morate biti u kamionu, koji je parkiran pored pumpe!");
	if( !IsPlayerInRangeOfPoint( playerid, 5.0, 269.1654, 1465.2311, 10.5859 ) ) return GRESKA( playerid, "Ne nalazite se u naftnoj industriji!");
	if( !IsTrailerAttachedToVehicle( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Vi nemate zakacenu cisternu!");
	if( trailerid != ( VehicleInfo[ FuelStation[ fsID ][ fsCisternID ] ][ vID ] ) ) return GRESKA( playerid, "To nije vasa cisterna!");
	new litara, vrsta[ 10 ], cisternID = VehicleInfo[ FuelStation[ fsID ][ fsCisternID ] ][ vID ];
	if( sscanf( params, "is[10]", litara, vrsta ) ) return SendUsageMessage( playerid,  "/natocicisternu [Broj litara] [Vrsta goriva (Dizel-Benzin-Gasno)]");
	if( Putovara[ playerid ] ) return GRESKA( playerid, "Gorivo se vec utovara!");
	if( litara < 1 || litara > 300 ) return GRESKA( playerid, "Ne mozete manje od 1 litre i vise od 300 litara!");

	if( CisternFuel[ cisternID ][ 0 ] == 300 || CisternFuel[ cisternID ][ 1 ] == 300 || CisternFuel[ cisternID ][ 2 ] == 300 ) return GRESKA( playerid, "Vasa citerna je puna!" );
	if( !strcmp( vrsta, "dizel", true ) )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < (litara*12) ) return GRESKA( playerid, "Potrebno vam je 10$ po litru." );
		if( CisternFuel[ cisternID ][ 1 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima benzina, prvo je ispraznite!");
		if( CisternFuel[ cisternID ][ 2 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima gasnog ulja, prvo je ispraznite!");
		if( ( litara + CisternFuel[ cisternID ][ 0 ] ) > 300 ) return GRESKA( playerid, "Zapremnina vase cisterne je 300 litara!");
		DajIgracuNovac( playerid, -(litara*12) );
		Putovara[ playerid ] = true;
		CisternFuel[ cisternID ][ 0 ] += litara;
		TogglePlayerControllable( playerid, false );
		announcement( playerid, "~w~UTOVAR..", 5000, 1 );
		Putovar[ playerid ] = SetTimerEx( "PumpaUtovar", 10000, false, "i", playerid );
	}
	else if( !strcmp( vrsta, "benzin", true ) )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < (litara*11) ) return GRESKA( playerid, "Potrebno vam je 10$ po litru." );
		if( CisternFuel[ cisternID ][ 0 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima dizela, prvo je ispraznite!");
		if( CisternFuel[ cisternID ][ 2 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima gasnog ulja, prvo je ispraznite!");
		if( ( litara + CisternFuel[ cisternID ][ 1 ] ) > 300 ) return GRESKA( playerid, "Zapremnina vase cisterne je 300 litara!");
		DajIgracuNovac( playerid, -(litara*11) );
		Putovara[ playerid ] = true;
		CisternFuel[ cisternID ][ 1 ] += litara;
		TogglePlayerControllable( playerid, false );
		announcement(playerid, "~w~UTOVAR..", 5000, 1);
		Putovar[ playerid ] = SetTimerEx("PumpaUtovar", 10000, false, "i", playerid);
	}
	else if( !strcmp(vrsta, "gasno", true ) )
	{
		if( PlayerInfo[ playerid ][ xNovac ] < (litara*10) ) return GRESKA( playerid, "Potrebno vam je 10$ po litru." );
		if( CisternFuel[ cisternID ][ 1 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima benzina, prvo je ispraznite!");
		if( CisternFuel[ cisternID ][ 0 ] != 0 ) return GRESKA( playerid, "U vasoj cisterni ima dizela, prvo je ispraznite!");
		if( ( litara + CisternFuel[ cisternID ][ 2 ] ) > 300 ) return GRESKA( playerid, "Zapremnina vase cisterne je 300 litara!");
		DajIgracuNovac( playerid, -(litara*10) );
		Putovara[ playerid ] = true;
		CisternFuel[ cisternID ][ 2 ] += litara;
		TogglePlayerControllable( playerid, false );
		announcement( playerid, "~w~UTOVAR..", 5000, 1 );
		Putovar[ playerid ] = SetTimerEx("PumpaUtovar", 10000, false, "i", playerid);
	}
	else return GRESKA( playerid, "Pogresna vrsta goriva." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ispraznicisternu( playerid, params[] )
{
	new fsID = IsThatFuelStationMy( playerid ), trailerid = GetVehicleTrailer( GetPlayerVehicleID( playerid ) );
	if( fsID == -1 ) return GRESKA( playerid, "Nemate u vlasnistvu nijednu pumpu." );
	if( IsPlayerInRangeOfPoint( playerid, 20.0, FuelStation[ fsID ][ fsPos ][ 0 ], FuelStation[ fsID ][ fsPos ] [ 1], FuelStation[ fsID ][ fsPos ][ 2 ] ) )
	{
		if( !IsPlayerInVehicle( playerid, VehicleInfo[ FuelStation[ fsID ][ fsTruckID ] ][ vID ] ) ) return GRESKA( playerid, "Morate biti u kamionu, koji je parkiran pored pumpe!");

		if( !IsTrailerAttachedToVehicle( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Vi nemate zakacenu cisternu!");
		if( trailerid != ( VehicleInfo[ FuelStation[ fsID ][ fsCisternID ] ][ vID ] ) ) return GRESKA( playerid, "To nije vasa cisterna!");

		new litara, vrsta[ 10 ], cisternID = VehicleInfo[ FuelStation[ fsID ][ fsCisternID ] ][ vID ];
		if( sscanf( params, "is[10]", litara, vrsta ) ) return SendUsageMessage( playerid, "/ispraznicisternu [Broj litara] [Vrsta goriva (Dizel-Benzin-Gasno)]");

		if( Pistovara[ playerid ] ) return GRESKA( playerid, "Gorivo se vec istovara!");
		if( litara < 1 || litara > 300 ) return GRESKA( playerid, "Ne mozete manje od 1 litre i vise od 300 litara!");
		if( !strcmp( vrsta, "dizel", true ) )
		{
			if( FuelStation[ fsID ][ fsDieselL ] == 10000 ) return GRESKA( playerid, "Vase odlagaliste za dizel je puno!");
			if( (litara+FuelStation[ fsID ][ fsDieselL ]) > 10000 ) return GRESKA( playerid, "Vase odlagaliste za dizel ne moze da primi toliko litara!");
			if( litara > CisternFuel[ cisternID ][ 0 ] ) return GRESKA( playerid, "Nemate toliko litara dizela u cisterni!");
			Pistovara[ playerid ] = true;
			CisternFuel[ cisternID ][ 0 ] -= litara;
			FuelStation[ fsID ][ fsDieselL ] += litara;
			TogglePlayerControllable( playerid, false );
			announcement( playerid, "~w~ISTOVAR..", 5000, 1 );
			Pistovar[ playerid ] = SetTimerEx("PumpaIstovar", 10000, false, "i", playerid );
		}
		else if(!strcmp(vrsta, "benzin", true))
		{
			if( FuelStation[ fsID ][ fsGasolineL ] == 10000) return GRESKA( playerid, "Vase odlagaliste za benzin je puno!");
			if( (litara+FuelStation[ fsID ][ fsGasolineL ]) > 10000 ) return GRESKA( playerid, "Vase odlagaliste za benzin ne moze da primi toliko litara!");
			if( litara > CisternFuel[ cisternID ][ 1 ] ) return GRESKA( playerid, "Nemate toliko litara benzina u cisterni!");
			Pistovara[ playerid ] = true;
			CisternFuel[ cisternID ][ 1 ] -= litara;
			FuelStation[ fsID ][ fsGasolineL ] += litara;
			TogglePlayerControllable( playerid, false );
			announcement( playerid, "~w~ISTOVAR..", 5000, 1 );
			Pistovar[ playerid ] = SetTimerEx("PumpaIstovar", 10000, false, "i", playerid );
		}
		else if(!strcmp(vrsta, "gasno", true))
		{
			if( FuelStation[ fsID ][ fsGasOilL ] == 10000) return GRESKA( playerid, "Vase odlagaliste za Kerozin je puno!");
			if( (litara+FuelStation[ fsID ][ fsGasOilL ]) > 10000 ) return GRESKA( playerid, "Vase odlagaliste za Kerozin ne moze da primi toliko litara!");
			if( litara > CisternFuel[ cisternID ][ 2 ] ) return GRESKA( playerid, "Nemate toliko litara gasnog ulja u cisterni!");
			Pistovara[ playerid ] = true;
			CisternFuel[ cisternID ][ 2 ] -= litara;
			FuelStation[ fsID ][ fsGasOilL ] += litara;
			TogglePlayerControllable( playerid, false );
			announcement( playerid, "~w~ISTOVAR..", 5000, 1 );
			Pistovar[ playerid ] = SetTimerEx("PumpaIstovar", 10000, false, "i", playerid );
		}
		else return GRESKA( playerid, "Pogresna vrsta goriva." );
		FStation_Save( fsID );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pumpa( playerid, params[] )
{
	new fsID = IsThatFuelStationMy( playerid );
	if( fsID == -1 ) return GRESKA( playerid, "Nemate u vlasnistvu nijednu pumpu." );
	ShowPlayerDialog( playerid, dialog_PUMPA, DSL, D_NASLOV, "Ime Pumpe\nCena Dizela\nCena Benzna\nCena Gasnog ulja\nProvera zaliha\nLokacija naftne rafinerije\nKomande\nRespawnuj kamion i ctsernu", "Odabir", "Izlaz");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:natoci( playerid, params[] )
{
	new fuel;
	new vehicleid = GetPlayerVehicleID( playerid );
	new fsID = GetNearestFuelStation( playerid );
	
	if( fsID == -1 )
	{
		GRESKA( playerid, "Niste na benzinskoj stanici!");
		return 1;
	}
	if( IsVehicleBajs( vehicleid ) )
	{
		GRESKA( playerid, "Ne mozete bicikl napuniti gorivom.");
		return 1;
	}
	if( sscanf( params, "i", fuel ) )
	{
		SendUsageMessage( playerid, "/natoci [litara(1-100)]" );
		return 1;
	}
	if( (fuel+Fuel[ vehicleid ]) > getAmountFuel( vehicleid ) )
	{
		GRESKA( playerid, "Ne moze toliko goriva stati u vas automobil.");
		return 1;
	}
	if( fuel < 1 )
	{
		SendUsageMessage( playerid, "/natoci [Kolicina]");
		return 1;
	}
	if( ScriptIDVozila[ vehicleid ] == -1 ) return GRESKA( playerid, "Ne mozes puniti gorivom vozila koja nisu server-side." );
	if( PuniGorivo[ playerid ] == true ) return GRESKA( playerid, "Vec punis gorivo." );
	
	if( VehicleInfo[ ScriptIDVozila[ vehicleid ] ][ vFuelType ] == 1 )
	{
		//if( FuelStation[ fsID ][ fsDieselL ] == 0 ) return GRESKA( playerid, "Zao nam je, nema vise zaliha dizela!");
		//if( fuel > FuelStation[ fsID ][ fsDieselL ] ) return GRESKA( playerid, "Zao nam je, nema toliko zaliha dizela." );
		if( PlayerInfo[ playerid ][ xNovac ] < fuel*FuelStation[ fsID ][ fsDieselPrice ] ) return GRESKA(playerid, "Nemate dovoljno novca, 1 litar benzina kosta %d$.", FuelStation[ fsID ][ fsDieselPrice ] );
	}
	else if( VehicleInfo[ ScriptIDVozila[ vehicleid ] ][ vFuelType ] == 2 )
	{
		//if( FuelStation[ fsID ][ fsGasolineL ] == 0 ) return GRESKA( playerid, "Zao nam je, nema vise zaliha benzina!");
		//if( fuel > FuelStation[ fsID ][ fsGasolineL ] ) return GRESKA( playerid, "Zao nam je, nema toliko zaliha benzina." );
		if( PlayerInfo[ playerid ][ xNovac ] < fuel*FuelStation[ fsID ][ fsGasolinePrice ] ) return GRESKA(playerid, "Nemate dovoljno novca, 1 litar dizela kosta %d$.", FuelStation[ fsID ][ fsGasolinePrice ] );
	}
	else if( VehicleInfo[ ScriptIDVozila[ vehicleid ] ][ vFuelType ] == 3 )
	{
		//if( FuelStation[ fsID ][ fsGasOilL ] == 0 ) return GRESKA( playerid, "Zao nam je, nema vise zaliha gasnog ulja!");
		//if( fuel > FuelStation[ fsID ][ fsGasOilL ] ) return GRESKA( playerid, "Zao nam je, nema toliko zaliha gasnog ulja." );
		if( PlayerInfo[ playerid ][ xNovac ] < fuel*FuelStation[ fsID ][ fsGasOilPrice ] ) return GRESKA(playerid, "Nemate dovoljno novca, 1 litar gasnog ulja kosta %d$.", FuelStation[ fsID ][ fsGasOilPrice ] );
	}
	announcement( playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Sipanje goriva, molim sacekajte",2000,3);
	SetTimerEx("Fillup", 10000, 0, "ii", playerid, fuel );
	TogglePlayerControllable( playerid, false );
	PuniGorivo[ playerid ] = true;
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:odustani( playerid, params[])
{
	new x_job[32];
	sscanf(params, "s[32]", x_job);
	if(!strlen(x_job))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/odustani [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] popravimotor, popravigume, gorivo, ticket");
		SendClientMessagee( playerid, BELA, "[Opcije] medicine, recover");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if(strcmp(x_job,"popravimotor",true) == 0) { SetPVarInt( playerid, "RepairEOffer", 999); SetPVarInt( playerid, "RepairEPrice", 0); }
	//else if(strcmp(x_job,"popraviokvir",true) == 0) { SetPVarInt( playerid, "RepairBKOffer", 999); SetPVarInt( playerid, "RepairBKPrice", 0);}
	else if(strcmp(x_job,"popravigume",true) == 0) { SetPVarInt( playerid, "RepairTOffer", 999); SetPVarInt( playerid, "RepairTPrice", 0); }
	//else if(strcmp(x_job,"alarm",true) == 0) { SetPVarInt( playerid, "RepairAOffer", 999); SetPVarInt( playerid, "RepairAPrice", 0); SetPVarInt( playerid, "RepairAvID", -1); SetPVarInt( playerid, "RepairADelovi", 0); }
	//else if(strcmp(x_job,"immob",true) == 0) { SetPVarInt( playerid, "RepairIOffer", 999); SetPVarInt( playerid, "RepairIPrice", 0); SetPVarInt( playerid, "RepairIvID", -1); SetPVarInt( playerid, "RepairIDelovi", 0); }
	//else if(strcmp(x_job,"brava",true) == 0) { SetPVarInt( playerid, "RepairLOffer", 999); SetPVarInt( playerid, "RepairLPrice", 0); SetPVarInt( playerid, "RepairLvID", -1); SetPVarInt( playerid, "RepairLDelovi", 0); }
	//else if(strcmp(x_job,"neon",true) == 0) { SetPVarInt( playerid, "RepairNOffer", 999); SetPVarInt( playerid, "RepairNPrice", 0); SetPVarInt( playerid, "RepairNvID", -1); SetPVarInt( playerid, "RepairNNeon", 0); }
	//else if(strcmp(x_job,"color",true) == 0) { SetPVarInt( playerid, "ResprayOffer", 999); SetPVarInt( playerid, "ResprayPrice", 0 ); SetPVarInt( playerid, "ResprayvID", -1 ); }
	else if(strcmp(x_job,"gorivo",true) == 0) { SetPVarInt( playerid, "RefillOffer", 999); SetPVarInt( playerid, "RefillPrice", 0); SetPVarInt( playerid, "RefillAmount", 0); }
	else if(strcmp(x_job,"ticket",true) == 0) { SetPVarInt( playerid, "TicketOffer", 999); SetPVarInt( playerid, "TicketMoney", 0); }
	else if(strcmp(x_job,"medicine",true) == 0) { SetPVarInt( playerid, "MedicineOffer", 999); SetPVarInt( playerid, "MedicineMoney", 0 ); }
	else if(strcmp(x_job,"recover",true) == 0) { SetPVarInt( playerid, "RecoverOffer", 999); SetPVarInt( playerid, "RecoverMoney", 0 ); }
	else { return 1; }
	SendClientMessageEx( playerid, SVETLOPLAVA, "* Otkazali ste uslugu: %s.", x_job);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prihvati( playerid, params[] )
{
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/prihvati [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] popravimotor, popravigume, gorivo, ticket");
		SendClientMessagee( playerid, BELA, "[Opcije] recover, medicine, live, frisk, rukovanje");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
		////////////////////////////////////////////////////////////////////////////
	if( strcmp( item, "popravimotor",true) == 0)
	{
		new repairman = GetPVarInt( playerid, "RepairEOffer" );
		if( GetPVarInt( playerid, "RepairEOffer" )  < 999 )
		{
			if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt( playerid, "RepairEPrice" ) )
			{
				if( IsPlayerInAnyVehicle( playerid ) )
				{
					if( IsPlayerConnected( repairman ) )
					{
						if( PlayerInfo[ repairman ][ xMDelovi ] < 3 )
						{
							SendClientMessagee( repairman, CRVENA, "Nemate delova!.");
							SendClientMessagee( playerid, CRVENA, "Mehanicar nema delova!");
							return 1;
						}
						else
						{
								if( IsPlayerNearPlayer( 8.0, playerid, repairman ) )
								{
									Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
									antiCheatCS[ playerid ][ VehRepairTime ] = 3;
									SendClientMessageEx( playerid, SVETLOPLAVA, "* Vas motor vozila je popravljeno za $%d od strane AutoMehanicara %s.", GetPVarInt( playerid, "RepairEPrice" ), ImeIgraca( repairman ) );
									SendClientMessageEx(repairman, SVETLOPLAVA, "* Popravili ste %s motor vozila. Zaradili ste $%d.", ImeIgraca( playerid ), GetPVarInt( playerid, "RepairEPrice" ) );
									if(vCanDrive[ GetPlayerVehicleID( playerid ) ] == 0)
									{
										vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
										TogglePlayerControllable( playerid, true );
									}
									PlayerInfo[ repairman ][ xMehSkill ] += 1;
									if(PlayerInfo[ repairman ][ xMehSkill ] == 50)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 2, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 100)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 3, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 200)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 4, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 400)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 5, sada imate vise opcija u svom poslu."); }

									DajIgracuNovac( repairman, GetPVarInt( playerid, "RepairEPrice" ) );
									DajIgracuNovac( playerid, -GetPVarInt( playerid, "RepairEPrice" ) );
									BussinesJobMoney( POSAO_MEHANICAR, (GetPVarInt( playerid, "RepairEPrice" )/10) );
									SetPVarInt( playerid, "RepairEOffer", 999);
									SetPVarInt( playerid, "RepairEPrice", 0);
									PlayerInfo[ repairman ][ xMDelovi ] -= 3;
									
								} else GRESKA( playerid, "Nisi blizu igraca koji ti je ponudio popravku motora vozila!");
								

						}
					}
					return 1;
				}
				return 1;
			} else GRESKA( playerid, "Nemate dovoljno novca !" );
		}
		return 1;
	}
		////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "popravigume",true) == 0)
	{
		new repairman = GetPVarInt( playerid, "RepairTOffer" );
		if( GetPVarInt( playerid, "RepairTOffer" )  < 999 )
		{
			if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt( playerid, "RepairTPrice" ) )
			{
				if( IsPlayerInAnyVehicle( playerid ) )
				{
					if( IsPlayerConnected( repairman ) )
					{
						if( PlayerInfo[ repairman ][ xMDelovi ] < 1 )
						{
							SendClientMessagee( repairman, CRVENA, "Nemate delova!.");
							SendClientMessagee( playerid, CRVENA, "Mehanicar nema delova!");
							return 1;
						}
						else
						{
								if( IsPlayerNearPlayer( 8.0, playerid, repairman ) )
								{
									new panels, doors, lights, tires, tires1;
									GetVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels, doors, lights, tires);
									tires1 = encode_tires(0, 0, 0, 0); // fix all tires
									UpdateVehicleDamageStatus( GetPlayerVehicleID( playerid ), panels, doors, lights, tires1 );
									SendClientMessageEx( playerid, SVETLOPLAVA, "* Vase gume vozila su popravljene za $%d od strane AutoMehanicara %s.", GetPVarInt( playerid, "RepairTPrice" ), ImeIgraca( repairman ) );
									SendClientMessageEx(repairman, SVETLOPLAVA, "* Popravili ste %s gume vozila. Zaradili ste $%d.", ImeIgraca( playerid ), GetPVarInt( playerid, "RepairTPrice" ) );
									PlayerInfo[ repairman ][ xMehSkill ] += 1;
									if(PlayerInfo[ repairman ][ xMehSkill ] == 50)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 2, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 100)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 3, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 200)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 4, sada imate vise opcija u svom poslu."); }
									else if(PlayerInfo[ repairman ][ xMehSkill ] == 400)
									{ SendClientMessagee(repairman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 5, sada imate vise opcija u svom poslu."); }

									DajIgracuNovac( repairman, GetPVarInt( playerid, "RepairTPrice" ) );
									DajIgracuNovac( playerid, -GetPVarInt( playerid, "RepairTPrice" ) );
									BussinesJobMoney( POSAO_MEHANICAR, (GetPVarInt( playerid, "RepairTPrice" )/10) );
									SetPVarInt( playerid, "RepairTOffer", 999);
									SetPVarInt( playerid, "RepairTPrice", 0);
									PlayerInfo[ repairman ][ xMDelovi ] -= 1;
									
								} else GRESKA( playerid, "Nisi blizu igraca koji ti je ponudio popravku guma vozila!");
						}
					}
					return 1;
				}
				return 1;
			} else GRESKA( playerid, "Nemate dovoljno novca !" );
		}
		return 1;
	}
		////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "gorivo",true) == 0)
	{
		new refillman = GetPVarInt( playerid, "RefillOffer");
		if(GetPVarInt( playerid, "RefillOffer")  < 999)
		{
			if( IsPlayerConnected(refillman))
			{
				if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt( playerid, "RefillPrice"))
				{
					new car = GetPlayerVehicleID( playerid );
					new fuel = GetPVarInt( playerid, "RefillAmount");
					PlayerInfo[ refillman ][ xMehSkill ] += 1;
					if( PlayerInfo[ refillman ][ xMehSkill ] == 50)
					{ SendClientMessagee(refillman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 2, sada imate vise opcija u svom poslu."); }
					else if( PlayerInfo[ refillman ][ xMehSkill ] == 100)
					{ SendClientMessagee(refillman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 3, sada imate vise opcija u svom poslu."); }
					else if( PlayerInfo[ refillman ][ xMehSkill ] == 200)
					{ SendClientMessagee(refillman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 4, sada imate vise opcija u svom poslu."); }
					else if( PlayerInfo[ refillman ][ xMehSkill ] == 400)
					{ SendClientMessagee(refillman, ZUTA, "* Vasa vestina kao Auto Mehanicar sada je Level 5, sada imate vise opcija u svom poslu."); }

					SendClientMessageEx( playerid, SVETLOPLAVA, "* Napunili ste svoje auto %d%, za $%d od strane Mehanicara %s.",fuel, GetPVarInt( playerid, "RefillPrice"), ImeIgraca( refillman ) );
					SendClientMessageEx( refillman, SVETLOPLAVA, "* Napunili ste %s auto sa %d%. Zaradili ste $%d.", ImeIgraca( playerid ), fuel, GetPVarInt( playerid, "RefillPrice") );
					DajIgracuNovac( refillman, GetPVarInt( playerid, "RefillPrice" ) );
					DajIgracuNovac( playerid, -GetPVarInt( playerid, "RefillPrice" ) );
					BussinesJobMoney( POSAO_MEHANICAR, (GetPVarInt( playerid, "RefillPrice" )/10) );
					SetPVarInt( refillman, "CanisterFuel", ( GetPVarInt( refillman, "CanisterFuel") - GetPVarInt( playerid, "RefillAmount" ) ) );

					Fuel[ car ] += fuel;
					SetPVarInt( playerid, "RefillOffer", 999);
					SetPVarInt( playerid, "RefillPrice", 0);
					SetPVarInt( playerid, "RefillAmount", 0);
					return 1;
				} else GRESKA( playerid, "Nemate dovoljno novca !");
			}
			return 1;
			
		} else GRESKA( playerid, "Nitko vam nije ponudio da vam napuni auto !");
	}
		////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "witness",true) == 0)
	{
		if( MarryWitnessOffer[ playerid ] < 999 ) {
			if( IsPlayerConnected( MarryWitnessOffer[ playerid ] ) )
			{
				if( IsPlayerNearPlayer( 10.0, playerid, MarryWitnessOffer[ playerid ] ) )
				{
					format( globalstring, sizeof( globalstring ), "* Prihvatili ste ponudu osobe %s da budete svedok na vencanju.", ImeIgraca( MarryWitnessOffer[ playerid ] ) );
					SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
					format( globalstring, sizeof( globalstring ), "* %s je prihvatio vasu ponudu da bude svedok na vasem vencanju.", ImeIgraca( playerid ) );
					SendClientMessagee( MarryWitnessOffer[ playerid ], SVETLOPLAVA, globalstring );
					MarryWitness[ MarryWitnessOffer[ playerid ] ] = playerid;
					MarryWitnessOffer[ playerid ] = 999;
				}
				else GRESKA( playerid, "Osoba se ne nalazi u vasoj blizini!");
			}
		}
		else GRESKA( playerid, "Niko nije zatvrazio da budete svedok na vencanju!");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "marriage",true) == 0)
	{
		if( ProposeOffer[ playerid ] < 999 )
		{
			if( !IsPlayerInRangeOfPoint( playerid, 10.0, 725.3050, -1597.1079, 3.4530 ) ) return GRESKA( playerid, "Ne nalazite se na mjestu za vencanje." );
			if( IsPlayerConnected( ProposeOffer[ playerid ] ) )
			{
				if( IsPlayerNearPlayer( 10.0, playerid, ProposeOffer[ playerid ] ) )
				{
					if( MarryWitness[ ProposeOffer[ playerid ] ] == 999 ) return GRESKA( playerid, "Isprosilac nema svedoka za vencanje." );
					if( IsPlayerConnected( MarryWitness[ ProposeOffer[ playerid ] ] ) )
					{
						if( IsPlayerNearPlayer( 12.0, ProposeOffer[ playerid ], MarryWitness[ ProposeOffer[ playerid ] ] ) )
						{
							format( globalstring, sizeof( globalstring ), "* Prihvatili ste ponudu osobe %s da bude vas muz.", ImeIgraca( ProposeOffer[ playerid ] ) );
							SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
							format( globalstring, sizeof( globalstring ), "* %s je prihvatila ponudu da bude vasa supruga.", ImeIgraca( playerid ) );
							SendClientMessagee( ProposeOffer[ playerid ], SVETLOPLAVA, globalstring );
							format( globalstring, sizeof( globalstring ), "Maticar: %s da li vi uzimate %s za vaseg voljenog muza? (Koristite 'da', ukoliko pristajete!)", ImeIgraca( playerid ), ImeIgraca( ProposeOffer[ playerid ] ) );
							SendClientMessagee( playerid, BELA, globalstring );
							MarriageCeremoney{ playerid } = 1;
							ProposedTo[ ProposeOffer[ playerid ] ] = playerid;
							GotProposedBy[ playerid ] = ProposeOffer[ playerid ];
							MarryWitness[ ProposeOffer[ playerid ] ] = 999;
							ProposeOffer[ playerid ] = 999;
						}
						else GRESKA( playerid, "Svedok vencanja nije u blizini vaseg buduceg supruga.");
					}
				}
				else GRESKA( playerid, "Osoba se ne nalazi u vasoj blizini!" );
			}
		}
		else GRESKA( playerid, "Niko vas nije zaprosio." );
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "divorce", true ) == 0 )
	{
		if( DivorceOffer[ playerid ] < 999 )
		{
			if( IsPlayerConnected( DivorceOffer[ playerid ] ) )
			{
				if( IsPlayerNearPlayer( 10.0, playerid, DivorceOffer[ playerid ] ) )
				{
					format( globalstring, sizeof( globalstring ), "* Prihvatili ste poziv %s da budete svedok razvoda.", ImeIgraca( DivorceOffer[ playerid ] ) );
					SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
					format( globalstring, sizeof( globalstring ), "* %s je prihvatio da bude svedok razvoda.", ImeIgraca( playerid ) );
					SendClientMessagee( DivorceOffer[ playerid ], SVETLOPLAVA, globalstring );
					strmid( PlayerInfo[ playerid ][ xMarriedTo ], "Niko", 0, strlen( "Niko" ), 24 );
					PlayerInfo[ playerid ][ xMarried ] = false;
					strmid( PlayerInfo[ DivorceOffer[ playerid ] ][ xMarriedTo ], "Niko", 0, strlen( "Niko" ), 24 );
					PlayerInfo[ DivorceOffer[ playerid ]][ xMarried ] = false;
					ProposeOffer[ playerid ] = 999;
					
				} else GRESKA( playerid, "Osoba koja vam je poslala formulare nije u vasoj blizini!");
			}
		} else GRESKA( playerid, "Niko vam nije poslao formulare!");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "ticket",true) == 0)
	{
		new pandur = GetPVarInt( playerid, "TicketOffer");
		if( GetPVarInt( playerid, "TicketOffer") < 999 )
		{
			if( IsPlayerConnected( pandur ) )
			{
				if( IsPlayerNearPlayer( 5.0, playerid, pandur ) )
				{
					if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt( playerid, "TicketMoney" ) )
					{
						SendClientMessageEx( playerid, SVETLOPLAVA, "* Platili ste kaznu u iznosu od $%d policajcu %s.", GetPVarInt( playerid, "TicketMoney"), ImeIgraca( pandur ) );
						SendClientMessageEx( pandur, SVETLOPLAVA, "* %s je platio vasu kaznu $%d koja ide u sef policije.", ImeIgraca( playerid ), GetPVarInt( playerid, "TicketMoney") );
						DajIgracuNovac( playerid, - GetPVarInt( playerid, "TicketMoney") );
						DajIgracuNovac( pandur, GetPVarInt( playerid, "TicketMoney") );
						PlayerInfo[ pandur ][ xPDStatsTicket ] += 1;
						PlayerInfo[ pandur ][ xPDStatsTicketMoney ] += GetPVarInt( playerid, "TicketMoney");
						SetPVarInt( playerid, "TicketOffer", 999 );
						SetPVarInt( playerid, "TicketMoney", 0 );
						
					} else GRESKA( playerid, "Nemas dovoljno novca !");
					
				} else SendClientMessagee( playerid, CRVENA, "Policajac nije dovoljno blizu vas !");
			}
			
		} else GRESKA( playerid, "Nitko vam nije dao tiket !");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item,"recover",true) == 0)
	{
		if( GetPVarInt(playerid, "RecoverOffer") < 999 )
		{
			if( IsPlayerConnected( GetPVarInt(playerid, "RecoverOffer") ) )
			{
				if( IsPlayerNearPlayer( 5.0, playerid, GetPVarInt(playerid, "RecoverOffer") ) )
				{
					if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt(playerid, "RecoverMoney"))
					{
						format( globalstring, sizeof( globalstring ), "* Platio si $%d za troskove lecenja doktoru %s.", GetPVarInt(playerid, "RecoverMoney"), ImeIgraca( GetPVarInt(playerid, "RecoverOffer") ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
						format( globalstring, sizeof( globalstring ), "* %s je platio troskove lecenja u iznosu od $%d koji idu u sef bolnice.", ImeIgraca( playerid ), GetPVarInt(playerid, "RecoverMoney"));
						SendClientMessagee( GetPVarInt(playerid, "RecoverOffer"), SVETLOPLAVA, globalstring);
						DajIgracuNovac( playerid, - GetPVarInt(playerid, "RecoverMoney"));
						DajIgracuNovac( GetPVarInt(playerid, "RecoverOffer"), GetPVarInt(playerid, "RecoverMoney" ) );
						SetPVarInt( playerid, "RecoverOffer", 999 );
						SetPVarInt( playerid, "RecoverMoney", 0 );
						Dimi_SetPlayerHealth( playerid, 100 );
						TogglePlayerControllable( playerid, true );
						//PovredjenIgrac[ playerid ] = false;
						PlayerInfo[ playerid ][ xUbijen ] = 0;
						
					} else GRESKA( playerid, "Nemas toliko novaca!");
					
				} else GRESKA( playerid, "Doktor nije blizu tebe !");
			}
		} else GRESKA( playerid, "Niko ti nije ponudio lecenje !");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item,"medicine",true) == 0)
	{
		if( GetPVarInt(playerid, "MedicineOffer") < 999)
		{
			if( IsPlayerConnected(GetPVarInt(playerid, "MedicineOffer")))
			{
				if( IsPlayerNearPlayer( 8.0, playerid, GetPVarInt(playerid, "MedicineOffer") ) )
				{
					if( PlayerInfo[ playerid ][ xNovac ] >= GetPVarInt(playerid, "MedicineMoney"))
					{
						format( globalstring, sizeof( globalstring ), "* Prihvatili ste lek od Doktora %s i sada imate 100hp-a.", ImeIgraca( GetPVarInt(playerid, "MedicineOffer") ) );
						SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
						format( globalstring, sizeof( globalstring ), "* %s je prihvatio vas lek i zaradili ste $%d koji idu u sef bolnice.", ImeIgraca( playerid ), GetPVarInt(playerid, "MedicineMoney") );
						SendClientMessagee( GetPVarInt(playerid, "MedicineOffer"), SVETLOPLAVA, globalstring );
						DajIgracuNovac( playerid, - GetPVarInt(playerid, "MedicineMoney"));
						DajIgracuNovac( GetPVarInt(playerid, "MedicineOffer"), GetPVarInt(playerid, "MedicineMoney" ));
						Dimi_SetPlayerHealth( playerid, 100 );
						SetPVarInt( playerid, "MedicineOffer", 999);
						SetPVarInt( playerid, "MedicineMoney", 0);
						
					} else GRESKA( playerid, "Nemas toliko novaca! !");
					
				} else GRESKA( playerid, "Taj igrac nije u blizini vas !");
			}
		} else GRESKA( playerid, "Niko vam nije ponudio lek !");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item,"live",true) == 0)
	{
		if( GetPVarInt( playerid, "LiveOffer" ) < 999 )
		{
			if( IsPlayerConnected( GetPVarInt( playerid, "LiveOffer" ) ) )
			{
				if( IsPlayerNearPlayer( 5.0, playerid, GetPVarInt( playerid, "LiveOffer" ) ) )
				{
					SendClientMessage( playerid, 0x33CCFFAA, "* Zamrznuti ste dok razgovor uzivo nezavrsi.");
					SendClientMessage( GetPVarInt(playerid, "LiveOffer"), 0x33CCFFAA, "* Zamrznuti ste dok razgovor uzivo ne zavrsi (koristite /live da zavrsite).");
					TogglePlayerControllable( playerid, false );
					TogglePlayerControllable( GetPVarInt( playerid, "LiveOffer" ), 0 );
					SetPVarInt( playerid, "TalkingLive", GetPVarInt( playerid, "LiveOffer" ) );
					SetPVarInt( GetPVarInt( playerid, "LiveOffer"), "TalkingLive", playerid );
					SetPVarInt( playerid, "LiveOffer", 999 );
					
				} else GRESKA( playerid, "Predaleko ste od Novinara !");
			}
		} else GRESKA( playerid, "Nitko vam nije ponudio razgovor uzivo !");
	}
	////////////////////////////////////////////////////////////////////////////
	else if( strcmp( item, "rukovanje", true ) == 0 )
	{
		if( GetPVarInt( playerid, "ShakeOffer" ) < 999 )
		{
			if( IsPlayerConnected( GetPVarInt( playerid, "ShakeOffer" ) ) )
			{
				if( IsPlayerNearPlayer( 3.0, playerid, GetPVarInt( playerid, "ShakeOffer" ) ) )
				{
					switch( GetPVarInt( playerid, "ShakeStyle" ) )
					{
						case 1:
						{
							ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkfa_swt",4.0,0,0,0,0,0, 1);
						}
						case 2:
						{
							ApplyAnimation(playerid,"GANGS","hndshkaa",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkaa",4.0,0,0,0,0,0, 1);
						}
						case 3:
						{
							ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkba",4.0,0,0,0,0,0, 1);
						}
						case 4:
						{
							ApplyAnimation(playerid,"GANGS","hndshkca",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkca",4.0,0,0,0,0,0, 1);
						}
						case 5:
						{
							ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkda",4.0,0,0,0,0,0, 1);
						}
						case 6:
						{
							ApplyAnimation(playerid,"GANGS","hndshkea",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkea",4.0,0,0,0,0,0, 1);
						}
						case 7:
						{
							ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkfa",4.0,0,0,0,0,0, 1);
						}
						case 8:
						{
							ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0, 1);
						}
						case 9:
						{
							ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0, 1);
							ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0, 1);
						}
					}
					format( globalstring, sizeof( globalstring ), "* Prihvatio si %s-ov zahtev za rukovanje.", ImeIgraca( GetPVarInt( playerid, "ShakeOffer" ) ) );
					SendClientMessage( playerid, SVETLOPLAVA, globalstring );
					format( globalstring, sizeof( globalstring ), "* %s je prihvatio tvoj zahtev za rukovanjem.", ImeIgraca( playerid ) );
					SendClientMessage( GetPVarInt( playerid, "ShakeOffer" ), SVETLOPLAVA, globalstring );
					SetPVarInt( playerid, "ShakeOffer", 0 );
					SetPVarInt( GetPVarInt(playerid, "ShakeOffer" ), "ShakeOffer", 0 );
					
				} else GRESKA( playerid, "Igrac koji ti je ponudio rukovanje nije blizu tebe !");
			}
			
		} else GRESKA( playerid, "Nitko ti nije ponudio rukovanje !");
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/prihvati [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije] popravimotor, popravigume, gorivo, ticket");
		SendClientMessagee( playerid, BELA, "[Opcije] recover, medicine, live, frisk, rukovanje");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:otkaz( playerid, params[])
{
	if( PlayerInfo[ playerid ][ xPosao ] == 0 ) return GRESKA( playerid, "Vi nemate nijedan posao." );
	if( PlayerInfo[ playerid ][ xUgovor ] >= 3 )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "* Ispunili ste 3 sati ugovora, i dali ste otkaz na poslu.");
		PlayerInfo[ playerid ][ xPosao ] = 0;
		PlayerInfo[ playerid ][ xUgovor ] = 0;
		UzeoOpremu[ playerid ] = false;
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
	}
	else
	{
		new chours = 3 - PlayerInfo[ playerid ][ xUgovor ];
		SendClientMessageEx( playerid, SVETLOPLAVA, "* Jos imate %d sati rada da bi ste ispunili svoj ugovor i dali otkaz.", chours);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:stoptaxi( playerid, params[] )
{
	if( offeredByCabbie[ playerid ] != INVALID_PLAYER_ID )
	{
		new vehicleid = GetPlayerVehicleID( playerid );
		if( PlayerInfo[ offeredByCabbie[ playerid ] ][ xPosao ] != POSAO_TAXI ) return GRESKA( playerid, "Ne vozis se taksijem." );
		if( TaximetarUkljucen[ offeredByCabbie[ playerid ] ] == false ) return GRESKA( playerid, "Taximetar nije ukljucen!");
		if( GetPlayerVehicleID( playerid ) != GetPlayerVehicleID( offeredByCabbie[ playerid ] ) ) return GRESKA( playerid, "Nisi u vozilu sa taxistom!");
		
		
		//if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ offeredByCabbie[ playerid ] ][ xClan ] )
		if(TipVozila[ vehicleid ] == POSLOVNO_VOZILO && PosaoVozila[ vehicleid ] == POSAO_TAXI)
		{
			TaximetarUkljucen[ offeredByCabbie[ playerid ] ] = false;
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 0 ] );//vodje
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 1 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 2 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 3 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 4 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 5 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 6 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 7 ] );

			DajIgracuNovac( playerid, -CenaVoznje[ offeredByCabbie[ playerid ] ] );
			DajIgracuNovac( offeredByCabbie[ playerid ], CenaVoznje[ offeredByCabbie[ playerid ] ] );
			SendInfoMessage( playerid, "Stigli ste do lokacije i platili %d$ za voznju", CenaVoznje[ offeredByCabbie[ playerid ] ] );
			SendInfoMessage( offeredByCabbie[ playerid ], "Stigli ste do lokacije na koju je igrac htio i naplatili %d$ za voznju", CenaVoznje[ offeredByCabbie[ playerid ] ] );

			PlayerTextDrawSetString( offeredByCabbie[ playerid ], TaxistaTD[ offeredByCabbie[ playerid ] ][ 7 ], "N/A" );
			PlayerTextDrawShow( offeredByCabbie[ playerid ], TaxistaTD[ offeredByCabbie[ playerid ] ][ 7 ] );
			
			PlayerTextDrawSetString( offeredByCabbie[ playerid ], TaxistaTD[ offeredByCabbie[ playerid ] ][ 5 ], "N/A" );
			PlayerTextDrawShow( offeredByCabbie[ playerid ], TaxistaTD[ offeredByCabbie[ playerid ] ][ 5 ] );
			CenaVoznje[ offeredByCabbie[ playerid ] ] = 0;
			Dimi_KillTimer( TaxiTimer[ offeredByCabbie[ playerid ] ] );
			VoziIgracaID[ offeredByCabbie[ playerid ] ] = INVALID_PLAYER_ID;
			offeredByCabbie[ playerid ] = INVALID_PLAYER_ID;
			
		} else GRESKA( playerid, "Niste u taxi vozilu!");
	}
	else return GRESKA( playerid, "Nisi prihvatio voznju taksijem!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:taxi( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_TAXI ) return GRESKA( playerid, "Niste Taxista!" );
	if(PlayerInfo[ playerid ][ xTaxLic ] == 0) return GRESKA( playerid, "Nemate licencu!");
	new item[32], izbor, vehicleid = GetPlayerVehicleID( playerid );

	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			Dimi_RemovePlayerFromVehicle( playerid );
			return 1;
		}
	}
	if( sscanf( params, "s[32] ", item))
	{
		SendUsageMessage( playerid, "/taxi [ opcija ]");
		SendClientMessagee( playerid, BELA, "duznost, ponudivoznju, uzmiklijenta");
		return 1;
	}
	if( strcmp( item, "duznost",true) == 0)
	{
		//if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2766.1035, -1583.2134, -48.5485 ) ) return GRESKA( playerid, "Morate biti u Taxi uredu da bi obukli/skinuli uniformu i otisli na duznost." );
		if(!IsPlayerInAnyVehicle(playerid))
		{
			GRESKA( playerid, "Morate biti u taxi vozilu!" );
			return 1;
		}
		else
		{
			if(TipVozila[ vehicleid ] == POSLOVNO_VOZILO && PosaoVozila[ vehicleid ] == POSAO_TAXI )
			{ }
			else if(TipVozila[ vehicleid ] != POSLOVNO_VOZILO && PosaoVozila[ vehicleid ] != POSAO_TAXI )
			{
				GRESKA( playerid, "Vozilo mora biti od taxi kompanije!" );
				return 1;
			}
		}
		if( taxiDuty[ playerid ] == false )
		{
			SetPlayerSkin( playerid, 255 );
			taxiDuty[ playerid ] = true;
			SendJobMessage( playerid, "Sada ste na duznosti i dobivat cete pozive!" );
			format( globalstring, sizeof( globalstring ), "{D6CC0C}Taxi vozac "SERVERBOJA_AQUA"%s {D6CC0C}je na duznosti "SERVERBOJA_AQUA"/pozovi 777 {D6CC0C}da ga pozovete!", ImeIgraca( playerid ) );
			SCMA( -1, globalstring );
			
			TaximetarUkljucen[ playerid ] = false;

			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 0 ] );//vodje
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 1 ] );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 2 ] );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 3 ] );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 4 ] );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 6 ] );

			PlayerTextDrawSetString( playerid, TaxistaTD[ playerid ][ 7 ], "N/A" );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 7 ] );

			PlayerTextDrawSetString( playerid, TaxistaTD[ playerid ][ 5 ], "N/A" );
			PlayerTextDrawShow( playerid, TaxistaTD[ playerid ][ 5 ] );

			CenaVoznje[ playerid ] = 0;
			VoziIgracaID[ playerid ] = INVALID_PLAYER_ID;
			offeredByCabbie[ playerid ] = INVALID_PLAYER_ID;
		}
		else if( taxiDuty[ playerid ] == true )
		{
			SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
			taxiDuty[ playerid ] = false;
			SendJobMessage( playerid, "Niste vise na duznosti i necete primati pozive!" );

			TaximetarUkljucen[ playerid ] = false;

			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 0 ] );//vodje
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 1 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 2 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 3 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 4 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 5 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 6 ] );
			PlayerTextDrawHide( playerid, TaxistaTD[ playerid ][ 7 ] );

			CenaVoznje[ playerid ] = 0;
			VoziIgracaID[ playerid ] = INVALID_PLAYER_ID;
			offeredByCabbie[ playerid ] = INVALID_PLAYER_ID;
		}
		return 1;
	}
	else if( strcmp( item, "ponudivoznju",true) == 0)
	{
		if( sscanf( params, "s[32]u", item, izbor ) )
		{
			SendUsageMessage( playerid, "/taxi ponudivoznju [ ID/Ime ] ");
			return 1;
		}
		if( playerid == izbor ) return GRESKA( playerid, "Ne mozes voziti sam sebe!");
		if( izbor == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
		if( taxiDuty[ playerid ] == false ) return GRESKA( playerid, "Morate biti na duznosti." );
		if( VoziIgracaID[ playerid ] != INVALID_PLAYER_ID ) return GRESKA( playerid, "Vec vozis nekog!");
		if( GetPlayerVehicleID( playerid ) != GetPlayerVehicleID( izbor ) ) return GRESKA( playerid, "Igrac mora biti u vasem vozilu");
		//if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
		if(TipVozila[ vehicleid ] == POSLOVNO_VOZILO && PosaoVozila[ vehicleid ] == POSAO_TAXI )
		{
			format( globalstring, sizeof( globalstring ), "Taxi vozac %s vam je ponudio taxi voznju.\n\nDa li zelite voznju?", ImeIgraca( playerid ) );
			ShowPlayerDialog( izbor, dialog_TAXIOFFER, DSMSG, "Taxi voznja", globalstring, "Prihvacam", "Odbijam");
			SendJobMessage( playerid, "Ponudio si voznju igracu {36AB00}%s"col_white".", ImeIgraca( izbor ) );
			offeredByCabbie[ izbor ] = playerid;
			
		} else GRESKA( playerid, "Morate biti u vozilu taksiste." );
		
		return 1;
	}
	else if( strcmp( item, "uzmiklijenta",true) == 0)
	{
		new Float:playerPos[ 3 ];
		if( sscanf( params, "s[32]u", item, izbor ) )
		 {
			SendUsageMessage( playerid, "/taxi uzmiklijenta [ ID/Ime ] ");
			return 1;
		}
		if( playerid == izbor ) return GRESKA( playerid, "Ne mozes voziti sam sebe!");
		if( izbor == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
		if( !PozvaoTaxi[ izbor ] ) return GRESKA( playerid, "Taj igrac nije pozvao taxi!");
		if( taxiDuty[ playerid ] == false ) return GRESKA( playerid, "Morate biti na duznosti." );
		if( VoziIgracaID[ playerid ] != INVALID_PLAYER_ID ) return GRESKA( playerid, "Vec vozis nekog!");
		//if( TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ] )
		if(TipVozila[ vehicleid ] == POSLOVNO_VOZILO && PosaoVozila[ vehicleid ] == POSAO_TAXI )
		{
			PozvaoTaxi[ izbor ] = false;
			SendJobMessage( playerid, "Prihvatio si poziv igraca "SERVERBOJA_AQUA"%s "col_white"kome je potreban taxi, lokacija igraca:"SERVERBOJA_AQUA" %s!", ImeIgraca( izbor ), GetPlayerLocation( izbor ) );
			GetPlayerPos( izbor, playerPos[ 0 ], playerPos[ 1 ], playerPos[ 2 ] );
			Dimi_SetPlayerCheckpoint( playerid, playerPos[ 0 ], playerPos[ 1 ], playerPos[ 2 ], 3.0 );
			CheckpointStatus[ playerid ] = 12;

			for(new i; i < MAX_PLAYERS; i++)
			{
				if( PlayerInfo[ i ][ xPosao ] == POSAO_TAXI && taxiDuty[ i ] == true )
					SendClientMessageEx(i, -1, "{D6CC0C}| TAXI | "SERVERBOJA_AQUA"%s {D6CC0C}je prihvatio klijenta"SERVERBOJA_AQUA" %s.", ImeIgraca( playerid ), ImeIgraca( izbor ) );
			}
			
		} else GRESKA( playerid, "Morate biti u vozilu taksiste." );
		
		return 1;
	}
	else
	{
		SendUsageMessage( playerid, "/taxi [ opcija ]");
		SendClientMessagee( playerid, BELA, "duznost, ponudivoznju, uzmiklijenta");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
/*CMD:uzmisemenke( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 6 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Ovu komandu moze koristiti samo farmer." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu farmera!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, -1115.5098, -1246.7819, 129.2188 ) ) return GRESKA( playerid, "Nisi blizu spremista sjemenki.");
	if( farmerInfo[ playerid ][ fiFarmerSeeds ] > 0 ) return GRESKA( playerid, "Imas semenke kod sebe, ubaci ih u traktor i odi ih posijat" );
	if( farmerInfo[ playerid ][ fiFarmerPlantsPlanted ] != -1 ) return GRESKA( playerid, "Vec imas zapocet proces farmera." );
	if( 0 < farmerInfo[ playerid ][ fiFarmerPickupedBales ] < MAX_FARMERS_PLANTS_PLANTED ) return GRESKA( playerid, "Nisi sakupio sve useve koje si posijao" );
	if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na posao dok imate wanted.");

	AccountVerified[ playerid ] = false;
	farmerInfo[ playerid ][ fiFarmerSeeds ] = 10;
	farmerInfo[ playerid ][ fiFarmerPlantsPlanted ] = 0;
	farmerInfo[ playerid ][ fiFarmerWheatCreated ] = 0;
	farmerInfo[ playerid ][ fiFarmerPickupedBales ] = 0;
	farmerInfo[ playerid ][ fiCowNumber ] = 0;
	farmerInfo[ playerid ][ fiFruitNumber ] = 0;
	farmerInfo[ playerid ][ fiFruitDeliveryNumber ] = 0;

	if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) )
	{
		SetPlayerSpecialAction( playerid, SPECIAL_ACTION_CARRY );
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 2060, 1, 0.030783, 0.407292, -0.017557, 167.442321, 272.735290, 346.685028, 1.000000, 1.000000, 1.000000);
	}

	SendJobMessage( playerid, "Uzeo si {36AB00}10 "col_white"sjemenki i sad ih moras posejati pomocu traktora");
	SendJobMessage( playerid, "Prvo moras ubaciti te semenke u traktor (klikni tipku {36AB00}LEVI KLIK MISA "col_white"blizu traktora)");
	return 1;
}*/
//////////////////////////////////////////////////////////////////////////////////
CMD:muzikrave( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Niste zaposleni kao farmer!" );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu za posao!" );
	if( !farmerInfo[ playerid ][ fiHaveBucket ] ) return GRESKA( playerid, "Niste uzeli kantu za mlijeko!" );
	if( farmerInfo[ playerid ][ fiCowNumber ] != 0 ) return GRESKA( playerid, "Vec si zapoceo muzenje!" );
	//if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");

	AccountVerified[ playerid ] = false;
	if( farmerInfo[ playerid ][ fiVehicleBucket ] != -1 )
	{
		new farmvehicle = farmerInfo[ playerid ][ fiVehicleBucket ];
		farmerVehicles[ farmvehicle ][ fvMilk ] = false;
		farmerVehicles[ farmvehicle ][ fvMilkpID ] = -1;
	}
	farmerInfo[ playerid ][ fiCowNumber ] = 0;
	farmerInfo[ playerid ][ fiVehicleBucket ] = -1;
	Dimi_SetPlayerCheckpoint( playerid, milkInfo[ 0 ][ cpPos ][ 0 ], milkInfo[ 0 ][ cpPos ][ 1 ], milkInfo[ 0 ][ cpPos ][ 2 ], 1.0);
	CheckpointStatus[ playerid ] = 16;
	SendJobMessage( playerid, "Krava koju trebate pomusti oznacena je markerom na mapi!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:berivoce( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Niste zaposleni kao farmer!" );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu za posao!" );
	if( !farmerInfo[ playerid ][ fiHaveGajbica ] ) return GRESKA( playerid, "Niste uzeli praznu gajbu za branje!" );
	if( farmerInfo[ playerid ][ fiFruitNumber ] != 0 ) return GRESKA( playerid, "Vec ste zapoceli branje voca!" );
	//if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
	AccountVerified[ playerid ] = false;
	farmerInfo[ playerid ][ fiFruitNumber ] = 1;
	Dimi_SetPlayerCheckpoint( playerid, -1070.4482,-1259.6185,132.1626, 1.0);
	CheckpointStatus[ playerid ] = 16;
	SendJobMessage( playerid, "Drvo koje trebate obrati oznaceno je na mapi!");
	return true;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:dostavivoce( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Niste zaposleni kao farmer!" );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu za posao!" );
	if( farmerInfo[ playerid ][ fiFruitDeliveryNumber ] != 0 ) return GRESKA( playerid, "Vec ste zapoceli prevoz voca!" );
	//if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");

	AccountVerified[ playerid ] = false;
	if( farmerInfo[ playerid ][ fiVehicleBucket ] != -1 )
	{
		new farmvehicle = farmerInfo[ playerid ][ fiVehicleBucket ];
		farmerVehicles[ farmvehicle ][ fvMilk ] = false;
		farmerVehicles[ farmvehicle ][ fvMilkpID ] = -1;
	}
	farmerInfo[ playerid ][ fiVehicleBucket ] = -1;
	farmerInfo[ playerid ][ fiFruitDeliveryNumber ] = 1;
	Dimi_SetPlayerCheckpoint( playerid, -1073.9840,-1209.5349,129.2188, 1.0);
	CheckpointStatus[ playerid ] = 16;
	SendJobMessage( playerid, "Idite do skladista da uzmete gajbe sa vocem!");
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uzmivoce( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Ovu komandu moze koristiti samo farmer." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu farmera!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, -1073.9840,-1209.5349,129.2188 ) ) return GRESKA( playerid, "Nisi kod gajbica." );
	if( farmerInfo[ playerid ][ fiHaveFruits ] ) return GRESKA( playerid, "Vec si uzeo voce!");
	if( farmerInfo[ playerid ][ fiFruitDeliveryNumber ] != 2 ) return GRESKA( playerid, "Ne mozes to!" );
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na posao dok imate wanted.");
	farmerInfo[ playerid ][ fiHaveFruits ] = true;
	SetPlayerAttachedObject(playerid, 0, 19636, 1, -0.027999, 0.444999, -0.022000, -0.999999, 94.299942, 91.899963);
	SetPlayerAttachedObject(playerid, 1, 19638, 1, 0.125999, 0.449999, 0.002000, -8.199994, 94.899948, 91.199966);
	SetPlayerAttachedObject(playerid, 2, 19637, 1, 0.283000, 0.449999, -0.043000, -8.199994, 94.899948, 97.699897);
	SendJobMessage( playerid, "Uzeo si voce iz magacina sada ga ubaci u vozilo (LMB)!");
	farmerInfo[ playerid ][ fiFruitDeliveryNumber ] = 3;
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
	return true;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:uzmikantu( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}

	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Ovu komandu moze koristiti samo farmer." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu farmera!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, -1079.7056,-1207.0790,129.2188 ) ) return GRESKA( playerid, "Nisi kod kanti." );
	if( farmerInfo[ playerid ][ fiHaveBucket ] ) return GRESKA( playerid, "Vec si uzeo kantu!");
	if( farmerInfo[ playerid ][ fiCowNumber ] != 0 ) return GRESKA( playerid, "Vec imas pocet proces muznje krave." );
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na posao dok imate wanted.");
	
	farmerInfo[ playerid ][ fiHaveBucket ] = true;
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 2613, 1, -0.200000, 1.000000, -0.699999, -9.000000, 90.000000, -21.000000);
	SendJobMessage( playerid, "Uzeo si kantu sad mozes da muzes krave ("col_white"/muzikrave"col_white")!");
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uzmigajbu( playerid, params[] )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_FARMER ) return GRESKA( playerid, "Ovu komandu moze koristiti samo farmer." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu farmera!" );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, -1073.9840,-1209.5349,129.2188 ) ) return GRESKA( playerid, "Nisi kod gajbica." );
	if( farmerInfo[ playerid ][ fiHaveGajbica ] ) return GRESKA( playerid, "Vec si uzeo gajbu!");
	if( farmerInfo[ playerid ][ fiFruitNumber ] != 0 ) return GRESKA( playerid, "Vec ste zapoceli branje voca!" );
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na posao dok imate wanted.");
	farmerInfo[ playerid ][ fiHaveGajbica ] = true;
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 19639, 1, 0.017999, 0.470999, 0.029999, -0.900001, 95.499961, -86.599990);
	SendJobMessage( playerid, "Uzeo si gajbu sada mozes brati voce ("col_white"/berivoce"col_white")!");
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );
	return true;
}


//////////////////////////////////////////////////////////////////////////////////
CMD:pizza( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}

	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PIZZA ) return GRESKA( playerid, "Ovu komandu moze koristiti samo Pizza Boy." );
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendUsageMessage( playerid, "/pizza [ opcija ]");
		SendClientMessagee( playerid, BELA, "preuzmi, uzmi, ubaci, prodaj");
		return 1;
	}
	else if( strcmp( item, "preuzmi", true ) == 0)
	{
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1197.2174,-896.6176,1059.3329 ) ) return GRESKA( playerid, "Morate biti u MC Donalds-u da bi narucili picu." );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu dostavljaca pice!" );
		if( UzeoPicu[ playerid ] == true ) return GRESKA( playerid, "Vec imas paket pice u rukama." );
		if( ProcesPice[ playerid ] != 0 ) return GRESKA( playerid, "Vec ste poceli posao dostavljaca." );
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 1582, 1, 0.006999, 0.539000, 0.014999, 0.000000,94.099998,0.000000, 1.000000,1.000000,1.000000, 0, 0 );
		ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
		UzeoPicu[ playerid ] = true;
		ProcesPice[ playerid ] = 1;
		SendJobMessage( playerid, "Uzeli ste paket pice, idite do motora picerije i kucajte {36AB00}/pizza ubaci"col_white". ");
		return 1;
	}
	else if( strcmp( item, "uzmi",true) == 0)
	{
		new vehicleid = getPlayerNearestPizzaVehicle( playerid );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu dostavljaca pice!" );
		if( UzeoPicu[ playerid ] == true ) return GRESKA( playerid, "Vec imas paket pice u rukama." );
		if( GetVehicleModel( vehicleid ) != 448 ) return GRESKA( playerid, "Nisi pored motora picerije." );
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti van vozila." );
		if( pizzaVehicle[ vehicleid ] == false ) return GRESKA( playerid, "U ovom motoru nema pica za uzeti." );
		pizzaVehicle[ vehicleid ] = false;
		ProcesPice[ playerid ] = 3;
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 1582, 1, 0.006999, 0.539000, 0.014999, 0.000000,94.099998,0.000000, 1.000000,1.000000,1.000000, 0, 0 );
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
		UzeoPicu[ playerid ] = true;
		SendJobMessage( playerid, "Kreni ka kuci i kucaj {36AB00}/pizza prodaj"col_white" da je prodas." );
		return 1;
	}
	else if( strcmp( item, "ubaci",true) == 0)
	{
		new vehicleid = getPlayerNearestPizzaVehicle( playerid );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu dostavljaca pice!" );
		if( UzeoPicu[ playerid ] != true ) return GRESKA( playerid, "Nemate paket pice u rukama." );
		if( GetVehicleModel( vehicleid ) != 448 ) return GRESKA( playerid, "Nisi pored motora picerije." );
		if( pizzaVehicle[ vehicleid ] == true ) return GRESKA( playerid, "U ovom motoru vec ima paketa pice." );
		pizzaVehicle[ vehicleid ] = true;
		ProcesPice[ playerid ] = 2;
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		ApplyAnimation( playerid, "CARRY", "putdwn", 3.0, 0, 0, 0, 0, 0 );
		UzeoPicu[ playerid ] = false;
		SendJobMessage( playerid, "Uspjesno ste stavili paket pice u motor, idite po kucama i prodajte picu( {36AB00}/pizza prodaj"col_white" ).");
		return 1;
	}
	else if( strcmp( item, "prodaj",true) == 0)
	{
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu dostavljaca pice.( /pizza uniforma )" );
		if( GetNearestProperty( playerid ) == -1 ) return GRESKA( playerid, "Nema kuce / stana u vasoj blizini!" );
		if( II[ GetNearestProperty( playerid ) ][ iUsage ] == IMOVINA_KUCA || II[ GetNearestProperty( playerid ) ][ iUsage ] == IMOVINA_STAN )
		{
			if( UzeoPicu[ playerid ] != true ) return GRESKA( playerid, "Nemate paket pice u rukama." );
			if( ProcesPice[ playerid ] < 3 ) return GRESKA( playerid, "Ne mozes prodati picu, nisi pravilno prosao proces." );
			if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Moras biti van vozila." );
			new time = gettime( );
			if( ( time - II[ GetNearestProperty( playerid ) ][ iPizzaTime ] ) < 600 )
			{
				GRESKA( playerid, "Ova kuca trenutno ne treba picu (treba proci 10 minuta)" );
				return 1;
			}
			ProcesPice[ playerid ] = 0;
			new bonus = random(PosloviInfo[ BonusPizza ]);
			new isplata = PosloviInfo[ DostavljacPizzePlata ] + bonus;
			DajIgracuNovac( playerid, isplata );
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
			ApplyAnimation( playerid, "CARRY", "putdwn", 3.0, 0, 0, 0, 0, 0 );
			UzeoPicu[ playerid ] = false;
			II[ GetNearestProperty( playerid ) ][ iPizzaTime ] = gettime();
			SaveProperty( GetNearestProperty( playerid ) );
			SendJobMessage( playerid, "Uspjesno si prodao picu i zaradio "col_job"%d$",isplata );
		}else return GRESKA( playerid, "Nema kuce / stana u vasoj blizini!" );
		return 1;
	}
	else
	{
		SendUsageMessage( playerid, "/pizza [ opcija ]");
		SendClientMessagee( playerid, BELA, "preuzmi, uzmi, ubaci, prodaj");
	}
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:lokacije( playerid, params[] )
{ 
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PREVOZNIK ) return GRESKA( playerid, "Ovu komandu moze koristiti samo zaposlenik kod Prevoznika." );
	ShowPlayerDialog( playerid, dialog_BIRAJLOKACIJU, DSL, "Izaberi lokaciju", "Lokacija utovara drveca\nLokacija utovara goriva\nLokacija utovara sljunka", D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:verifikacija( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	
	if( PlayerInfo[ playerid ][ xPosao ] == 0 ) return GRESKA( playerid, "Ovu komandu moze koristiti samo onaj ko je zaposljen." );

	new broj = ( random( 800 ) + 100 );
	PlayerCode[ playerid ] = broj;
	format( globalstring, sizeof( globalstring ), "Unesite u prazno polje ovaj kod: %d", broj );
	ShowPlayerDialog( playerid, dialog_VERIFIKACIJA, DSI, D_NASLOV, globalstring, D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uzmidrvo( playerid, params[] )
{ // by Letic


	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}

	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PNAMESTAJA ) return GRESKA( playerid, "Ovu komandu moze koristiti samo zaposlenik kod Proizvodjac namestaja." );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2159.8730,-2296.4348,13.4891)) return GRESKA( playerid, "Ne nalazite se na odgovarajucem mjestu!");
	if( NamestajLevel[ playerid ] != 1 ) return GRESKA( playerid, "Ne mozete to!");
	SendJobMessage( playerid, "Uzeli ste drvo, sada ga ubacite u masinu da bi napravili deo za namestaj!") ;
	SendJobMessage( playerid, "Drvo u masinu ubacujete tipkom "col_job"Y!");
	NamestajLevel[ playerid ] = 2; CheckpointStatus[ playerid ] = 40;
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_BADGE, 19793, 1, 0.00, 0.47, -0.00, 0.0, 90.0, 0.0, 0.98, 0.92, 1.00 );
	SetPlayerCheckpoint( playerid, 2149.6013,-2273.1235,13.3047, 4.0 );
	ServerInfo[ Drva ] -= 5;
	SaveServerStats( );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ostavidrvo( playerid, params[] )
{ // by Letic

	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}

	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PNAMESTAJA ) return GRESKA( playerid, "Ovu komandu moze koristiti samo zaposlenik kod Proizvodjac namestaja." );
	if( NamestajLevel[ playerid ] != 4) return GRESKA( playerid, "Ne mozete to!");
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2129.8132,-2282.4976,14.7825)  && !IsPlayerInRangeOfPoint(playerid, 3.0, 2125.7715,-2278.3010,14.7825) && !IsPlayerInRangeOfPoint(playerid, 3.0, 2121.8728,-2274.6519,14.7825)) return GRESKA(playerid, "Ne nalazite se blizu zanatskog stola!");

	if( IsPlayerInRangeOfPoint( playerid, 3.0, 2129.8132,-2282.4976,14.7825 ) )
	{
		Objekat[ playerid ] = CreatePlayerObject(playerid, 2410,  2129.03027, -2283.09033, 14.64230,   0.00000, 0.00000, 106.00000);
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3.0, 2125.7715,-2278.3010,14.7825 ) )
	{
		Objekat[ playerid ] = CreatePlayerObject(playerid, 2410, 2124.97925, -2278.88794, 14.64230,   0.00000, 0.00000, 106.00000);
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3.0, 2121.8728,-2274.6519,14.7825 ) )
	{
		Objekat[ playerid ] = CreatePlayerObject(playerid, 2410, 2121.21606, -2275.25244, 14.64230,   0.00000, 0.00000, 106.00000);
	}
	
	TogglePlayerControllable (playerid, false );
	RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BADGE ); SetPlayerSpecialAction( playerid, 0 );
	SendJobMessage( playerid, "Stavili ste deo na zanatski stol, sada ga izrezite testerom!");
	SendJobMessage( playerid, "Drvo rezete pritiskom na "col_job"LEVI KLIK MISA"col_white" vise puta!");
	NamestajLevel[ playerid ] = 5;
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prevozdrveca( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	
	if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
	new vehicleid = GetPlayerVehicleID( playerid );
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PREVOZNIK ) return GRESKA( playerid, "Ovu komandu moze koristiti samo zaposlenik kod Prevoznika." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu prevoznika!" );
	if( !IsPlayerInRangeOfPoint( playerid, 10.0, -569.0004, -93.3358, 63.9587 ) ) return GRESKA( playerid, "Nisi na mjestu utovara( kucaj '/lokacije' )." );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu DFT-30.");
	if( GetVehicleModel( vehicleid ) != 578 ) return GRESKA( playerid, "Morate biti u vozilu DFT-30.");
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
	if( WOOD[ GetPlayerVehicleID( playerid ) ] == true ) return GRESKA( playerid, "Ovo vozilo vec ima utovareno drvece." );
	if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
	AccountVerified[ playerid ] = false;
	announcement( playerid, "~w~Pricekajte drvece se utovaruje..", 5000, 1);
	TogglePlayerControllable( playerid, false );
	SetTimerEx( "Utovar", 5000, false, "dii", playerid, vehicleid, 1 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prevozsljunka( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	
	if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
	new vehicleid = GetPlayerVehicleID( playerid );
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_PREVOZNIK ) return GRESKA( playerid, "Ovu komandu moze koristiti samo zaposlenik kod Prevoznika." );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu prevoznika!" );
	if( !IsPlayerInRangeOfPoint( playerid, 10.0, 620.8951, 832.1742, -42.9609 ) ) return GRESKA( playerid, "Nisi na mjestu utovara( kucaj '/lokacije' )." );
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu Flatbed.");
	if( GetVehicleModel( vehicleid ) != 455 ) return GRESKA( playerid, "Morate biti u vozilu Flatbed.");
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
	if( sljunak[ GetPlayerVehicleID( playerid ) ] == true ) return GRESKA( playerid, "Ovo vozilo vec ima utovaren sljunak." );
	if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
	AccountVerified[ playerid ] = false;
	announcement( playerid, "~w~Pricekajte sljunak se utovaruje..", 5000, 1);
	TogglePlayerControllable( playerid, false );
	SetTimerEx( "Utovar", 5000, false, "dii", playerid, vehicleid, 2 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:levelup( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLevel ] >= 1 )
	{
		new nxtlevel = PlayerInfo[ playerid ][ xLevel ]+1;
		new expamount = nxtlevel*levelexp;
		if( PlayerInfo[ playerid ][ xRespekt ] < expamount )
		{
			GRESKA( playerid, "Trebas imati %d Respekta, a ti trenutno imas [%d] !", expamount, PlayerInfo[ playerid ][ xRespekt ] );
			return 1;
		}
		else
		{
			format( globalstring, sizeof( globalstring ), "~g~LEVEL UP~n~~w~Sada si Level %d", nxtlevel );
			announcement( playerid, globalstring, 5000, 1);
			PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
			PlayerPlayMusic( playerid );
			PlayerInfo[ playerid ][ xLevel ]++;
			SetPlayerScore( playerid, PlayerInfo[ playerid ][ xLevel ] );
			/*if(PlayerInfo[ playerid ][pDonateRank] > 0) { // donator
				PlayerInfo[ playerid ][pRespects] -= expamount;
				new total = PlayerInfo[ playerid ][pRespects];
				if(total > 0)
					PlayerInfo[ playerid ][pRespects] = total;
				else
					PlayerInfo[ playerid ][pRespects] = 0;
			}
			else
				PlayerInfo[ playerid ][pRespects] = 0;*/
			PlayerInfo[ playerid ][ xPoboljsanja ] += 2;
			PlayerInfo[ playerid ][ xRespekt ] = 0; // ..
			SavePlayer( playerid );
			format( globalstring, sizeof( globalstring ), "   Kupio si Level %d Ukucaj /upgrade za neke bonuse", nxtlevel);
			SendClientMessagee( playerid, SVETLOPLAVA, globalstring);
			format( globalstring, sizeof( globalstring ), "   Imas %d neiskoristenih Upgrade Poena", PlayerInfo[ playerid ][ xPoboljsanja ] );
			SendClientMessagee( playerid, BELA, globalstring);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:upgrade( playerid, params[] )
{
	new item[32];
	if( sscanf( params, "s[32] ", item))
	{
		SendUsageMessage( playerid, "/upgrade [opcija]");
		SendClientMessagee( playerid, BELA, "health, snaga");
		return 1;
	}
	if( strcmp( item, "health",true) == 0 )
	{
		if(PlayerInfo[ playerid ][ xPoboljsanja ] > 1 )
		{
			if(PlayerInfo[ playerid ][ xSHealth ] < 50 )
			{
				PlayerInfo[ playerid ][ xSHealth ] = PlayerInfo[ playerid ][ xSHealth ]+5.0;
				SendInfoMessage( playerid, "Novo poboljsanje: Sada ces se spawnati sa  %.2f energije (+5)",PlayerInfo[ playerid ][ xSHealth ]+50 );
				PlayerInfo[ playerid ][ xPoboljsanja ] -= 2;
				SavePlayer( playerid );
			}
			else GRESKA( playerid, "Imas maksimum spawn energiju");
		}
		else GRESKA( playerid, "Imate %d upgrade poena a to nije dovoljno!",PlayerInfo[ playerid ][ xPoboljsanja ]);
		return 1;
	}
	else if( strcmp( item, "snaga",true) == 0 )
	{
		if( PlayerInfo[ playerid ][ xLevel ] >= 3 )
		{
			if( PlayerInfo[ playerid ][ xPoboljsanja ] > 1 )
			{
				if( PlayerInfo[ playerid ][ xSnaga ] < 20 )
				{
					SendInfoMessage( playerid, "Novo poboljsanje: Unaprijedili ste snagu vaseg IC lika.Sada iznosi  %d !", PlayerInfo[ playerid ][ xSnaga ]+1 );
					PlayerInfo[ playerid ][ xSnaga ] += 1;
					PlayerInfo[ playerid ][ xPoboljsanja ] -= 2;
				}
				else GRESKA( playerid, "Imas maksimum snagu");
			}
			else GRESKA( playerid, "Imate %d upgrade poena a to nije dovoljno!",PlayerInfo[ playerid ][ xPoboljsanja ]);
		}
		else GRESKA( playerid, "Trenutno nedostupno,premali level!");
		return 1;
	}
	else
	{
		SendUsageMessage( playerid, "/upgrade [opcija]");
		SendClientMessagee( playerid, BELA, "health, snaga");

	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:popraviavion( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint( playerid, 15.0, 1865.6421, -2390.7712, 14.4759 ) || IsPlayerInRangeOfPoint( playerid, 15.0, -1525.4755, -81.9020, 15.0702 ) || IsPlayerInRangeOfPoint( playerid, 15.0, 1433.4257, 1379.8014, 11.7424 ) )
	{
		if( GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 519 || GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 511 )
		{
			if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PILOT )
			{
			
				if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Niste na mjestu vozaca!");
				if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate 500 dolara kod sebe." );
				Dimi_RepairVehicle( playerid, GetPlayerVehicleID( playerid ) );
				Dimi_SetVehicleHealth( GetPlayerVehicleID( playerid ), 1000.0 );
				antiCheatCS[ playerid ][ VehRepairTime ] = 3;
				vCanDrive[ GetPlayerVehicleID( playerid ) ] = 1;
				DajIgracuNovac( playerid, -500 );
				SendInfoMessage( playerid, "Popravili ste avion za 500 dolara." );
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:uniforma( playerid, params[] )
{
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes da uzmes opremu dok si u vozilu." );
	new id = JobUniformPlace( playerid );
	if( id == -1 ) return GRESKA( playerid, "Niste na mjestu za uzimanje ili skidanje opreme!" );
	if( PlayerInfo[ playerid ][ xPosao ] != jobsInfos[ id ][ jType ] ) return GRESKA( playerid, "Niste zaposljeni kao %s!", jobsInfos[ id ][ jName ] );
	if( jobsInfos[ id ][ jUniformPos ] == 0 || jobsInfos[ id ][ jUniformSkin_Male ] == 0 ) return GRESKA( playerid, "Za ovaj posao nije potrebna uniforma." );

	if( !UzeoOpremu[ playerid ] )
	{
		UzeoOpremu[ playerid ] = true;

		if( PlayerInfo[ playerid ][ xPol ] == 1 )
		{
			if( jobsInfos[ id ][ jType ] == POSAO_FARMER )
			{
				new farmerskin[ 5 ] =
				{
				  202,
				  161,
				  158,
				  133,
				  132
				};
				SetPlayerSkin( playerid, farmerskin[ random( 5 ) ] );
			}
			else
			{
				SetPlayerSkin( playerid, jobsInfos[ id ][ jUniformSkin_Male ] );
			}

		}
		else if( PlayerInfo[ playerid ][ xPol ] == 2 ) SetPlayerSkin( playerid, jobsInfos[ id ][ jUniformSkin_Female ] );
		else SetPlayerSkin( playerid, jobsInfos[ id ][ jUniformSkin_Male ] );

		if( jobsInfos[ id ][ jType ] == POSAO_RUDAR )
		{
			SetPlayerAttachedObject( playerid, OBJECT_SLOT_LHAND, 18634, 6, 0.048513, 0.018571, 0.028653, 314.764404, 226.953979, 222.510803, 1.000000, 1.000000, 1.000000 );
			SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 2060, 1, -0.191781, -0.162666, -0.003734, 88.812377, 0.000000, 0.408470, 1.000000, 1.000000, 1.000000 );
		}

		SendJobMessage( playerid, "Uzeli ste uniformu posla "col_job"%s "col_white"i sada mozete raditi vas posao!", jobsInfos[ id ][ jName ] );
	}
	else if( UzeoOpremu[ playerid ] )
	{
		UzeoOpremu[ playerid ] = false;
		SetPlayerSkin( playerid, PlayerInfo[ playerid ][ xSkin ] );
		SendJobMessage( playerid, "Skinuli ste poslovnu opremu." );
		if( jobsInfos[ id ][ jType ] == POSAO_RUDAR )
		{
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prekiniposao( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPosao ] == POSAO_KOSAC )
	{
		if( !KrenuoKosenje[ playerid ] ) return GRESKA( playerid, "Niste poceli posao pa nemate sta da prekinete.");
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
		for( new i = 0; i < 76; i++)
		{
			DestroyDynamicObject( Grass[ playerid ][ i ] );
			RemovePlayerMapIcon(playerid, i);
		}
		PokosenaTrava[ playerid ] = 0;
		KrenuoKosenje[ playerid ] = false;
		Dimi_KillTimer( TravaTimer[ playerid ] );
		SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
		TogglePlayerControllable( playerid, true );

		SendJobMessage( playerid, "Niste pokosili svu travu pa niste ni dobili nista novca." );
		return 1;
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_TEMPODOSTAVA )
	{
		Dimi_DisablePlayerCheckpoint( playerid );
		CheckpointStatus[ playerid ] = 0;
		DeliverLevel[ playerid ] = 0;
		TempoDostavaFabrikaCP[ playerid ] = 0;
		TrafikaTrenutna[ playerid ] = 0;
		TrafikaPrva[ playerid ] = 0;
		CarriesBox[ playerid ] = 0;
		SetVehicleToRespawn( DeliverCar[ playerid ] );
		StateBox[ DeliverCar[ playerid ] ] = 0;
		KamionUsed[ DeliverCar[ playerid ] ] = -1;
		DeliverCar[ playerid ] = -1;
		KamionUsed[ playerid ] = -1;
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BADGE );
		StaroVreme[ playerid ] = 0;
		NovoVreme[ playerid ] = 0;
		SendJobMessage( playerid, "Prekinuli ste posao zato necete dobiti novac od posla!");
		return 1;
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_KOMUNALAC )
	{
		new item[32];
		if( sscanf(params, "s[32] ", item))
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/prekiniposao [opcija]");
			SendClientMessagee( playerid, BELA, "[Opcije] djubretar, cistac");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			return 1;
		}
		if( strcmp( item, "djubretar",true) == 0)
		{
			if( garbagemanInfo[ playerid ][ gmiJob ] == false ) return GRESKA( playerid, "Niste krenuli sa poslom.");
			if( IsPlayerInAnyVehicle( playerid ) && GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 408 )
			{
				if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
				Dimi_DisablePlayerCheckpoint( playerid );
				CheckpointStatus[ playerid ] = 0;
				garbagemanInfo[ playerid ][ gmiDuty ] = false;
				garbagemanInfo[ playerid ][ gmiReadyToDump ] = false;
				garbagemanInfo[ playerid ][ gmiHasGarbage ] = false;
				garbagemanInfo[ playerid ][ gmiJob ] = false;
				garbagemanInfo[ playerid ][ gmiContainerID ] = 0;
				garbagemanInfo[ playerid ][ gmiVehicleID ] = -1;
				AktivanKontejner[ playerid ] = -1;
				RemovePlayerAttachedObject(playerid, smeceobject1[playerid]);
				DestroyPlayerObject(playerid, smeceobject1[playerid]);
				garbagemanVehicles[ GetPlayerVehicleID( playerid ) ][ gGarbages ] = 0;
				garbagemanVehicles[ GetPlayerVehicleID( playerid ) ][ gPlayerID ] = -1;
				isprazniovreca[playerid] =0;
				zasmeceobject1[playerid] = 0;
				SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
				TogglePlayerControllable( playerid, true);
				SendJobMessage( playerid, "Prekinuli ste vas posao te zbog zoga necete biti isplaceni!");
				
			} else return GRESKA( playerid, "Morate biti u djubretarskom vozilu." );
			return 1;
		}
		else if( strcmp( item, "cistac",true) == 0)
		{
			if( CistacPosao[ playerid ] == false ) return GRESKA( playerid, "Niste zapoceli posao cistaca.");
			if( IsPlayerInAnyVehicle( playerid ) )
			{
				if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );

				#if NERP_ZIMSKI_MOD  == 1
				if( TipVozila[ GetPlayerVehicleID( playerid ) ] == POSLOVNO_VOZILO && GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 455 && PosaoVozila[ GetPlayerVehicleID( playerid ) ] == POSAO_KOMUNALAC )
				{ }
				else return GRESKA( playerid, "Morate biti u vozilu cistaca snega." );
				#else
				if( GetVehicleModel( GetPlayerVehicleID( playerid ) ) == 574 )
				{ }
				else return GRESKA( playerid, "Morate biti u vozilu cistaca ulica." );
				#endif

				Dimi_DisablePlayerCheckpoint( playerid );
				CheckpointStatus[ playerid ] = 0;
				SendJobMessage( playerid, "Prekinuli ste vas posao te zbog zoga necete biti isplaceni!");
				SetVehicleToRespawn( cistacvozilo[ playerid ] );
				cistacvozilo[ playerid ] = -1;
				CistacPosao[ playerid ] = false;
				cistackilometri[ playerid ] = 0;
				cistacmetri[ playerid ] = 0;
				CistacWarning[ playerid ] = 0;
				cistacnovac[ playerid ] = 0;
				Dimi_KillTimer( CistacTimer[ playerid ] );
				CKilometriTDControl( playerid, false );
				DestroyDynamicObject(cistacvodica[0][playerid]);
				DestroyDynamicObject(cistacvodica[1][playerid]);
			} else return GRESKA( playerid, "Morate biti u vozilu." );
			return 1;
		}
		else
		{
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
			SendUsageMessage( playerid, "/prekiniposao [opcija]");
			SendClientMessagee( playerid, BELA, "[Opcije] djubretar, cistaculica");
			SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		}
		return 1;
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_FARMER )
	{
		if( farmerInfo[ playerid ][ fiCowNumber ] != 0 || farmerInfo[ playerid ][ fiFarmerPlantsPlanted ] != -1 || farmerInfo[ playerid ][ fiFruitNumber ] != 0 || farmerInfo[ playerid ][ fiFruitDeliveryNumber ] != 0 || KrenuoZetvu[ playerid ] )
		{
			for( new plantid = 0; plantid < MAX_FARMS; plantid++ )
			{
				if( plantInfo[ plantid ][ farmPlantCreated ] && plantInfo[ plantid ][ farmPlayerID ] == playerid )
				{
					if( IsValidDynamic3DTextLabel( plantInfo[ plantid ][ farm3D ] ) )
						DestroyDynamic3DTextLabel( plantInfo[ plantid ][ farm3D ] );

					if( IsValidDynamicObject( plantInfo[ plantid ][ farmObject ] ) )
						DestroyDynamicObject( plantInfo[ plantid ][ farmObject ] );

					ResetFarmPlant( plantid );
				}
			}

			Dimi_DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;
			farmerInfo[ playerid ][ fiFarmerSeeds ] = 0;
			farmerInfo[ playerid ][ fiFarmerPlantsPlanted ] = -1;
			farmerInfo[ playerid ][ fiFarmerWheatCreated ] = -1;
			farmerInfo[ playerid ][ fiFarmerPickupedBales ] = 0;
			farmerInfo[ playerid ][ fiFarmerPickupedBale ] = false;
			if( IsPlayerAttachedObjectSlotUsed( playerid, 0 ) || IsPlayerAttachedObjectSlotUsed( playerid, 1 ) || IsPlayerAttachedObjectSlotUsed( playerid, 2 ))
			{
				RemovePlayerAttachedObject( playerid, 0 );
				RemovePlayerAttachedObject( playerid, 1 );
				RemovePlayerAttachedObject( playerid, 2 );
			}
			ClearAnimations( playerid );

			if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) )
				RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );

			if( IsValidPlayerObject( playerid, farmerInfo[ playerid ][ fiBucketObject ] ) )
				DestroyPlayerObject( playerid, farmerInfo[ playerid ][ fiBucketObject ] );
				
			for( new i = 0; i < 72; i++)
			{
				DestroyDynamicObject( ZitoObjects[ playerid ][ i ] );
				RemovePlayerMapIcon(playerid, i);
			}
			
			PokosenoZito[ playerid ] = 0;
			KrenuoZetvu[ playerid ] = false;
			Dimi_KillTimer( ZitoTimer[ playerid ] );
			
			farmerInfo[ playerid ][ fiCowNumber ] = 0;
			farmerInfo[ playerid ][ fiFruitNumber ] = 0;
			farmerInfo[ playerid ][ fiFruitDeliveryNumber ] = 0;
			farmerInfo[ playerid ][ fiHaveBucket ] = false;
			farmerInfo[ playerid ][ fiHaveGajbica ] = false;
			farmerInfo[ playerid ][ fiHaveFruits ] = false;
			
			
			

			if( IsPlayerInAnyVehicle( playerid ) && GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
			{
				SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
			}


			if( farmerInfo[ playerid ][ fiVehicleBucket ] != -1 )
			{
				new farmvehicle = farmerInfo[ playerid ][ fiVehicleBucket ];
				farmerVehicles[ farmvehicle ][ fvMilk ] = false;
				farmerVehicles[ farmvehicle ][ fvMilkpID ] = -1;
			}

			

			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		} else return GRESKA( playerid, "Morate krenuti sa poslom da bi ste ga prekinuli." );
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PILOT )
	{
		if( LetSF[ playerid ] != 0 || LetLV[ playerid ] != 0 )
		{
			LetSF[ playerid ] = 0; LetLV[ playerid ] = 0;
			DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;
			if( IsPlayerInAnyVehicle( playerid ) && GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
			 {
				SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
			}
			
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		}
		else return GRESKA( playerid, "Niste zapoceli sa poslom." );
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_BUSVOZAC )
	{
		if( VoziBeogradStanicu[playerid] != 0 )
		{
			VoziBeogradStanicu[playerid] = 0;
			DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;
			SetVehicleToRespawn( IDBusaKojiVozi[ playerid ] );
			IDIgracaKojiVoziBus[ IDBusaKojiVozi[ playerid ] ] = -1;
			IDBusaKojiVozi[ playerid ] = -1;

			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		}
		else return GRESKA( playerid, "Niste zapoceli sa poslom." );
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_GRADJEVINAR )
	{
		new vehicleid = GetPlayerVehicleID( playerid );
		if( PosaoVozila[ vehicleid ] == POSAO_GRADJEVINAR && IsPlayerInAnyVehicle( playerid ) && ( GetVehicleModel( vehicleid ) == 524 || GetVehicleModel( vehicleid ) == 486 ) )
		{
			if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );

			CheckpointStatus[ playerid ] = 0;
			Dimi_DisablePlayerCheckpoint( playerid );
			PlayerCement[ playerid ] = -1;
			VehCement[ vehicleid ] = false;
			sravnohrpica[ playerid ] = 0;
			SetVehicleToRespawn( vehicleid );
			StaroVreme[ playerid ] = 0;
			NovoVreme[ playerid ] = 0;
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
			Dimi_KillTimer(ravnjanjetimer[playerid]);
			for(new t = 0; t < GRADJEVINARHRPICE; t++)//ovdje povecat broj kad doradimo objekte
			{
				DestroyDynamicObject(pijesakhrpa[playerid][t]);
			}
			
		}
		else return GRESKA( playerid, "Morate biti u poslovnom vozilu." );
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PREVOZNIK )
	{
		new vehicleid = GetPlayerVehicleID( playerid );
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u poslovnom vozilu." );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu prevoznika!" );
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
		if( GetVehicleModel( vehicleid ) == 515 )
		{
			Dimi_DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;
			SetVehicleToRespawn( vehicleid );
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );

			if( IsTrailerAttachedToVehicle( GetPlayerVehicleID( playerid ) ) )
				SetVehicleToRespawn( GetVehicleTrailer( vehicleid ) );
		}
		else
		{
			Dimi_DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;
			SetVehicleToRespawn( vehicleid );
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		}
	} 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PREVOZNOVCA )
	{
		new vehicleid = GetPlayerVehicleID( playerid );
		if( PosaoVozila[ vehicleid ] == POSAO_PREVOZNOVCA && IsPlayerInAnyVehicle( playerid ) && GetVehicleModel( vehicleid ) == 428 )
		{
			if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
			CheckpointStatus[ playerid ] = 0;
			Dimi_DisablePlayerCheckpoint( playerid );
			PlayerPrevozNovca[ playerid ] = -1;
			VehNovac[ vehicleid ] = false;
			SetVehicleToRespawn( vehicleid );
			StaroVreme[ playerid ] = 0;
			NovoVreme[ playerid ] = 0;
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		}
		else return GRESKA( playerid, "Morate biti u poslovnom vozilu." );
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_MASINOVODJA )
	{
		if( VozPosao[ playerid ] != 0 )
		{
			VozPosao[ playerid ] = 0;
			Dimi_KillTimer( PosaoMasinovodja[ playerid ] );
			DisablePlayerCheckpoint( playerid );
			CheckpointStatus[ playerid ] = 0;

			if( IsPlayerInAnyVehicle( playerid ) && GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
			{
				SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
			}
			SendJobMessage( playerid, "Uspjesno ste prekinuli sa poslom, sada mozete ostaviti uniformu ili opet raditi." );
		}
		else return GRESKA( playerid, "Niste zapoceli sa poslom." );
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:pecaj( playerid, params[] )
{
	new id = fishermanInfo[ playerid ][ Fisherman ];
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozete pecati dok vozite!" );
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_RIBAR ) return GRESKA( playerid, "Niste zaposljeni kao ribar!" );
	if( fishermanInfo[ playerid ][ StartedFishing ] == false ) return GRESKA( playerid, "Niste zapoceli pecanje." );
	if( !IsPlayerInRangeOfPoint( playerid, 25.0, RibarPosition[ id ][ 0 ], RibarPosition[ id ][ 1 ], RibarPosition[ id ][ 2 ] ) ) return GRESKA( playerid, "Niste na mjestu za pecanje" );
	if( fishermanInfo[ playerid ][ Fishing ] == true ) return GRESKA( playerid, "Vec pecate ribu!" );
	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu za pecanje!" );
	if( fishermanInfo[ playerid ][ FishKG ] == 50 ) return GRESKA( playerid, "Vec ste upecali 50kg ribe, morate prvo to ostaviti.!");
	fishermanInfo[ playerid ][ Fishing ] = true;
	fishermanInfo[ playerid ][ TriesFish ] = 0;
	fishermanInfo[ playerid ][ fObject ] = CreatePlayerObject( playerid, 2803, 0, 0, -1000, 0, 0, 0, 100 );
	AttachPlayerObjectToVehicle( playerid, fishermanInfo[ playerid ][ fObject ], fishermanInfo[ playerid ][ fLastVeh ], -0.019999, -0.504999, 0.540000, 0.000000, 0.000000, 0.000000 );
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, 18632, 6, 0.079376, 0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	ApplyAnimation( playerid, "SWORD", "sword_IDLE",50.0,0,1,1,1,1);
	fishermanInfo[ playerid ][ fsTimer ] = SetTimerEx("PecaRibu", 15000, false, "i", playerid);
	SendJobMessage( playerid, "Poceli ste pecati, budite strpljivi kako bi nesto upecali! Ako zelite prestati pecati, upisite "col_job"/zavrsipecanje!" );
	SendJobMessage( playerid, "Kada upecate ribu koristite "col_job"'N'"col_white" da je izvucete." );
	format( globalstring, sizeof( globalstring ), "~w~Riba: ~r~%d/50kg", fishermanInfo[ playerid ][ FishKG ] );
	PlayerTextDrawSetString( playerid, FishermangTD[1][ playerid ], globalstring );
	//ChangeFisherManCoordinates( playerid, 0.0000 );
	//ShowFishingTD( playerid, true );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zavrsipecanje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_RIBAR ) return GRESKA( playerid, "Niste ribar!" );
	if( !fishermanInfo[ playerid ][ StartedFishing ] ) return GRESKA( playerid, "Ne pecate ribu! Morate kucati /pecaj pa onda /zavrsipecanje." );
	//if( !fishermanInfo[ playerid ][ Fishing ] ) return GRESKA( playerid, "Ne pecate ribu! Morate kucati /pecaj pa onda /zavrsipecanje." );
	Dimi_DisablePlayerCheckpoint( playerid );
	RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
	fishermanInfo[ playerid ][ Fishing ] = false;
	fishermanInfo[ playerid ][ TriesFish ] = 0;
	if( fishermanInfo[ playerid ][ FishKG ] > 0)
	{
		ClearChat( playerid, 25 );
		SendJobMessage(playerid, "Idite isporucite ribu na lokaciju oznacenu na mapi.");
		CheckpointStatus[ playerid ] = 38;
		Dimi_SetPlayerCheckpoint( playerid, 2117.7710, 126.1180, -0.4941, 3.0 );
		//ShowFishingTD( playerid, true );
		Dimi_KillTimer( fishermanInfo[ playerid ][ fsTimer ] );
	}
	else
	{
		DestroyPlayerObject( playerid, fishermanInfo[ playerid ][ fObject ] );
		//ShowFishingTD( playerid, false );
		ClearChat( playerid, 25);
		SendJobMessage( playerid, "Zavrsili ste sa pecanjem!" );
		CheckpointStatus[ playerid ] = 0;
		Dimi_KillTimer( fishermanInfo[ playerid ][ fsTimer ] );
		SetVehicleToRespawn( GetPlayerVehicleID( playerid ) );
		Dimi_SetPlayerPos( playerid, 2114.9539, 135.0508, 2.3156 );
	}
	return 1;
}


CMD:kopajzlato( playerid, params[], help )
{

	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_RUDAR ) return GRESKA( playerid, "Niste rudar!" );

	if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Niste uzeli opremu!" );
	//if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
	if( PosaoRudar[ playerid ] != 0 ) return GRESKA( playerid, "Vec ste zapoceli kopanje!" );
	Dimi_SetPlayerCheckpoint( playerid, RandomRudnik[ 0 ][ 0 ], RandomRudnik[ 0 ][ 1 ], RandomRudnik[ 0 ][ 2 ], 2.5 );
	CheckpointStatus[ playerid ] = 32;
	SendJobMessage( playerid, "Mjesto kopanja rude je oznaceno na mapi!" );
	PosaoRudar[ playerid ] = 1;
	rudarPosao[ playerid ][ rudarIskopano ] = 0;
	AccountVerified[ playerid ] = false;

	return 1;
}

/////////////////////////////////////////////////////////////////////////////////
CMD:uzmikutiju( playerid, params[], help )
{
	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}*/
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1337 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}
	if( PlayerInfo[ playerid ][ xPosao ] != POSAO_TEMPODOSTAVA) return GRESKA( playerid, "Niste zaposleni kao Tempo Dostavljac!");
	if( !IsPlayerInRangeOfPoint( playerid, 4.5, -494.7044,-501.1635,26.0205 ) ) return GRESKA( playerid, "Niste kod fabrike!");
	if( DeliverLevel[ playerid ] == 0 ) return GRESKA( playerid, "Nemate pokrenut posao, prvo udjite u jedan od slobodnih kombija!");
	if( DeliverLevel[ playerid ] != 1 ) return GRESKA( playerid, "Ne mozete to!");
	if( StateBox[ DeliverCar[ playerid ] ] == AKTIV_TEMPOKUTIJE) return GRESKA( playerid, "U vasem kombiju ima maksimalno kutija!");
	if( CarriesBox[ playerid ] == 1 ) return GRESKA( playerid, "Vec drzite paket robe u rukama, prvo je ostavite u kombi!");
	new randomkutija = random(2);
	SendInfoMessage( playerid, "Paket robe u kombi ubacujete tipkom ' Y '!");
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_CARRY);
	
	if(randomkutija == 0)//paket soka
	{
		SetPlayerAttachedObject(playerid, OBJECT_SLOT_BADGE, 19572, 5, -0.1309, 0.1169, 0.2379, 0.0000, 108.8999, 11.8000, 1.0000, 1.0000, 1.0000, 0, 0);
		SendInfoMessage( playerid, "Uzeli ste paket pica sada ga ubacite u vas kombi!");
	}
	else if(randomkutija == 1)//paket hrane
	{
		SetPlayerAttachedObject(playerid, OBJECT_SLOT_BADGE, 1220, 5, 0.042000, 0.115999, 0.184000, 8.499999, 14.900006, 10.999997, 0.551000, 0.406000, 0.593999, 0, 0);
		SendInfoMessage( playerid, "Uzeli ste paket hrane sada ga ubacite u vas kombi!");
	}
	CarriesBox [ playerid ] = 1;

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:posao( playerid, params[], help )
{

	/*if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "MUP/SAJ ne moze raditi poslove!");
		return 1;
	}
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 6 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else
		{
			GRESKA( playerid, "Staff team moze raditi samo od 08h do 05h!" );
			return 1;
		}
	}*/

	/*else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PREVOZNOVCA )
	{
		if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
		new vehicleid = GetPlayerVehicleID( playerid );
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu za prevoz novca.");
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
		if( GetVehicleModel( vehicleid ) != 428 ) return GRESKA( playerid, "Morate biti u vozilu za prevoz novca.");
		if( VehNovac[ GetPlayerVehicleID( playerid ) ] == true ) return GRESKA( playerid, "Ovo vozilo vec ima utovaren novac." );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu prevoznika novca!" );
		if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
		if( !IsPlayerInRangeOfPoint( playerid, 100.0, 1504.6968, -1025.6024, 23.7875 ) ) return GRESKA( playerid, "Morate biti kod banke." );
		AccountVerified[ playerid ] = false;
		Dimi_SetPlayerCheckpoint( playerid, -1500.0902, 912.7291, 7.1875, 5.0);
		CheckpointStatus[ playerid ] = 35;
		SendJobMessage( playerid, "Zapoceli ste razvoz novca odite prvo do "col_job"Sarajeva"col_white" da utovarite novac." );
		StaroVreme[ playerid ] = gettime();
		NovoVreme[ playerid ] = 200;

		return 1;
	}*/
	/*else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_MASINOVODJA )
	{
		if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
		new vehicleid = GetPlayerVehicleID( playerid );
		if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozu.");
		if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
		if( GetVehicleModel( vehicleid ) != 538 ) return GRESKA( playerid, "Morate biti u vozu.");
		if( VozPosao[ playerid ] != 0 ) return GRESKA( playerid, "Vec si poceo sa poslom." );
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate uniformu masinovodje!" );
		if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
		AccountVerified[ playerid ] = false;
		VozPosao[ playerid ] = 1;
		Dimi_SetPlayerCheckpoint( playerid, 810.2866,-1362.9888,-1.6551, 5.0 );
		CheckpointStatus[ playerid ] = 37;
		SendJobMessage( playerid, "Zapoceli ste prevoz putnika." );
		SendJobMessage( playerid, "Kad ste kod crvenog markera vozite voz ispod 20 km/h.");
		StaroVreme[ playerid ] = gettime();
		NovoVreme[ playerid ] = 10;

		return 1;
	}*/
	/*else if( PlayerInfo[ playerid ][ xPosao ] == POSAO_PNAMESTAJA )
	{
		if( CheckpointStatus[ playerid ] != 0 ) return GRESKA( playerid, "Vec imas aktiviran marker tako da ne mozes ovo koristiti." );
		if( NamestajLevel[ playerid ] > 0 ) return GRESKA( playerid, "Vec imate zapocet posao!");
		if( UzeoOpremu[ playerid ] == false ) return GRESKA( playerid, "Nemate opremu!" );
		if( AccountVerified[ playerid ] == false ) return GRESKA( playerid, "Prvo morate verifikovati svoj nalog(/verifikacija).");
		if( ServerInfo[ Drva ] == 0 ) return GRESKA( playerid, "Nema vise drva u resursima za proizvodnju namestaja." );
		SendJobMessage(playerid, "Zapoceli ste posao, otidjite do skladiste i uzmite drva komandom "col_job"/uzmidrvo!");
		Dimi_SetPlayerCheckpoint( playerid, 2159.8730,-2296.4348,13.4891, 4.0 );
		CheckpointStatus[ playerid ] = 40;
		NamestajLevel[ playerid ] = 1;
		AccountVerified[ playerid ] = false;
	
	}*/
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:razbijlisice( playerid, params[] )
{
	new id, Float:Pos[ 3 ], policajci = 0;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/razbijlisice [ ID/Ime ]");
		return 1;
	}
	
	if( !NosiObjekt[ playerid ][ 0 ] ) return GRESKA( playerid, "Nemas srafciger u ruci." );
	if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebi." );
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID korisnika." );
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca ciji se ID uneli.");
	if( PlayerCuffed[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes dok si tazovan ili cuffovan." );

	GetPlayerPos( playerid, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] );
	
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( playerid != i && IsPlayerInRangeOfPoint( i, 10, Pos[ 0 ], Pos[ 1 ], Pos[ 2 ] ) && GetFactionType( i ) == ORG_TIP_PD )
		{
			policajci++;
		}
	}

	if( policajci != 0 ) return GRESKA( playerid, "Ne mozes ovo dok ima policajaca u blizini." );
	PlayerCuffed[ id ] = 0;
	announcement( id, "~g~Razbijene su vam lisice", 2500, 3 );
	TogglePlayerControllable( id, 1 );
	ClearAnimations( id );
	if( IsPlayerAttachedObjectSlotUsed( id, OBJECT_SLOT_RHAND ) ) RemovePlayerAttachedObject( id, OBJECT_SLOT_RHAND );
	SetPlayerSpecialAction( id, SPECIAL_ACTION_NONE );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:kupialatku( playerid, params[] )
{

	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2608.6675,-1511.3711,15.2827 ) ) return GRESKA( playerid, "Niste kod standa na crnom trzisu!");
	new izbor,id = -1;
	if( sscanf( params, "d", izbor ) )
	{
		SendUsageMessage( playerid, "/kupialatku [ broj predmeta ]");
		SendClientMessagee( playerid, BELA, "1. Srafciger(20$) 2. Pajser(50$) 3. Cekic(20$)");
		return 1;
	}
	
	if( izbor == 1 )
	{
		if( Inventory_HasItem(playerid, "Srafciger" ) )
		{
			GRESKA( playerid, "Vec imate srafciger." );
			return 1;
		}
		if( PlayerInfo[ playerid ][ xNovac ] < 20 ) return GRESKA( playerid, "Nemate dovoljno novca(20$)." );
		id = Inventory_Add( playerid, "Srafciger", 18644 );

		if( id != -1 )
		{
			DajIgracuNovac( playerid, -20 );
			SendClientMessagee( playerid, ZUTA, "Kupili ste srafciger i dodan vam je u inventory." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );

	}
	//--------------------------------------------------------------------------------
	else if( izbor == 2 )
	{
		if( Inventory_HasItem(playerid, "Pajser" ) )
		{
			GRESKA( playerid, "Vec imate pajser." );
			return 1;
		}
		if( PlayerInfo[ playerid ][ xNovac ] < 50 ) return GRESKA( playerid, "Nemate dovoljno novca(50$)." );
		id = Inventory_Add( playerid, "Pajser", 18634 );
		if( id != -1 )
		{
			DajIgracuNovac( playerid, -50 );
			SendClientMessagee( playerid, ZUTA, "Kupili ste pajser i dodan vam je u inventory." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	//--------------------------------------------------------------------------------
	else if( izbor == 3 )
	{
		if( Inventory_HasItem(playerid, "Cekic" ) )
		{
			GRESKA( playerid, "Vec imate cekic." );
			return 1;
		}
		if( PlayerInfo[ playerid ][ xNovac ] < 20 ) return GRESKA( playerid, "Nemate dovoljno novca(20$)." );

		id = Inventory_Add( playerid, "Cekic", 18635 );

		if( id != -1 )
		{
			DajIgracuNovac( playerid, -20 );
			SendClientMessagee( playerid, ZUTA, "Kupili ste cekic i dodan vam je u inventory." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else return GRESKA( playerid, "Pogresan broj predmeta." );
	
	return 1;
}

/////////////////////////////////////////////////////////////////////////////////
CMD:ostavialatku( playerid, params[] )
{
	new izbor, id = -1;
	if( sscanf( params, "s[32] ", izbor))
	{

		SendUsageMessage( playerid, "/ostavialatku [opcija]");
		SendClientMessagee( playerid, BELA, "1. Srafciger 2. Pajser 3. Cekic");
		return 1;
	}
	if( izbor == 1 )
	{
		if( NosiObjekt[ playerid ][ 0 ] == false ) return GRESKA( playerid, "Nemate srafciger u rukama." );
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) ) return GRESKA( playerid, "Nemas nijedan objekt u levoj ruci!");
		id = Inventory_Add( playerid, "Srafciger", 18644 );
		if( id != -1 )
		{
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
			NosiObjekt[ playerid ][ 0 ] = false;
			SendClientMessagee( playerid, ZUTA, "Ostavio si srafciger u inventory." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );

	}
	else if( izbor == 2 )
	{
		if( NosiObjekt[ playerid ][ 1 ] == false ) return GRESKA( playerid, "Nemate pajser u rukama." );
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) ) return GRESKA( playerid, "Nemas nijedan objekt u levoj ruci!");
		id = Inventory_Add( playerid, "Pajser", 18634 );
		if( id != -1 )
		{
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
			NosiObjekt[ playerid ][ 1 ] = false;
			SendClientMessagee( playerid, ZUTA, "Ostavio si pajser u inventory.." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else if( izbor == 3 )
	{
		if( NosiObjekt[ playerid ][ 2 ] == false ) return GRESKA( playerid, "Nemate cekic u rukama." );
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_LHAND ) ) return GRESKA( playerid, "Nemas nijedan objekt u levoj ruci!");
		id = Inventory_Add( playerid, "Cekic", 18635 );
		if( id != -1 )
		{
			RemovePlayerAttachedObject( playerid, OBJECT_SLOT_LHAND );
			NosiObjekt[ playerid ][ 2 ] = false;
			SendClientMessagee( playerid, ZUTA, "Ostavio si cekic u inventory.." );
		}
		else return GRESKA( playerid, "Pun vam je inventory nemate mesta gde da stavite stvari." );
	}
	else return GRESKA( playerid, "Pogresan broj predmeta." );


	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:udjinadm( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Ne mozes ako nisi level 3+." );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1382.1486, -1088.6586, 28.2120 ) ) return GRESKA( playerid, "Morate biti kod ulaza zgrade za DM(Pitajte Admin/GM gdje je)." );
	if( PlayerInfo[ playerid ][ xWanted ] > 0 ) return GRESKA( playerid, "Ne mozes na DM sa WLom." );
	if( PoliceDuty[ playerid ] ) return GRESKA( playerid, "Ne mozes sa PD duty u DM zonu." );
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1339 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, second;
		gettimeEx( hour, minute, second );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else return GRESKA( playerid, "Admin/GM moze na DM Zonu samo od 08h do 05h." );
	}
	if(PlayerInfo[playerid][xPUBG] == 1) return greska(playerid,"Ti si na PUBG eventu - moras odigrati match!");
	if(NaZombieEventu[ playerid ]) return greska(playerid, "Vec si na Zombie Eventu.");
	NaDmEventu[ playerid ] = true;
	new rand = random( sizeof( RandomDMPos ) );
	Dimi_SetPlayerPos( playerid, RandomDMPos[ rand ][ 0 ], RandomDMPos[ rand ][ 1 ],RandomDMPos[ rand ][ 2 ] );
	SetPlayerFacingAngle( playerid, 360.000 );
	SetCameraBehindPlayer( playerid );
	SetPlayerInterior( playerid, 0 );
	SetPlayerVirtualWorld( playerid, 10 );
	Dimi_SetPlayerHealth( playerid, 100 );
	Dimi_SetPlayerArmour( playerid, 100 );
	
	if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 4500 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 10." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 26, 150 );
		GiveWeaponToPlayer( playerid, 28, 400 );
		GiveWeaponToPlayer( playerid, 31, 400 );
		SetPlayerSkillLevel( playerid, WEAPONSKILL_MICRO_UZI, 999 );
		SetPlayerSkillLevel( playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 4000 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 9." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 27, 150 );
		GiveWeaponToPlayer( playerid, 32, 800 );
		GiveWeaponToPlayer( playerid, 31, 400 );
		SetPlayerSkillLevel( playerid, WEAPONSKILL_MICRO_UZI, 999 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 3500 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 8." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 27, 150 );
		GiveWeaponToPlayer( playerid, 28, 800 );
		GiveWeaponToPlayer( playerid, 31, 400 );
		SetPlayerSkillLevel( playerid, WEAPONSKILL_MICRO_UZI, 999 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 3000 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 7." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 27, 150 );
		GiveWeaponToPlayer( playerid, 29, 400 );
		GiveWeaponToPlayer( playerid, 31, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 2500 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 6." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 26, 150 );
		GiveWeaponToPlayer( playerid, 29, 400 );
		GiveWeaponToPlayer( playerid, 31, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 2000 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 5." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 26, 150 );
		GiveWeaponToPlayer( playerid, 29, 400 );
		GiveWeaponToPlayer( playerid, 30, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 1500 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 4." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 25, 100 );
		GiveWeaponToPlayer( playerid, 29, 400 );
		GiveWeaponToPlayer( playerid, 31, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 1000 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 3." );
		GiveWeaponToPlayer( playerid, 24, 150 );
		GiveWeaponToPlayer( playerid, 25, 100 );
		GiveWeaponToPlayer( playerid, 29, 400 );
		GiveWeaponToPlayer( playerid, 30, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 500 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 2." );
		GiveWeaponToPlayer( playerid, 24, 200 );
		GiveWeaponToPlayer( playerid, 25, 100 );
		GiveWeaponToPlayer( playerid, 29, 400 );
	}
	else if( PlayerInfo[ playerid ][ xDMEventUbistva ] >= 0 )
	{
		SendInfoMessage( playerid, "Usao si na DM sa rankom 1." );
		GiveWeaponToPlayer( playerid, 24, 200 );
		GiveWeaponToPlayer( playerid, 25, 100 );
	}
	SendInfoMessage( playerid, "Da izadjes iz DM zone kucaj /izadjizidm." );
	showdmtd(playerid);
	return 1;
}
////////////////////////////////ZOMBIE MODE//////////////////////////////////////////

#include "NERP_EVENTS/NERP_ZOMBIE.inc"

/////////////////////////////////////////////////////////////////////////////////
CMD:izadjisadm(playerid,params[])
{
	return cmd_izadjiizdm(playerid,params);
}
CMD:izadjiizdm( playerid, params[] )
{
	hidedmtd(playerid);
	SendInfoMessage(playerid,"Uspjesno ste ugasili DM ZONA tdove.");
	if( NaDmEventu[ playerid ] == false ) return GRESKA( playerid, "Nisi u DM zoni." );
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes dok si u zatvoru." );
	new Float:H; GetPlayerHealth( playerid, H );
	if( H < 10.0 ) return GRESKA( playerid, "Ne mozes da izadjes iz DM zone kada imas manje od 10hp." );
	if( PlayerInfo[ playerid ][ xSpawned ] == 0 ) return GRESKA( playerid, "Ne mozes izaci iz DM zone dok ne budes spawnovan." );
	Dimi_SetPlayerPos( playerid, 1382.1486, -1088.6586, 28.2120 );
	SetPlayerFacingAngle( playerid, 360.000 );
	SetCameraBehindPlayer( playerid );
	SetPlayerInterior( playerid, 0 );
	SetPlayerVirtualWorld( playerid, 0 );
	ResetAllWeapons( playerid );
	Dimi_SetPlayerHealth( playerid, 70 );
	Dimi_SetPlayerArmour( playerid, 0 );
	NaDmEventu[ playerid ] = false;
	SendInfoMessage( playerid, "Izasao si iz DM zone." );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:izadjisatrke( playerid, params[] )
{
	if( !NaUtrci[ playerid ] ) return GRESKA( playerid, "Niti na trci." );
	new izazivac = PonudioIgrac[ playerid ];
	DisablePlayerRaceCheckpoint( playerid );
	NaUtrci[ playerid ] = false; Krugovi[ playerid ] = 0; TrkaIzazov[ playerid ] = 0; StaroVreme[ playerid ] = 0;
	Dimi_DestroyVehicle( TrkaVozilo[ playerid ] ); TrkaVozilo[ playerid ] = -1;
	Dimi_SetPlayerPos( playerid, PlayerPos[ playerid ][ 0 ], PlayerPos[ playerid ][ 1 ],  PlayerPos[ playerid ][ 2 ] );
	SetPlayerVirtualWorld( playerid, PlayerPosVW[ playerid ] );
	SetPlayerInterior( playerid, PlayerPosInt[ playerid ] ); TrkaCheckpoint[ playerid ] = 0;
	SendInfoMessage( playerid, "Izasli ste sa trke i izgubili %d$.", UlogTrke[ playerid ] );
	if( izazivac != IPI )
	{
		DisablePlayerRaceCheckpoint( izazivac );
		SendInfoMessage( izazivac, "Igrac je napustio trku i osvojili ste %d$.", ( UlogTrke[ playerid ]*2 ) );
		DajIgracuNovac( izazivac, ( UlogTrke[ playerid ]*2 ) );
		NaUtrci[ izazivac ] = false; Krugovi[ izazivac ] = 0; TrkaIzazov[ izazivac ] = 0; StaroVreme[ izazivac ] = 0;
		Dimi_DestroyVehicle( TrkaVozilo[ izazivac ] ); TrkaVozilo[ izazivac ] = -1;
		Dimi_SetPlayerPos( izazivac, PlayerPos[ izazivac ][ 0 ], PlayerPos[ izazivac ][ 1 ],  PlayerPos[ izazivac ][ 2 ] );
		SetPlayerVirtualWorld( izazivac, PlayerPosVW[ izazivac ] );
		SetPlayerInterior( izazivac, PlayerPosInt[ izazivac ] ); TrkaCheckpoint[ izazivac ] = 0;
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:izazovinatrku( playerid, params[] )
{
	new id, broj, model, ulog;
	if( sscanf( params, "uii", id, broj, ulog ) )
	{
		SendUsageMessage( playerid, "/izazovinatrku [ ID/Ime ] [ broj ] [ Ulog ]");
		SendClientMessagee( playerid, BELA, "[Broj] 1. Sultan 2. Infernus 3. Bullet 4. Elegy 5. Turismo");
		SendClientMessagee( playerid, BELA, "[Broj] 6. Quad 7. Sabre 8. Hotring Racer 9. NRG-500 10. Tractor");
		SendClientMessagee( playerid, BELA, "[Ulog] Ukoliko je ulog 0, igracete bez uloga." );
		return 1;
	}
	if( PljackaUToku || ZlataraUToku ) return GRESKA( playerid, "Ne mozete ovo dok je pljacka u toku." );
	if( ( PlayerInfo[ playerid ][ xAdmin ] > 0 && PlayerInfo[ playerid ][ xAdmin ] < 1339 ) || PlayerInfo[ playerid ][ xHelper ] > 0 )
	{
		new hour, minute, second;
		gettimeEx( hour, minute, second );
		FixHour( hour );
		hour = shifthour;
		if( ( hour >= 08 ) && ( hour <= 05 ) ) { }
		else return GRESKA( playerid, "Admin/GM moze na trku samo od 08h do 05h." );
	}
	
	if( id == IPI ) return GRESKA( playerid, "Pogresan id igraca." );
	if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebe da izazoves." );
	if( NaUtrci[ playerid ] ) return GRESKA( playerid, "Vec si na trci." );
	if( NaUtrci[ id ] ) return GRESKA( playerid, "Igrac je vec na trci." );
	if( PljackaNovac[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes da ides na trku dok si u toku pljacke." );
	if( PljackaNovac[ id ] > 0 ) return GRESKA( playerid, "Ne mozes da invite igraca koji je u toku pljacke." );
	if( PljackaZlato[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozes da ides na trku dok si u toku pljacke." );
	if( PljackaZlato[ id ] > 0 ) return GRESKA( playerid, "Ne mozes da invite igraca koji je u toku pljacke." );
	if( broj < 1 || broj > 10 ) return GRESKA( playerid, "Broj moze ici od 1 do 10." );
	if( ulog < 0 ) return GRESKA( playerid, "Ulog ne moze biti manji od 0." );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Ne mozes ako nisi level 3+." );
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes na izazov dok si cuffovan." );
	if( IgracZavezan[ playerid ] == true ) return GRESKA( playerid, "Ne mozes na izazov dok si vezan." );
	if( IsPlayerInAnyVehicle( playerid )  ) return GRESKA( playerid, "Morate biti na nogamo da bi otisli na izazov." );
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Morate biti na nogamo da bi otisli na izazov." );
	if( GetPlayerInterior( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u interijeru." );
	if( GetPlayerVirtualWorld( playerid ) != 0 ) return GRESKA( playerid, "Ne mozete koristiti u interijeru/vwu." );
	if( PlayerInfo[ playerid ][ xWanted ] >= 1 ) return GRESKA( playerid, "Ne mozete na izazov dok imate wanted.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete na izazov dok ste u zatvoru / ALKATRAZ.");
	if( PlayerInfo[ playerid ][ xNovac ] < ulog ) return GRESKA( playerid, "Nemate dovoljno novca za ulog." );
	if( PlayerInfo[ id ][ xWanted ] >= 1 ) return GRESKA( playerid, "Taj igrac ima WL." );

	if( ServerInfo[ BrojKreiranihVozila ] > MaxBrojKreiranih ) return SendClientMessagee( playerid, SVETLOCRVENA, "{FF0000}| AC |:"col_white" Nemoguce je trenutno otici na izazov, limit vozila na serveru je dosegnut.");
	
	switch( broj )
	{
		case 1: model = 560;
		case 2: model = 411;
		case 3: model = 541;
		case 4: model = 562;
		case 5: model = 451;
		case 6: model = 471;
		case 7: model = 475;
		case 8: model = 502;
		case 9: model = 522;
		case 10: model = 531;
	}
	PonudioIgrac[ id ] = playerid;
	PonudioIgrac[ playerid ] = id;
	UlogTrke[ id ] = ulog;
	UlogTrke[ playerid ] = ulog;
	ModelTrke[ id ] = model;

	new string[ 512 ];
	format( string, sizeof( string ), "Igrac %s vas je izazvao na trku sa %s.\nUlog trke je %d$\nDa prihvatis pretisni na 'Prihvati'.\nDa odustanes pritisni na 'Odustani'", ImeIgraca( playerid ), GetVehicleNameEx( model ), ulog );
	ShowPlayerDialog( id, dialog_IZAZOVITRKA, DSMSG, D_NASLOV, string, D_ODABERI, D_ODUSTANI );
	
	SendInfoMessage( playerid, "Izazvali ste na trku %s.", ImeIgraca( id ) );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
forward HangarPonovo( );
public HangarPonovo( )
{
	ServerInfo[ HangarPaket ] = true;
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:hangar( playerid, params[] )
{
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes iz vozila!" );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Za ovo vam treba lvl 3+" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA || GetFactionType( playerid ) == ORG_TIP_SR || GetFactionType( playerid ) == ORG_TIP_MC )
	{
		if( IsPlayerInRangeOfPoint( playerid, 3.0, 2799.9172,-2418.4441,13.6307 ) )
		{
			if( ServerInfo[ HangarPaket ] == false ) return GRESKA( playerid, "Nema novih posiljki sacekajte da stignu!" );
			if( PlayerInfo[ playerid ][ xHangarTime ] != 0 ) return GRESKA( playerid, "Vec ste uzeli paket sacekajte %d minuta.", PlayerInfo[ playerid ][ xHangarTime ] );
			ShowPlayerDialog( playerid, dialog_UZIMAUHANGARU, DSL, "Paketi oruzja", "Colt x AK47\nDesert Eagle x M4\nShotgun x MP5\nSniper x Desert Eagle\nShotgun x Uzi", "Uzmi", "Odustani" );
		}
		else return GRESKA( playerid, "Niste kod paketa u hangaru!" );
	}
	else return GRESKA( playerid, "Niste clan mafije/bande!" );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zamenavozila( playerid, params[] )
{
	new id, moj, njegov;
	if( sscanf( params, "uii", id, moj, njegov ) )
	{
		SendUsageMessage( playerid, "/zamenavozila [ ID Igraca ] [ vas slot vozila ] [ igracev slot vozila ]" );
		return 1;
	}
	if( id == playerid ) return GRESKA( playerid, "Ne mozes zameniti sam sa sobom." );
	if( moj < 1 || moj > 4 || njegov < 1 || njegov > 4 ) return GRESKA( playerid, "Slotovi ne moze ispod 1 ili iznad 4." );
	new slot1 = moj-1, slot2 = njegov-1;
	if( PlayerInfo[ playerid ][ xVoziloID ][ slot1 ] == -1 ) return GRESKA( playerid, "Nemate vozilo u tom slotu." );
	if( PlayerInfo[ id ][ xVoziloID ][ slot2 ] == -1 ) return GRESKA( playerid, "Igrac nema vozilo u tom slotu." );
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca.");

	new coordsstring[ 256 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac "col_balkanstory"%s "col_white"vam je ponudio zamenu.\n", ImeIgraca( playerid ) );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"U zameni je ponudjeno vozilo marke "col_balkanstory"%s.\n", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ slot1 ] ][ vID ] ) ) );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac od vas trazi vozilo marke "col_balkanstory"%s.\n", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ slot2 ] ][ vID ] ) ) );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, ""col_white"Izaberite da li prihvatate ili odbijate zamenu." );
	
	ShowPlayerDialog( id, dialog_ZAMENA_2, DSMSG, D_NASLOV, DialogStrgEx, "Prihvati", "Odbij" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	GlobalID[ id ] = PlayerInfo[ playerid ][ xVoziloID ][ slot1 ];
	GlobalID_2[ id ] = PlayerInfo[ id ][ xVoziloID ][ slot2 ];
	GlobalProdaja[ id ] = playerid;
	SendInfoMessage( playerid, "Uspjesno ste ponudili zamenu vozila igracu "col_balkanstory"%s.", ImeIgraca( id ) );
	SendInfoMessage( playerid, "Vase vozilo: "col_balkanstory"%s "col_white"| Njegovo vozilo: "col_balkanstory"%s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ slot1 ] ][ vID ] ) ), GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ slot2 ] ][ vID ] ) ) );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zamenaimovina( playerid, params[] )
{
	new id, moj, njegov;
	if( sscanf( params, "uii", id, moj, njegov ) )
	{
		SendUsageMessage( playerid, "/zamenaimovina [ ID Igraca ] [ vas slot imovine ] [ igracev slot imovine ]" );
		return 1;
	}
	if( id == playerid ) return GRESKA( playerid, "Ne mozes zameniti sam sa sobom." );
	if( moj < 1 || moj > 3 || njegov < 1 || njegov > 3 ) return GRESKA( playerid, "Slotovi ne moze ispod 1 ili iznad 3." );
	new slot1 = moj-1, slot2 = njegov-1;
	if( PlayerInfo[ playerid ][ xProperty ][ slot1 ] == -1 ) return GRESKA( playerid, "Nemate imovinu u tom slotu." );
	if( PlayerInfo[ id ][ xProperty ][ slot2 ] == -1 ) return GRESKA( playerid, "Igrac nema imovine u tom slotu." );
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca.");

	new coordsstring[ 256 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac "col_balkanstory"%s "col_white"vam je ponudio zamenu.\n", ImeIgraca( playerid ) );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"U zameni je ponudjena "col_balkanstory"%s vrednosti %d$.\n", GetPropertyAName( PlayerInfo[ playerid ][ xProperty ][ slot1 ] ), II[ PlayerInfo[ playerid ][ xProperty ][ slot1 ] ][ iPrice ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac od vas trazi "col_balkanstory"%s vrednosti %d$.\n", GetPropertyName( PlayerInfo[ id ][ xProperty ][ slot2 ] ), II[ PlayerInfo[ id ][ xProperty ][ slot2 ] ][ iPrice ] );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, ""col_white"Izaberite da li prihvatate ili odbijate zamenu." );
	ShowPlayerDialog( id, dialog_ZAMENA_4, DSMSG, D_NASLOV, DialogStrgEx, "Prihvati", "Odbij" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	GlobalID[ id ] = PlayerInfo[ playerid ][ xProperty ][ slot1 ];
	GlobalID_2[ id ] = PlayerInfo[ id ][ xProperty ][ slot2 ];
	GlobalProdaja[ id ] = playerid;
	SendInfoMessage( playerid, "Uspjesno ste ponudili zamenu imovine igracu "col_balkanstory"%s.", ImeIgraca( id ) );
	//SendInfoMessage( playerid, "Vase vozilo: "col_balkanstory"%s "col_white"| Njegovo vozilo: "col_balkanstory"%s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ slot1 ] ][ vID ] ) ), GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ slot2 ] ][ vID ] ) ) );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zamenafirmi( playerid, params[] )
{
	new id, moj, njegov;
	if( sscanf( params, "uii", id, moj, njegov ) )
	{
		SendUsageMessage( playerid, "/zamenafirmi [ ID Igraca ]" );
		return 1;
	}
	if( id == playerid ) return GRESKA( playerid, "Ne mozes zameniti sam sa sobom." );
	if( PlayerInfo[ playerid ][ xFirmaID ] == -1 ) return GRESKA( playerid, "Nemate firmu." );
	if( PlayerInfo[ id ][ xFirmaID ] == -1 ) return GRESKA( playerid, "Igrac nema firmu." );
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Niste blizu igraca.");

	new coordsstring[ 256 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac "col_balkanstory"%s "col_white"vam je ponudio zamenu.\n", ImeIgraca( playerid ) );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"U zameni je ponudjena "col_balkanstory"firma - %s.\n", BussinesInfo[ PlayerInfo[ playerid ][ xFirmaID ] ][ bName ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac od vas trazi "col_balkanstory"firmu  - %s.\n", BussinesInfo[ PlayerInfo[ id ][ xFirmaID ] ][ bName ] );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, ""col_white"Izaberite da li prihvatate ili odbijate zamenu." );
	ShowPlayerDialog( id, dialog_ZAMENA_3, DSMSG, D_NASLOV, DialogStrgEx, "Prihvati", "Odbij" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	GlobalProdaja[ id ] = playerid;
	SendInfoMessage( playerid, "Uspjesno ste ponudili zamenu firmi igracu "col_balkanstory"%s.", ImeIgraca( id ) );
	SendInfoMessage( playerid, "Vasa firma: "col_balkanstory"%s "col_white"| Njegova firma: "col_balkanstory"%s", BussinesInfo[ PlayerInfo[ playerid ][ xFirmaID ] ][ bName ], BussinesInfo[ PlayerInfo[ id ][ xFirmaID ] ][ bName ] );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zamena( playerid, params[] )
{
	new id, moje, njegovo, ponuda[ 128 ], trazi[ 128 ];
	if( sscanf( params, "uii", id, moje, njegovo ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/zamena [ ID Igraca ] [ Izbor 1 - sta menjate ] [ Izbor 2 - za sta menjate ]" );
		SendUsageMessage( playerid, "Izbor: 1. Vozilo slot 1 | 2. Vozilo slot 2 | 3. Vozilo slot 3 | 4. Vozilo slot 4" );
		SendUsageMessage( playerid, "Izbor: 5. Imovina slot 1 | 6. Imovina slot 2 | 7. Imovina slot 3 | 8. Firma" );
		SendInfoMessage( playerid, "Ovom komandom menjate stvari gde su vam prazni slotovi." );
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	
	if( id == playerid ) return GRESKA( playerid, "Ne mozes zameniti sam sa sobom." );
	if( moje < 1 || moje > 8 || njegovo < 1 || njegovo > 8 ) return GRESKA( playerid, "Pogresan izbor broja( 1 - 8 )." );
	if( !IsPlayerNearPlayer( 3.0, playerid, id ) ) return GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!" );
	
	if( moje == 1 )
	{
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) return GRESKA( playerid, "Nemate vozilo u slotu 1." );
		format( ponuda, sizeof( ponuda ), "o "col_balkanstory"vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 0 ] ][ vID ] ) ) );

		if( PlayerInfo[ id ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ id ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		
		GlobalID[ id ] = PlayerInfo[ playerid ][ xVoziloID ][ 0 ];
	}
	else if( moje == 2 )
	{
		if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) return GRESKA( playerid, "Nemate vozilo u slotu 2." );
		format( ponuda, sizeof( ponuda ), "o "col_balkanstory"vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 1 ] ][ vID ] ) ) );

		if( PlayerInfo[ id ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ id ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );

		GlobalID[ id ] = PlayerInfo[ playerid ][ xVoziloID ][ 1 ];
	}
	else if( moje == 3 )
	{
		if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) return GRESKA( playerid, "Nemate vozilo u slotu 3." );
		format( ponuda, sizeof( ponuda ), "o "col_balkanstory"vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 2 ] ][ vID ] ) ) );

		if( PlayerInfo[ id ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ id ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );

		GlobalID[ id ] = PlayerInfo[ playerid ][ xVoziloID ][ 2 ];
	}
	else if( moje == 4 )
	{
		if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) return GRESKA( playerid, "Nemate vozilo u slotu 4." );
		format( ponuda, sizeof( ponuda ), "o "col_balkanstory"vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ playerid ][ xVoziloID ][ 3 ] ][ vID ] ) ) );

		if( PlayerInfo[ id ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ id ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ id ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su tom igracu zauzeti." );
		GlobalID[ id ] = PlayerInfo[ playerid ][ xVoziloID ][ 3 ];
	}
	else if( moje == 5 )
	{
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Nemate imovinu u slotu 1." );
		format( ponuda, sizeof( ponuda ), "a "col_balkanstory"%s vrednosti %d$", GetPropertyAName( PlayerInfo[ playerid ][ xProperty ][ 0 ] ), II[ PlayerInfo[ playerid ][ xProperty ][ 0 ] ][ iPrice ] );
		if( PlayerInfo[ id ][ xProperty ][ 0 ] != -1 && PlayerInfo[ id ][ xProperty ][ 1 ] != -1 && PlayerInfo[ id ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Igrac vec poseduje 3 kuce/stana/vikendice!");
		GlobalID[ id ] = PlayerInfo[ playerid ][ xProperty ][ 0 ];
	}
	else if( moje == 6 )
	{
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Nemate imovinu u slotu 2." );
		format( ponuda, sizeof( ponuda ), "a "col_balkanstory"%s vrednosti %d$", GetPropertyAName( PlayerInfo[ playerid ][ xProperty ][ 1 ] ), II[ PlayerInfo[ playerid ][ xProperty ][ 1 ] ][ iPrice ] );
		if( PlayerInfo[ id ][ xProperty ][ 0 ] != -1 && PlayerInfo[ id ][ xProperty ][ 1 ] != -1 && PlayerInfo[ id ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Igrac vec poseduje 3 kuce/stana/vikendice!");
		GlobalID[ id ] = PlayerInfo[ playerid ][ xProperty ][ 1 ];
	}
	else if( moje == 7 )
	{
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Nemate imovinu u slotu 3." );
		format( ponuda, sizeof( ponuda ), "a "col_balkanstory"%s vrednosti %d$", GetPropertyAName( PlayerInfo[ playerid ][ xProperty ][ 2 ] ), II[ PlayerInfo[ playerid ][ xProperty ][ 2 ] ][ iPrice ] );
		if( PlayerInfo[ id ][ xProperty ][ 0 ] != -1 && PlayerInfo[ id ][ xProperty ][ 1 ] != -1 && PlayerInfo[ id ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Igrac vec poseduje 3 kuce/stana/vikendice!");
		GlobalID[ id ] = PlayerInfo[ playerid ][ xProperty ][ 2 ];
	}
	else if( moje == 8 )
	{
		if( PlayerInfo[ playerid ][ xFirmaID ] == -1 ) return GRESKA( playerid, "Nemate firmu." );
		format( ponuda, sizeof( ponuda ), "a "col_balkanstory"firma - %s", BussinesInfo[ PlayerInfo[ playerid ][ xFirmaID ] ][ bName ] );
		if( PlayerInfo[ id ][ xFirmaID ] != -1 ) return GRESKA( playerid, "Igrac vec poseduje firmu." );
		GlobalID[ id ] = PlayerInfo[ playerid ][ xFirmaID ];
	}
	if( njegovo == 1 )
	{
		if( PlayerInfo[ id ][ xVoziloID ][ 0 ] == -1 ) return GRESKA( playerid, "Igrac nema vozilo u slotu 1." );
		format( trazi, sizeof( trazi ), "vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ 0 ] ][ vID ] ) ) );
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ playerid ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );

		GlobalID_2[ id ] = PlayerInfo[ id ][ xVoziloID ][ 0 ];
	}
	else if( njegovo == 2 )
	{
		if( PlayerInfo[ id ][ xVoziloID ][ 1 ] == -1 ) return GRESKA( playerid, "Igrac nema vozilo u slotu 2." );
		format( trazi, sizeof( trazi ), "vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ 1 ] ][ vID ] ) ) );
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ playerid ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		GlobalID_2[ id ] = PlayerInfo[ id ][ xVoziloID ][ 1 ];
	}
	else if( njegovo == 3 )
	{
		if( PlayerInfo[ id ][ xVoziloID ][ 2 ] == -1 ) return GRESKA( playerid, "Igrac nema vozilo u slotu 3." );
		format( trazi, sizeof( trazi ), "vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ 2 ] ][ vID ] ) ) );
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ playerid ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		GlobalID_2[ id ] = PlayerInfo[ id ][ xVoziloID ][ 2 ];
	}
	else if( njegovo == 4 )
	{
		if( PlayerInfo[ id ][ xVoziloID ][ 3 ] == -1 ) return GRESKA( playerid, "Igrac nema vozilo u slotu 4." );
		format( trazi, sizeof( trazi ), "vozilo marke %s", GetVehicleNameEx( GetVehicleModel( VehicleInfo[ PlayerInfo[ id ][ xVoziloID ][ 3 ] ][ vID ] ) ) );
		if( PlayerInfo[ playerid ][ xVoziloID ][ 0 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 1 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 2 ] == -1 ) { }
		else if( PlayerInfo[ playerid ][ xVoziloID ][ 3 ] == -1 ) {
			if( PlayerInfo[ playerid ][ xDonatorSlot ] == true ) { }
			else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		}
		else return GRESKA( playerid, "Svi slotovi vozila su vam zauzeti." );
		GlobalID_2[ id ] = PlayerInfo[ id ][ xVoziloID ][ 3 ];
	}
	else if( njegovo == 5 )
	{
		if( PlayerInfo[ id ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Igrac nema imovinu u slotu 1." );
		format( trazi, sizeof( trazi ), "%s vrednosti %d$", GetPropertyName( PlayerInfo[ id ][ xProperty ][ 0 ] ), II[ PlayerInfo[ id ][ xProperty ][ 0 ] ][ iPrice ] );
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec posedujes 3 kuce/stana/vikendice!");
		GlobalID_2[ id ] = PlayerInfo[ id ][ xProperty ][ 0 ];
	}
	else if( njegovo == 6 )
	{
		if( PlayerInfo[ id ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Igrac nema imovinu u slotu 2." );
		format( trazi, sizeof( trazi ), "%s vrednosti %d$", GetPropertyName( PlayerInfo[ id ][ xProperty ][ 1 ] ), II[ PlayerInfo[ id ][ xProperty ][ 1 ] ][ iPrice ] );
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec posedujes 3 kuce/stana/vikendice!");
		GlobalID_2[ id ] = PlayerInfo[ id ][ xProperty ][ 1 ];
	}
	else if( njegovo == 7 )
	{
		if( PlayerInfo[ id ][ xProperty ][ 0 ] == -1 ) return GRESKA( playerid, "Igrac nema imovinu u slotu 3." );
		format( trazi, sizeof( trazi ), "%s vrednosti %d$", GetPropertyName( PlayerInfo[ id ][ xProperty ][ 2 ] ), II[ PlayerInfo[ id ][ xProperty ][ 2 ] ][ iPrice ] );
		if( PlayerInfo[ playerid ][ xProperty ][ 0 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 1 ] != -1 && PlayerInfo[ playerid ][ xProperty ][ 2 ] != -1 ) return GRESKA( playerid, "Vec posedujes 3 kuce/stana/vikendice!");
		GlobalID_2[ id ] = PlayerInfo[ id ][ xProperty ][ 2 ];
	}
	else if( njegovo == 8 )
	{
		if( PlayerInfo[ id ][ xFirmaID ] == -1 ) return GRESKA( playerid, "Igrac nema firmu." );
		format( trazi, sizeof( trazi ), "firmu - %s", BussinesInfo[ PlayerInfo[ id ][ xFirmaID ] ][ bName ] );
		if( PlayerInfo[ playerid ][ xFirmaID ] != -1 ) return GRESKA( playerid, "Vec posedujete firmu." );
		GlobalID_2[ id ] = PlayerInfo[ id ][ xFirmaID ];
	}

	new coordsstring[ 256 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac "col_balkanstory"%s "col_white"vam je ponudio zamenu.\n", ImeIgraca( playerid ) );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"U zameni je ponudjen%s.\n", ponuda );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Igrac od vas trazi "col_balkanstory"%s.\n", trazi );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, ""col_white"Izaberite da li prihvatate ili odbijate zamenu." );
	ShowPlayerDialog( id, dialog_ZAMENA_1, DSMSG, D_NASLOV, DialogStrgEx, "Prihvati", "Odbij" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	Ponudjeno[ id ] = moje;
	Trazio[ id ] = njegovo;
	GlobalProdaja[ id ] = playerid;
	SendInfoMessage( playerid, "Uspjesno ste ponudili zamenu igracu %s.", ImeIgraca( id ) );
	SendInfoMessage( playerid, "U zameni je ponudjen%s.", ponuda );
	SendInfoMessage( playerid, "U zameni si zatrazio %s.", trazi );

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:bacikljuc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xRezervniKljucevi ] == -1 ) return GRESKA( playerid, "Nemas rezervne kljuceve koje bi mogao da bacis." );
	PlayerInfo[ playerid ][ xRezervniKljucevi ] = -1;
	SendInfoMessage( playerid, "Bacio si rezervni kljuc!" );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dajkljuc( playerid, params[] )
{
	new id, vozilo;
	if( sscanf( params, "ui", id, vozilo ) ) return SendUsageMessage( playerid, "/dajkljuc [ ID Igraca ] [ slot vozilo(1-4) ]" );
	if( vozilo < 1 || vozilo > 4 ) return GRESKA( playerid, "Pogresan broj slota vozila." );
	
	new slot = vozilo-1;
	if( PlayerInfo[ playerid ][ xVoziloID ][ slot ] == -1 ) return GRESKA( playerid, "Nemate vozilo u ovom slotu." );
	if( id == playerid ) return GRESKA( playerid, "Ne mozes dati kljuc sam sebi!" );
	if( !IsPlayerNearPlayer( 3.0, playerid, id ) ) return GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!" );
	if( PlayerInfo[ id ][ xRezervniKljucevi ] != -1 ) return GRESKA( playerid, "Taj igrac vec ima rezervne kljuceve!" );
	PlayerInfo[ id ][ xRezervniKljucevi ] = PlayerInfo[ playerid ][ xVoziloID ][ slot ];
	PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound( id, 1052, 0.0, 0.0, 0.0);
	SendInfoMessage( playerid, "Dao si kljuc za auto "col_white"%s", ImeIgraca( id ) );
	SendInfoMessage( id, "Dobio si kljuc za auto od "col_white"%s", ImeIgraca( playerid ) );
	format( globalstring, sizeof( globalstring ), "* %s vadi kljuceve svog auta, i daje ih %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
	PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	return 1;
}

/////////////////////////////////////////////////////////////////////////////////
CMD:prijavibug( playerid, params[] )
{
	new tekst[ 64 ];
	if( sscanf( params, "s[64]", tekst ) ) return SendUsageMessage( playerid, "/prijavibug [ tekst ]");
	new string1[ 128 ];
	format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), tekst );
	LogSave( "Ostalo/LogPrijaveBugova.log", string1 );
	SendInfoMessage( playerid, "Prijavili ste bug." );
	SendInfoMessage( playerid, "Vas bug glasi: %s.", tekst );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:prijavi( playerid, params[] )
{
	if( PlayerInfo[playerid][xLevel] < 10 || PlayerInfo[playerid][xLevel] == 10) return SendSrwMessage(playerid, "Vi ste novajlija (lvl 10 ili manje), koristite '/n' za razgovaranje sa staffom!");
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes da koristis ovu komandu dok si u zatvoru." );
	if( ServerInfo[ Report ] == false ) return GRESKA( playerid, "Trenutno nije moguce slanje reporta Admin timu." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new id, rstring[128], string[ 234 ];
	if( sscanf( params, "us[128]", id, rstring ) ) return SendUsageMessage( playerid, "/prijavi [ ID/Ime ] [ Text ]");
	if( ReportGlobal[ playerid ] > 0 ) return GRESKA( playerid, "Morate cekati 60 sekundi prije novog reporta!");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID igraca." );
	format( string, sizeof( string ), ""col_balkanstory"|R| %s(ID:%d) -> %s(ID:%d): %s", ImeIgraca( playerid ), playerid, ImeIgraca( id ), id, rstring );
	AdminRPoruka( -1, string );
	SendInfoMessage(playerid, "Online Admini i GameMasteri ce vam odgovoriti u najkracem mogucem roku!" );
	SendInfoMessage(playerid,  "Vas report glasi: %s." , rstring );
	ReportGlobal[ playerid ] = 60;
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:pitaj( playerid, params[] )
{
	if( PlayerInfo[playerid][xLevel] < 10 || PlayerInfo[playerid][xLevel] == 10) return SendSrwMessage(playerid, "Vi ste novajlija (lvl 10 ili manje), koristite '/n' za razgovaranje sa staffom!");
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes kad si zaveza/tazovan!");
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Zatvoreni ste!" );
	if( ServerInfo[ Pitanja ] == false ) return GRESKA( playerid, "Slanje pitanja je trenutno iskljuceno!" );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Mutirani ste !");
	if( askqInfo[ playerid ][ askqSended ] == true ) return GRESKA( playerid, "Vi ste vec poslali pitanje, molimo za strpljenje - pustite i druge da pitaju!" );
	new askQ = -1;
	for( new id = 1; id < MAX_ASKQS; id++ )
	{
		if( askqList[ id ][ askqSend ] == false )
		{
			askQ = id;
			break;
		}
	}
	if( askQ == -1 ) return GRESKA( playerid, "Lista pitanja je puna - sacekajte malo te ponovite kasnije!" );
	ShowPlayerDialog( playerid, dialog_PITAADMINA, DSI, "Posalji upit", "Upisite i posaljite vase pitanje Admin/GM timu.\nOdgovor cete dobiti u najkracem roku\nCijena upita: 100$", "Uredu", "Izlaz" );
	
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:pogledajodgovor( playerid, params[] )
{
	if( askqInfo[ playerid ][ askqSended ] == false ) return GRESKA( playerid, "Nisi poslao pitanje ili si vec procitao odgovor!" );
	if( askqInfo[ playerid ][ askqAnswered ] == false ) return GRESKA( playerid, "Na vase pitanje jos nije dat odgovor!" );
	new string[ 256 ];
	format( string, sizeof( string ), "Admin/GM %s je dao odgovor na vas upit!\n\nText odgovora: %s", askqInfo[ playerid ][ askqAdmin ], askqInfo[ playerid ][ askqAnswer ] );
	ShowPlayerDialog( playerid, 0, DSMSG, "Odgovor na vase pitanje", string, "Uredu", "" );
	askqInfo[ playerid ][ askqSended ] = false;
	askqInfo[ playerid ][ askqAnswered ] = false;
	strmid( askqInfo[ playerid ][ askqAdmin ], "None", 0, strlen( "None" ), 32 );
	strmid( askqInfo[ playerid ][ askqAnswer ], "None", 0, strlen( "None" ), 128 );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:new( playerid, params[] )
{
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes da koristis ovu komandu dok si u zatvoru." );
	if( GetPlayerInterior( playerid ) != 0 ) return GRESKA( playerid, "Ne mozes zvati /new ako si u interioru!");
	if( PlayerInfo[ playerid ][ xLevel ] > 1 ) return GRESKA( playerid, "Samo do levela 2." );
	if( NewGlobal[ playerid ] > 0 ) return GRESKA( playerid, "Morate cekati 60 sekundi prije novog /newa!");
	format( globalstring, sizeof( globalstring ), "*Igrac [%d]%s je novi na serveru i trazio je pomoc!",playerid, ImeIgraca( playerid ) );
	RPTChat( SVETLOPLAVA, globalstring );
	SendClientMessagee( playerid, 0x33CCFFAA, "[HELP]: Poslali ste zahtev za pomoc, STAFF ce vam se ubrzo obratiti ukoliko je online.");
	NewGlobal[ playerid ] = 60;
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:animacije( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, "__________________________ANIMACIJE___________________________");
	SendClientMessagee( playerid, BELA, "/fall - /injured - /akick - /push - /handsup - /bomb - /drunk - /getarrested - /laugh ");
	SendClientMessagee( playerid, BELA, " /basket - /medic - /spray - /robman - /taichi - /lookout - /kiss - /cellin - /cellout - /crossarms - /lay");
	SendClientMessagee( playerid, BELA, "/deal - /crack - /smoke - /groundsit - /chat - /dance - /fucku - /strip - /hide - /vomit - /eat");
	SendClientMessagee( playerid, BELA, "/koface - /kostomach - /dealstance - /rap - /sup - /reload - /sit - /wankin - /bat1 - /bat2 - /piss");
	SendClientMessagee( playerid, BELA, "/exhaust - /leftslap - /hoodfrisked - /lightcig - /tapcig - /box - /lay2 - /lean - /wall - /fwalk");
	SendClientMessagee( playerid, BELA, "/cop - /elbow - /fstance - /lowthrow - /highthrow - /aim - /gwalk - /celebrate - /riot1 - /riot2 - /riot3");
	SendClientMessagee( playerid, BELA, "/ghand - /comeon - /fuckit - /scared - /caranim - /no - /crawl - /walk");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:stats( playerid, params[] ) {
	if( StatsTDShowed[ playerid ] == false ) {
		for( new chat = 0; chat <= 30; chat++ )
		SendClientMessagee( playerid, BELA, " " );

		StatsTDControl( playerid, true );

		StatsTDShowed[ playerid ] = true;
		SendClientMessagee( playerid, SVETLOPLAVA, "* Da ugasite stats opet upisite komandu /stats!");
	}
	else {
		StatsTDShowed[ playerid ] = false;
		StatsTDControl( playerid, false );
	}
	return 1;
}*/
/////////////////////////////////////////////////////////////////////////////////
CMD:stats( playerid, params[] )
{
	/*if( StatsTDShowed[ playerid ] == false )
	{
		for( new chat = 0; chat <= 30; chat++ )
		SendClientMessagee( playerid, BELA, " " );

		StatsTDsControl( playerid, true );
		StatsTDShowed[ playerid ] = true;
	}
	else {
		StatsTDShowed[ playerid ] = false;
		StatsTDsControl( playerid, false );
	}*/
	SendInfoMessage(playerid,"Da pogledate svoj stats, kucajte '/itds' i odaberite "col_sanm"STATS");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:licnakarta( playerid, params[] )
{
	if(PlayerInfo[ playerid ][ xLicna ] == 0) return GRESKA( playerid, "Nemate licnu kartu, izvadite je u opstini!");
	if(LicnaKartaShowed[ playerid ] == false )
	{
		for( new chat = 0; chat <= 30; chat++ )
		SendClientMessagee( playerid, BELA, " " );
		LicnaKartaControl( playerid, true );
		LicnaKartaShowed[ playerid ] = true;

	}
	else
	{
		LicnaKartaShowed[ playerid ] = false;
		LicnaKartaControl( playerid, false );
	}
	return 1;
}*/
/////////////////////////////////////////////////////////////////////////////////
CMD:smsoglas( playerid, params[] )
{
	if( ServerInfo[ Oglasi ] == false ) return GRESKA( playerid, "Trenutno nije moguce slati oglase." );
	if( isnull( params ) ) return SendUsageMessage( playerid, "/smsoglas [text]");
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3!");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete poslati oglas dok ste zatvoreni!");
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0 ) return GRESKA( playerid, "Nemate mobilni telefon!" );
	for( new i = 0; i < strlen( params ); i++ )
	{
		if(strfind( params[ i ], "server", true) == 0
		|| strfind( params[ i ], "IP", true) == 0
		|| strfind( params[ i ], ".", true) == 0
		|| strfind( params[ i ], ":1", true) == 0
		|| strfind( params[ i ], ":2", true) == 0
		|| strfind( params[ i ], ":3", true) == 0
		|| strfind( params[ i ], ":4", true) == 0
		|| strfind( params[ i ], ":5", true) == 0
		|| strfind( params[ i ], ":6", true) == 0
		|| strfind( params[ i ], ":7", true) == 0
		|| strfind( params[ i ], ":8", true) == 0
		|| strfind( params[ i ], ":9", true) == 0
		|| strfind( params[ i ], ";", true) == 0
		|| strfind( params[ i ], "jebem", true) == 0
		|| strfind( params[ i ], "bog", true) == 0
		|| strfind( params[ i ], "mater", true) == 0
		|| strfind( params[ i ], "kreten", true) == 0
		|| strfind( params[ i ], "admin", true) == 0
		|| strfind( params[ i ], "jebeni", true) == 0
		|| strfind( params[ i ], ".com", true) == 0
		|| strfind( params[ i ], ".info", true) == 0
		|| strfind( params[ i ], ".org", true) == 0
		|| strfind( params[ i ], ".info", true) == 0
		|| strfind( params[ i ], "www", true) == 0
		|| strfind( params[ i ], "glup", true) == 0
		|| strfind( params[ i ], "majka", true) == 0
		|| strfind( params[ i ], "majku", true) == 0)
		{
			GRESKA( playerid, "Vas oglas je ne primjeren te je obrisan od strane operatera!");
			return 1;
		}
	}
	if( ( !adds ) && ( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) )
	{
		GRESKA( playerid, "Pokusajte ponovno za 60 sekundi, neko je vec objavio oglas!",  (addtimer/1000));
		return 1;
	}
	new payout = strlen(params) * 2;
	if( PlayerInfo[ playerid ][ xTelefonBon ] < payout )
	{
		GRESKA( playerid, "Nemate dovoljno kredita na telefonu! (Potrebno: $%d ) ", payout);
		return 1;
	}
/*
	OOCNews( -1, ""col_balkanstory"-----------------------|| SMS-OGLAS ||----------------------------");
	OOCNews( -1, " ");
	format( globalstring, sizeof( globalstring ), ""col_balkanstory"Text oglasa: {FFFFFF}%s ",  params );
	OOCNews( -1, globalstring );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( PlayerLogged[ i ] )
		{
			if( PlayerInfo[ i ][ xAdmin ] > 0 || PlayerInfo[ i ][ xHelper ] > 0 )
			{
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}[%d] %s",playerid, ImeIgraca( playerid ));
					SendClientMessagee(i, -1, globalstring );
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br.telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
					SendClientMessagee(i, -1, globalstring );
					SendClientMessagee( i, -1, " ");
					SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");
			}
			else
			{
				if( !gNews{ i } )
				{
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}%s", ImeIgraca( playerid ));
					SendClientMessagee(i, -1, globalstring );
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br.telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
					SendClientMessagee(i, -1, globalstring );
					SendClientMessagee( i, -1, " ");
					SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");
				}
			}
		}
	}*/
	new kontakt[200];
	new oglastext[200];
	format(kontakt, sizeof(kontakt), ""SERVERBOJA_AQUA"[ SMS-OGLAS ]: Kontakt:{FFFFFF} %s | "SERVERBOJA_SIVA"ID igraca:{ffffff} %d |"SERVERBOJA_SIVA" Telefon:{ffffff} %d", ImeIgraca(playerid), playerid, PlayerInfo[ playerid ][ xBrojTelefona ]);
	format(oglastext, sizeof(oglastext), ""SERVERBOJA_AQUA"[ SMS-OGLAS ]: {ffffff}Tekst oglasa:"SERVERBOJA_SIVA" %s", params);
	//SCMA(playerid, ""SERVERBOJA_SIVA"|------------------------------OBAVJESTENJE--------------------------------|");
	SCMA(playerid, kontakt);
	SCMA(playerid, oglastext);
	//SCMA(playerid, ""SERVERBOJA_SIVA"|--------------------------------------------------------------------------|");

	PlayerInfo[ playerid ][ xTelefonBon ] -= payout;
	format( globalstring, sizeof( globalstring ), "~r~Placeno za reklamu: $%d", payout);
	announcement( playerid, globalstring, 5000, 5 );
	BussinesOglasMoney( payout );
	if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) { SetTimer( "AddsOn", addtimer, false ); adds = false; }
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:oglas( playerid, params[] )
{
	if( ServerInfo[ Oglasi ] == false ) return GRESKA( playerid, "Trenutno nije moguce slati oglase." );
	if( isnull( params ) ) return SendUsageMessage( playerid, "/oglas [text]");
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3!");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete poslati oglas dok ste zatvoreni!");
	if( !IsPlayerInRangeOfPoint( playerid, 5.0, 1709.3073,296.7236,1004.9067 ) ) return GRESKA( playerid, "Morate biti u oglasima ili CNN studiu");
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0 ) return GRESKA( playerid, "Nemate mobilni telefon!" );

	for( new i = 0; i < strlen( params ); i++ )
	{
		if(strfind( params[ i ], "server", true) == 0
		|| strfind( params[ i ], "IP", true) == 0
		|| strfind( params[ i ], ".", true) == 0
		|| strfind( params[ i ], ":1", true) == 0
		|| strfind( params[ i ], ":2", true) == 0
		|| strfind( params[ i ], ":3", true) == 0
		|| strfind( params[ i ], ":4", true) == 0
		|| strfind( params[ i ], ":5", true) == 0
		|| strfind( params[ i ], ":6", true) == 0
		|| strfind( params[ i ], ":7", true) == 0
		|| strfind( params[ i ], ":8", true) == 0
		|| strfind( params[ i ], ":9", true) == 0
		|| strfind( params[ i ], ";", true) == 0
		|| strfind( params[ i ], "jebem", true) == 0
		|| strfind( params[ i ], "bog", true) == 0
		|| strfind( params[ i ], "mater", true) == 0
		|| strfind( params[ i ], "kreten", true) == 0
		|| strfind( params[ i ], "admin", true) == 0
		|| strfind( params[ i ], "jebeni", true) == 0
		|| strfind( params[ i ], ".com", true) == 0
		|| strfind( params[ i ], ".info", true) == 0
		|| strfind( params[ i ], ".org", true) == 0
		|| strfind( params[ i ], ".info", true) == 0
		|| strfind( params[ i ], "www", true) == 0
		|| strfind( params[ i ], "glup", true) == 0
		|| strfind( params[ i ], "majka", true) == 0
		|| strfind( params[ i ], "San Marino", true) == 0
		|| strfind( params[ i ], "Athlone", true) == 0
		|| strfind( params[ i ], "Zenolo", true) == 0
		|| strfind( params[ i ], "BExtazy", true) == 0
		|| strfind( params[ i ], "Balkan Extazy", true) == 0
		|| strfind( params[ i ], "Old School", true) == 0
		|| strfind( params[ i ], "majku", true) == 0)
		{
			GRESKA( playerid, "Vas oglas je ne primjeren te je obrisan od strane operatera!");
			return 1;
		}
	}
	if( ( !adds ) && ( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) )
	{
		GRESKA( playerid, "Pokusajte ponovno za 60 sekundi, neko je vec objavio oglas!",  (addtimer/1000));
		return 1;
	}
	new payout = strlen(params) * 2;
	if( PlayerInfo[ playerid ][ xNovac ] < payout)
	{
		GRESKA( playerid, "Nemate $%d za vas oglas!", payout);
		return 1;
	}
	/*OOCNews( -1, ""col_balkanstory"---------------------------|| OGLAS ||------------------------------- ");
	OOCNews( -1, " ");
	format( globalstring, sizeof( globalstring ), ""col_balkanstory"Text oglasa: {FFFFFF}%s ",  params );
	OOCNews( -1, globalstring );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( PlayerLogged[ i ] )
		{
			if( PlayerInfo[ i ][ xAdmin ] > 0 || PlayerInfo[ i ][ xHelper ] > 0 )
			{
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}[%d] %s",playerid, ImeIgraca( playerid ));
					SendClientMessagee(i, -1, globalstring );
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br.telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
					SendClientMessagee(i, -1, globalstring );
					SendClientMessagee( i, -1, " ");
					SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");
			}
			else
			{
				if( !gNews{ i } )
				{
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}%s", ImeIgraca( playerid ));
					SendClientMessagee(i, -1, globalstring );
					format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br.telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
					SendClientMessagee(i, -1, globalstring );
					SendClientMessagee( i, -1, " ");
					SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");
					
				}
			}
			
		}
	}*/
	new kontakt[200];
	new oglastext[200];
	format(kontakt, sizeof(kontakt), ""SERVERBOJA_AQUA"[ OGLAS ]: Kontakt:{FFFFFF} %s | "SERVERBOJA_SIVA"ID igraca:{ffffff} %d |"SERVERBOJA_SIVA" Telefon:{ffffff} %d", ImeIgraca(playerid), playerid, PlayerInfo[ playerid ][ xBrojTelefona ]);
	format(oglastext, sizeof(oglastext), ""SERVERBOJA_AQUA"[ OGLAS ]: {ffffff}Tekst oglasa:"SERVERBOJA_SIVA" %s", params);
	//format(kontakt, sizeof(kontakt), ""SERVERBOJA_CRVENA"[ OGLAS ]: "SERVERBOJA_ZUTA"Kontakt:{FFFFFF} %s "SERVERBOJA_MRKVA"|| "SERVERBOJA_ZUTA"ID igraca: %d "SERVERBOJA_MRKVA"|| "SERVERBOJA_ZUTA"Telefon: %d", ImeIgraca(playerid), playerid, PlayerInfo[ playerid ][ xBrojTelefona ]);
	//format(oglastext, sizeof(oglastext), ""SERVERBOJA_CRVENA"[ OGLAS ]: "SERVERBOJA_ZUTA"Tekst oglasa:"SERVERBOJA_SIVA" %s", params);
	//SCMA(playerid, ""SERVERBOJA_SIVA"|------------------------------OBAVJESTENJE--------------------------------|");
	SCMA(playerid, kontakt);
	SCMA(playerid, oglastext);
	//SCMA(playerid, ""SERVERBOJA_SIVA"|--------------------------------------------------------------------------|");
	DajIgracuNovac( playerid, - payout );
	format( globalstring, sizeof( globalstring ), "~r~Placeno za reklamu: $%d", payout);
	announcement( playerid, globalstring, 5000, 5 );
	BussinesOglasMoney( payout );
	if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) { SetTimer( "AddsOn", addtimer, false ); adds = false; }
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:oglasi( playerid, params[] )
{
	if( ServerInfo[ Oglasi ] == false ) return GRESKA( playerid, "Trenutno nije moguce slati oglase." );
	new aa1,aa2,aa3;
	aa1 = IsPlayerInRangeOfPoint( playerid, 3.0, 727.9562,-1366.0109,1001.6613 );
	aa2 = IsPlayerInRangeOfPoint( playerid, 3.0, 725.8447,-1366.0070,1001.6613 );
	aa3 = IsPlayerInRangeOfPoint( playerid, 3.0, 723.9621,-1366.0051,1001.6613 );
	
	if( aa1 || aa2 || aa3 )
	{
	
		if( isnull( params ) ) return SendUsageMessage( playerid, "/oglasi [text]");
		if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3!");
		if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete poslati oglas dok ste zatvoreni!");
		if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0 ) return GRESKA( playerid, "Nemate mobilni telefon!" );

		for( new i = 0; i < strlen( params ); i++ )
		{
			if(strfind( params[ i ], "server", true) == 0
			|| strfind( params[ i ], "IP", true) == 0
			|| strfind( params[ i ], ".", true) == 0
			|| strfind( params[ i ], ":1", true) == 0
			|| strfind( params[ i ], ":2", true) == 0
			|| strfind( params[ i ], ":3", true) == 0
			|| strfind( params[ i ], ":4", true) == 0
			|| strfind( params[ i ], ":5", true) == 0
			|| strfind( params[ i ], ":6", true) == 0
			|| strfind( params[ i ], ":7", true) == 0
			|| strfind( params[ i ], ":8", true) == 0
			|| strfind( params[ i ], ":9", true) == 0
			|| strfind( params[ i ], ";", true) == 0
			|| strfind( params[ i ], "jebem", true) == 0
			|| strfind( params[ i ], "bog", true) == 0
			|| strfind( params[ i ], "mater", true) == 0
			|| strfind( params[ i ], "kreten", true) == 0
			|| strfind( params[ i ], "admin", true) == 0
			|| strfind( params[ i ], "jebeni", true) == 0
			|| strfind( params[ i ], ".com", true) == 0
			|| strfind( params[ i ], ".info", true) == 0
			|| strfind( params[ i ], ".org", true) == 0
			|| strfind( params[ i ], ".info", true) == 0
			|| strfind( params[ i ], "www", true) == 0
			|| strfind( params[ i ], "glup", true) == 0
			|| strfind( params[ i ], "majka", true) == 0
			|| strfind( params[ i ], "San Marino", true) == 0
			|| strfind( params[ i ], "Athlone", true) == 0
			|| strfind( params[ i ], "Zenolo", true) == 0
			|| strfind( params[ i ], "BExtazy", true) == 0
			|| strfind( params[ i ], "Balkan Extazy", true) == 0
			|| strfind( params[ i ], "Skopsi", true) == 0
			|| strfind( params[ i ], "majku", true) == 0)
			{
				GRESKA( playerid, "Vas oglas je ne primjeren te je obrisan od strane operatera!");
				return 1;
			}
		}
		if( ( !adds ) && ( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) )
		{
			GRESKA( playerid, "Pokusaj ponovno %d sekundi izmedju oglasa !",  (addtimer/1000));
			return 1;
		}
		new payout = strlen(params) * 2;
		if( PlayerInfo[ playerid ][ xNovac ] < payout)
		{
			GRESKA( playerid, "Nemate $%d za vas oglas!", payout);
			return 1;
		}
		OOCNews( -1, ""col_balkanstory"------------------------|| CNN REKLAMA ||-------------------------- ");
		OOCNews( -1, " ");
		format( globalstring, sizeof( globalstring ), ""col_balkanstory"Text oglasa: {FFFFFF}%s ",  params );
		OOCNews( -1, globalstring );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerLogged[ i ] )
			{
				if( PlayerInfo[ i ][ xAdmin ] > 0 || PlayerInfo[ i ][ xHelper ] > 0 )
				{
						format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}[%d] %s",playerid, ImeIgraca( playerid ));
						SendClientMessagee(i, -1, globalstring );
						format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br. telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
						SendClientMessagee(i, -1, globalstring );
						SendClientMessagee( i, -1, " ");
						SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");
				}
				else
				{
					if( !gNews{ i } )
					{
						format( globalstring, sizeof( globalstring ), ""col_balkanstory"Kontakt: {FFFFFF}%s", ImeIgraca( playerid ));
						SendClientMessagee(i, -1, globalstring );
						format( globalstring, sizeof( globalstring ), ""col_balkanstory"Br.telefona: {FFFFFF}%d", PlayerInfo[ playerid ][ xBrojTelefona ]);
						SendClientMessagee(i, -1, globalstring );
						SendClientMessagee( i, -1, " ");
						SendClientMessagee( i, -1, ""col_balkanstory"------------------------------------------------------------------------- ");

					}
				}

			}
		}
		DajIgracuNovac( playerid, - payout );
		format( globalstring, sizeof( globalstring ), "~r~Placeno za reklamu: $%d", payout);
		announcement( playerid, globalstring, 5000, 5 );
		//BussinesOglasMoney( payout );
		if( PlayerInfo[ playerid ][ xAdmin ] < 1 ) { SetTimer( "AddsOn", addtimer, false ); adds = false; }
	}else return GRESKA( playerid, "Morate biti u CNN studiu!");
		
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:kupifakture( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint(playerid, 5.0, 358.2514, 186.5351, 1008.3837 ) ) return GRESKA( playerid, "Morate biti kod saltera u Opstini!");
	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca(500$)." );
	if( KupljeneFakture[ playerid ] ) return GRESKA( playerid, "Vec ste kupili fakture." );
	KupljeneFakture[ playerid ] = true;
	SendInfoMessage( playerid, "Kupio si 5 fakture za biznis za 500$, idi ubaci ih u biznis." );
	DajIgracuNovac( playerid, -500 );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:poslovi( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint(playerid, 3.0, 1324.7750,-862.5375,1407.5430 ) || IsPlayerInRangeOfPoint(playerid, 3.0, 1324.6605,-859.2570,1407.5430 ) )
	{
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
		for( new i = 0; i < 11; i++ )
		{
			format( DialogStrgEx, sizeof( DialogStrgEx ), "%s"col_yelow"[%d]{FFFFFF}%s\n", DialogStrgEx,i+1, jobsInfos[ i ][ jName ] );
		}
		ShowPlayerDialog( playerid, dialog_POSLOVIBG, DIALOG_STYLE_LIST, "Poslovi u Beogradu", DialogStrgEx, D_ODABERI, D_ODUSTANI );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	}
	else return GRESKA( playerid, "Morate biti u birou kod saltera!" );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:exit( playerid, params[] )
{
	if( PlayerCP[ playerid ] > 0 ) return GRESKA( playerid, "Ne mozete komandu dok ste u eventu." );
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( IsPlayerInAnyVehicle( playerid ) )
	{
		Dimi_RemovePlayerFromVehicle( playerid ); UsaoAutoProdaja[ playerid ] = -1;
		if(GetPVarInt( playerid, "NoFuel") == 1)
		{
			Dimi_RemovePlayerFromVehicle( playerid );
			SetPVarInt( playerid, "NoFuel", 0 );
		}
		SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:evozaci(playerid,params[])
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		new str[128];
		SendClientMessagee( playerid, -1, ""col_balkanstory" _______ Vozaci _______");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerCP[ i ] > 0 )
			{
				format( str, sizeof( str ), " - %s (id: %d)", ImeIgraca(i),i );
				SendClientMessagee( playerid, BELA, str );
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:ek(playerid,params[])
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new text[ 128 ], string[ 234 ];
		if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/ek [ text ]");
		format( string, sizeof( string ), ""col_balkanstory"(( EVENT - Najava | %s kaze: {FFFFFF}%s "col_balkanstory"))", ImeIgraca( playerid ), text );
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( IsPlayerNearPlayer( 50.0, playerid, i ) )
			{
				SendClientMessage( i, SVETLOPLAVA, string );
			}
		}
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:resetrob( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
	{
		if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
		new id;
		if( sscanf( params, "u", id ) )
		{
			SendUsageMessage( playerid, "/resetrob [ id ]" );
			return 1;
		}
		if(id == IPI) return GRESKA(playerid,"Ne postojeci ID.");
		PlayerInfo[ id ][ xPljackaVreme ] = 0;
		SendInfoMessage( playerid, "Resetovao si rob igracu %s.", ImeIgraca(id) );
		SendInfoMessage( id, "Admin %s vam je resetovao rob time.", ImeIgraca(playerid) );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:eventhelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Event HELP | "col_white"/startevent /stopevent /ek /evozaci" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dopuniresurse( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1337 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new izbor, kolicina;
	if( sscanf( params, "ii", izbor, kolicina ) )
	{
		SendUsageMessage( playerid, "/dopuniresurse [ izbor ] [ kolicina ]" );
		SendClientMessagee( playerid, BELA, "[Izbor] 1. Drva | 3. Zlato | 4. Novac u banci | 5. Namestaj" );
		SendInfoMessage( playerid, "Trenutno ima: Drva( %d ), Zlato( %dg ).", ServerInfo[ Drva ], ServerInfo[ Zlato ] );
		SendInfoMessage( playerid, "Trenutno ima: Novca u banci( %d$ ), Namestaj( %d ).", ServerInfo[ NovacBanka ], ServerInfo[ Namestaj ] );
		return 1;
	}
	if( izbor == 1 )
	{
		ServerInfo[ Drva ] += kolicina;
		SaveServerStats( );
		SendInfoMessage( playerid, "Dodao si %d drva u resurse.", kolicina );
	}
	else if( izbor == 2 )
	{
		GRESKA( playerid, "Trenutno nedostupno." );
		return true;
	}
	else if( izbor == 3 )
	{
		ServerInfo[ Zlato ] += kolicina;
		SaveServerStats( );
		new zlatostring[ 256 ];
		format( zlatostring, sizeof( zlatostring ), ""col_white"Trenutno u sefu ima "col_balkanstory"%dg "col_white"zlata\n"col_white"Da opljackate zlataru kucajte\n"col_balkanstory"[ /pljackajzlataru ]", ServerInfo[ Zlato ] );
		UpdateDynamic3DTextLabelText( ServerInfo[ ZlatoLabel ], BELA, zlatostring );
		
		SendInfoMessage( playerid, "Dodao si %dg zlata u resurse.", kolicina );
	}
	else if( izbor == 4 )
	{
		ServerInfo[ NovacBanka ] += kolicina;
		SaveServerStats( );
		new novacstring[ 256 ];
		format( novacstring, sizeof( novacstring ), ""col_white"Trenutno u sefu ima "col_balkanstory"%d$\n"col_white"Da opljackate banku kucajte\n"col_balkanstory"[ /postavidinamit /provalilozinku /pljackajbanku ]", ServerInfo[ NovacBanka ] );
		UpdateDynamic3DTextLabelText( ServerInfo[ NovacLabel ], BELA, novacstring );
		format( novacstring, sizeof( novacstring ), ""col_white"[ STANJE NOVCA ]\n"col_white"Trenutno u sefu ima "col_balkanstory"%d$\n"col_white"Maksimalno moze imati "col_balkanstory"1 000 000$\n"col_balkanstory"", ServerInfo[ NovacBanka ] );
		UpdateDynamic3DTextLabelText( ServerInfo[ NovacLabel2 ], BELA, novacstring );
		SendInfoMessage( playerid, "Dodao si %d$ u resurse.", kolicina );
	}
	else if( izbor == 5 )
	{
		ServerInfo[ Namestaj ] += kolicina;
		SaveServerStats( );
		SendInfoMessage( playerid, "Dodao si %d namestaj u resurse.", kolicina );
	}
	else return GRESKA( playerid, "Pogresan izbor." );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:izracunajorgslotove( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] >= 1338 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 5 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }

		new OrgID, sloboda = 0, oFile[ 64 ];
		if( sscanf( params, "i", OrgID ) )
		{
			SendUsageMessage( playerid, "/izracunajorgslotove [ OrgID ]" );
			SendInfoMessage( playerid, "Koristi /organizacije da vidis spisak orgi." );
			return 1;
		}
		format( oFile, sizeof( oFile ), O_FILE, OrgID );
		if( !fexist( oFile ) ) return GRESKA( playerid, "Ova organizacija ne postoji u bazi podataka." );
		if( !strcmp( OI[ OrgID ][ oClan1 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan2 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan3 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan4 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan5 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan6 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan7 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan8 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan9 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan10 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan11 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan12 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan13 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan14 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan15 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan16 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan17 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan18 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan19 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan20 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan21 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan22 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan23 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan24 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan25 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan26 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan27 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan28 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan29 ], "Niko", true ) ) { sloboda++; }
		if( !strcmp( OI[ OrgID ][ oClan30 ], "Niko", true ) ) { sloboda++; }
		OI[ OrgID ][ oUbacenihClanova ] = 30-sloboda;
		SaveOrganization( OrgID );
		SendInfoMessage( playerid, "Ova organizacija ima %d ubacenih clanova.", 30-sloboda );

	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:ocistislot( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || PlayerInfo[ playerid ][ xSkriptaRank ] == 4  )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] > 5 ) { if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" ); }

		new OrgID, izbor, broj, oFile[ 64 ];
		if( sscanf( params, "iii", OrgID, izbor, broj ) )
		{
			SendUsageMessage( playerid, "/ocistislot [ OrgID ] [ izbor ] [ broj slota ]" );
			SendClientMessagee( playerid, BELA, "[Izbor] 1. Lider | 2. Clan" );
			SendInfoMessage( playerid, "Koristi /spisakclanova da vidis spisak clanova." );
			return 1;
		}
		format( oFile, sizeof( oFile ), O_FILE, OrgID );
		if( !fexist( oFile ) ) return GRESKA( playerid, "Ova organizacija ne postoji u bazi podataka." );
		if( izbor == 1 )
		{

			if( broj == 1 )
			{
				strmid( OI[ OrgID ][ oLider1 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
				SaveOrganization( OrgID );
				SendClientMessageEx( playerid, CRVENA, "Ocistili ste prvi slot lidera organizacije %s", OI[ OrgID ][ oName ] );
			}
			else if( broj == 2 )
			{
				strmid( OI[ OrgID ][ oLider2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN);
				SaveOrganization( OrgID );
				SendClientMessageEx( playerid, CRVENA, "Ocistili ste drugi slot lidera organizacije %s", OI[ OrgID ][ oName ] );
			}
			else return GRESKA( playerid, "Lider slot postoji samo 1 i 2." );
		}
		else if( izbor == 2 )
		{
			if( broj < 1 || broj > 30 ) return GRESKA( playerid, "Clan slot postoji od 1 do 30." );
			if( broj == 1 ) strmid( OI[ OrgID ][ oClan1 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 2 ) strmid( OI[ OrgID ][ oClan2 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 3 ) strmid( OI[ OrgID ][ oClan3 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 4 ) strmid( OI[ OrgID ][ oClan4 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 5 ) strmid( OI[ OrgID ][ oClan5 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 6 ) strmid( OI[ OrgID ][ oClan6 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 7 ) strmid( OI[ OrgID ][ oClan7 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 8 ) strmid( OI[ OrgID ][ oClan8 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 9 ) strmid( OI[ OrgID ][ oClan9 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 10 ) strmid( OI[ OrgID ][ oClan10 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 11 ) strmid( OI[ OrgID ][ oClan11 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 12 ) strmid( OI[ OrgID ][ oClan12 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 13 ) strmid( OI[ OrgID ][ oClan13 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 14 ) strmid( OI[ OrgID ][ oClan14 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 15 ) strmid( OI[ OrgID ][ oClan15 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 16 ) strmid( OI[ OrgID ][ oClan16 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 17 ) strmid( OI[ OrgID ][ oClan17 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 18 ) strmid( OI[ OrgID ][ oClan18 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 19 ) strmid( OI[ OrgID ][ oClan19 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 20 ) strmid( OI[ OrgID ][ oClan20 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 21 ) strmid( OI[ OrgID ][ oClan21 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 22 ) strmid( OI[ OrgID ][ oClan22 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 23 ) strmid( OI[ OrgID ][ oClan23 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 24 ) strmid( OI[ OrgID ][ oClan24 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 25 ) strmid( OI[ OrgID ][ oClan25 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 26 ) strmid( OI[ OrgID ][ oClan26 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 27 ) strmid( OI[ OrgID ][ oClan27 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 28 ) strmid( OI[ OrgID ][ oClan28 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 29 ) strmid( OI[ OrgID ][ oClan29 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			else if( broj == 30 ) strmid( OI[ OrgID ][ oClan30 ], "Niko", 0, strlen( "Niko" ), ORG_CLAN );
			SaveOrganization( OrgID );
			SendClientMessageEx( playerid, CRVENA, "Ocistili ste %d slot clana organizacije %s.", broj, OI[ OrgID ][ oName ] );
		}
		else return GRESKA( playerid, "Pogresan izbor." );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dboja( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xDBO ] || PlayerInfo[ playerid ][ xVIPLevel ] >= 3)
	{
		PlayerInfo[ playerid ][ xDBO ] = true;
		ShowPlayerDialog( playerid, dialog_DONATORBOJA, DSL, "{07C1F5}Odaberite Boju", "1.SCRVENA \t\t{FF8080}|| \n2.CRVENA \t\t{FF0000}||\n3.SPLAVA \t\t{80FFFF} ||\n4.ORANGE \t\t{FF8040}||\n5.ROZA \t\t{FF62B0}||\n6.SIVA \t\t"SERVERBOJA_AQUA"||\n7.ZELENA \t\t{00FF00}||\n8.ZUTA \t\t{FFFF00}||\n9.TZELENA \t\t{008000}||\n10.PLAVA \t\t{0000FF}||","Odaberi","Izadji");
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );

	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:donatorskeboje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1339 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new ID;
	if( sscanf( params, "u", ID ) ) return SendUsageMessage( playerid, "/donatorskeboje [ ID/Ime ]");
	if( ID == IPI ) return GRESKA( playerid, "Pogresan ID korisnika." );
	if( !PlayerInfo[ ID ][ xDBO ] )
	{
		PlayerInfo[ ID ][ xDBO ] = true;
		SendInfoMessage( ID, "Admin %s vam je Aktivirao Donatorski paket (BOJE)", ImeIgraca( playerid ) );
		SendInfoMessage( playerid, "Aktivirao si Donatorski paket (BOJE) igracu %s", ImeIgraca( ID ) );
		SavePlayer( ID );
	}
	else if( PlayerInfo[ ID ][ xDBO ] )
	{
		PlayerInfo[ ID ][ xDBO ] = false;
		SetPlayerColor( playerid, 0xFFFFFF00 );
		SendInfoMessage( ID, "Admin %s vam je deaktivirao Donatorski paket (BOJE)", ImeIgraca( playerid ) );
		SendInfoMessage( playerid, "Deaktivirao si Donatorski paket (BOJE) igracu %s", ImeIgraca( ID ) );
		SavePlayer( ID );
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:ah( playerid, params[] )
{
	new DialogStrgEx1[ 3072 ];
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"TEST ADMIN | "col_white" /ah /a /ao /aduty /goto /gethere /pm /fv /slap /kick /ban /jetpack /aport /lp /cc /rtc /pweapons\n");
			strcat( DialogStrgEx1, ""col_balkanstory"TEST ADMIN | "col_white" /rv /nick /freeze /unfreeze /odbrojavanje /utisani /trazeni /maskirani /zatvoreni /dboja /portaj /cjanim\n\
				"col_balkanstory"TEST ADMIN | "col_white" /alton /altoff /vehinfo \n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 2 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 1 | "col_white" /ah /a /ao /aduty /goto /gethere /pm /fv /slap /kick /ban /jetpack /aport /lp /cc\n");
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 1 | "col_white" /rtc /zatvori /offzatvori /ukloniradio /skloniblokade /pweapons\n");
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 1 | "col_white" /nick /spec /specoff /freeze /unfreeze /odbrojavanje /utisani /trazeni /maskirani /zatvoreni\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 3 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 2 | "col_white" /ubij /listavozila /neaktivnost /aktivnostigraca /proverifirmu /area /offarea\n");
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 2 | "col_white" /vreme /tod /rac /mute /unmute /spawn\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 4 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 3 | "col_white" /vremenskiban /vremenskiunban /sethp /setarmour /setwc /setglad /skiniorgkaznu /mark /gotomark\n");
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 3 | "col_white" /warn /makniwarn /rtcveh /proveriidvozila /gotocar /getcar\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 5 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 4 | "col_white" /entercar /setjob /aupali /healall /aclearwl /setint /setvw /vozilazaaukciju /setskin\n");
			strcat( DialogStrgEx1, ""col_balkanstory"ADMIN LEVEL 4 | "col_white" /promenipol /banip\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 6 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD ADMIN | "col_white" /adajdozvolu /proverarada /posaljinatut /skinisatuta /multiacc /offmultiacc /richlist\n");
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD ADMIN | "col_white" /fine /spisakclanova /offizbaciclana /ubaciclana /napunivozila /ocistislot /dajdja\n");
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD ADMIN | "col_white" /ekreiraj /eunisti /startevent /stopevent /ek /evozaci /rpplus /rpminus\n");
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD ADMIN | "col_white" /frezzeall /unfrezzeall /muteall /unmuteall /gethereall /fchat /razvedi\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"DIREKTOR | "col_white" /resetrob /dajlidera /dajgm /smijenigm /dajpromotera /smijenipromotera /unbanip\n");
			strcat( DialogStrgEx1, ""col_balkanstory"DIREKTOR | "col_white" /nosms /promeniadminkod /trenutnekordinate /tunecar /nitro\n");
			strcat( DialogStrgEx1, ""col_balkanstory"DIREKTOR | "col_white" /edit /dopustipromenuimena /togreport /togpomoc /togw /resetujinv /dajoruzje\n");
			strcat( DialogStrgEx1, ""col_balkanstory"DIREKTOR | "col_white" /proveriinv /dopuniresurse /ddt /culicu /delulicu /crent /delrent\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1338 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"A - 1338 | "col_white" /unprisonall /kickall /dajadmina /maknisastatsa /offsmjenigm /oport /gmport\n");
			strcat( DialogStrgEx1, ""col_balkanstory"A - 1338 | "col_white" /izracunajorgslotove /jobpanel /adresa /dajsvima /asport /asbvozilo\n");
			strcat( DialogStrgEx1, ""col_balkanstory"A - 1338 | "col_white" /garagesave /papagaj /dajvipa /delateacc /setstat /hidenames /shownames /xgoto\n");
			strcat( DialogStrgEx1, ""col_balkanstory"A - 1338 | "col_white" /crash /specijalnoime /passwordigraca /mogucspam /dajadmina /smjeniadmina\n\n");
		}
		if( PlayerInfo[ playerid ][ xAdmin ] >= 1339 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"VLASNIK | "col_white" /aktivirajpoklone /dajnovac /pomerilokaciju /dajsrvrank /rl /saveveh /bunnyhop /ostalieventi\n");
			strcat( DialogStrgEx1, ""col_balkanstory"VLASNIK | "col_white" /1 /rokniupdate /donatorslot /offsmjeniadmina /dajbhd /dajrconadmina\n\n");
		}


		ShowPlayerDialog( playerid, dialog_HELP, DSMSG, "Admin Komande", DialogStrgEx1, "Uredu", "" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:saveveh(playerid,params[])
{
	if(PlayerInfo[playerid][xAdmin] != 1339) return greska(playerid,"Samo owneri servera!");
	if(!IsPlayerInAnyVehicle(playerid)) return greska(playerid,"Nisi u vozilu koje bi sacuvao!");
	new vehid = GetPlayerVehicleID(playerid);
	SaveVehicle(vehid);
	SendInfoMessage(playerid,"Uspjesno si sacuvao statistiku vozila!");
	return 1;
}
CMD:papagaj(playerid,params[])
{
	if(PlayerInfo[playerid][xAdmin] < 1338) return GRESKA(playerid, "Niste ovlasteni za upotrebu ove komande.");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id;
	if( sscanf( params, "i", id ) )
	{
		SendUsageMessage( playerid, "/papagaj [ ID zeljenog igraca ]");
		return 1;
	}
	if( id == IPI ) return GRESKA(playerid, "Taj igrac nije na serveru!");
	PlayerInfo[id][xPapagaj] = 1;
	
	SendInfoMessage(id, "Dobili ste papagaja! Kucajte /odjeca da ga postavite na sebe!");
	SendInfoMessage(playerid, "Igacu %s ste dali papagaja.",ImeIgraca(id));

	return 1;
}

CMD:alton(playerid,params[])
{
	if(PlayerInfo[playerid][xAdmin] == 0) return GRESKA(playerid, "Niste ovlasteni za upotrebu ove komande.");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	scminfo(playerid, "Ukljucio si sebi ALT chat.");
	TogglePlayerAltChat(playerid, true);
	scmalt[playerid]("Alt chat ukljucen!");
	return 1;
}

CMD:altoff(playerid,params[])
{
	if(PlayerInfo[playerid][xAdmin] == 0) return GRESKA(playerid, "Niste ovlasteni za upotrebu ove komande.");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	scminfo(playerid, "Iskljucio si ALT chat.");
	TogglePlayerAltChat(playerid, false);
	return 1;
}
/////////////////////////////////BH////////////////////////////////////
#if defined wsalkrhg34543
xd
#endif
BHkraj( playerid ); public BHkraj( playerid )
{
	BunnyHop[ playerid ] = 0;
	StopLoopingAnim(playerid);
	TogglePlayerControllable( playerid, 1);
	ClearAnimations( playerid );
	BunnyHopPokusaji[playerid] = 0;
	SendInfoMessage(playerid,"Odmorio si se, mozes nastaviti dalje.");
}
CMD:bunnyhop(playerid, params[])
{
	if(PlayerInfo[playerid][xAdmin] < 1339) return greska(playerid,"Nisi owner.");
	SendInfoMessage(playerid,"Idete na /server i odaberite 'Anti - Bunny Hop' opciju.");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dajbhd(playerid, params[]) {
	if(PlayerInfo[playerid][xAdmin] != 1339) return GRESKA(playerid, "Nisi vlasnik (AL. 1339), ne mozes ti ovo kontrolisati!");
	new id;
	if( sscanf( params, "i", id ) )
	{
		SendUsageMessage( playerid, "/dajbhd [ ID zeljenog igraca ]");
		return 1;
	}
	if( id == IPI ) return GRESKA(playerid, "Taj igrac nije na serveru!");
	if( PlayerInfo[id][xBHD] == 0)
	{
		SendInfoMessage(id, "Admin Vam je dao Bunny hop dozvolu, mozete raditi BH sa biciklom i na nogama");
		SendInfoMessage(playerid, "Dali ste igracu %s BH dozvolu!", ImeIgraca(id));
		PlayerInfo[id][xBHD] = 1;
	}
	else if( PlayerInfo[id][xBHD] == 1)
	{
		SendInfoMessage(id, "Admin Vam je oduzeo Bunny hop dozvolu!");
		SendInfoMessage(playerid, "Uzeli ste igracu %s BH dozvolu!", ImeIgraca(id));
		PlayerInfo[id][xBHD] = 0;
	}
	return 1;
}/*
CMD:promoterhelp( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 )
	{
		SendClientMessagee( playerid, -1, ""col_balkanstory"|| PROMOTER KOMANDE || "col_white"/pc /pport /promoterspawn /fixveh /flip /pm /nitro /pgoto");
		SendClientMessagee( playerid, -1, ""col_balkanstory"|| PROMOTER KOMANDE || "col_white"/dis /fb /insta /pduty /yt /for");
		SendClientMessagee( playerid, -1, ""col_balkanstory"|| VODJA PROMOTERA || "col_white"/dajpromotera /po /cc /gethere /kill /pkick - Uzivajte!");
		SendClientMessagee( playerid, -1, ""col_balkanstory"|| VODJA PROMOTERA || "col_white" /mute /unmute /pspec /pspecoff /he /arm - Uzivajte!");
		SendClientMessagee( playerid, -1, ""col_balkanstory"|| VODJA PROMOTERA || "col_white"/pss - Uzivajte!");
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}*/
CMD:promoterhelp(playerid,params[])
{
	new DialogStrgEx1[ 3072 ];
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 )
	{
		if( PlayerInfo[ playerid ][ xPromoter ] >= 1 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"PROMOTER LVL 1 | "col_white" /pc /pport /promoterspawn /fixveh /flip /pm /nitro /pgoto\n");
			strcat( DialogStrgEx1, ""col_balkanstory"PROMORER LVL 1 | "col_white" /dis /fb /insta /yt /for /pduty\n\n");
		}
		if( PlayerInfo[ playerid ][ xPromoter ] >= 2 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"PROMOTER HEAD LVL | "col_white" /dajpromotera /po /cc /gethere /kill /pkick\n");
			strcat( DialogStrgEx1, ""col_balkanstory"PROMOTER HEAD LVL | "col_white" /mute /unmute /pspec /pspecoff /he /arm\n");
			strcat( DialogStrgEx1, ""col_balkanstory"PROMOTER HEAD LVL | "col_white" /pss\n\n");
		}
		ShowPlayerDialog( playerid, dialog_HELP, DSMSG, "Promoter komande", DialogStrgEx1, "Uredu", "" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:he(playerid, params[])
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2 ) {
		Dimi_SetPlayerHealth(playerid, 100);
		SendInfoMessage(playerid, "Napunio si svoje helte - zabranjeno je spamati sa ovim!");
	}
	else return GRESKA(playerid, "Ti nisi vodja promotera!");
	return 1;
}
CMD:arm(playerid, params[])
{
	if( PlayerInfo[ playerid ][ xPromoter ] == 2 ) {
		Dimi_SetPlayerArmour(playerid, 100);
		SendInfoMessage(playerid, "Napunio si svoj armor - zabranjeno je spamati sa ovim!");
	}
	else return GRESKA(playerid, "Ti nisi vodja promotera!");
	return 1;
}
CMD:dis( playerid, params[] )
{
	if(ServerInfo[Reklamiranje] == 0) return greska(playerid,"Reklamiranje je trenutno onemoguceno!");
	if(Reklamirao[playerid] == true) return GRESKA(playerid, "Vec ste reklamirali, zabranjeno je spamovanje sa ovom komandom!");
	if(PDuty[playerid] == false) return GRESKA(playerid, "Nisi promoter na duznosti!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, ""SERVERBOJA_BJELA"Usutkani ste od strane admina - ne mozete sada reklamirati!");
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		new reklama[300];
		format(reklama, sizeof(reklama), ""SERVERBOJA_BJELA"Reklamu postavio: %s", ImeIgraca(playerid));
		SCMA(playerid, ""SERVERBOJA_AQUA"========| OBAVJESTENJE |========");
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_BJELA"Dragi igraci, pozivamo Vas");
		SCMA(playerid, ""SERVERBOJA_BJELA"na nas Discord sever - uzivajte!");
		SCMA(playerid, ""SERVERBOJA_PLAVA"=== /forum > Discord ===");
		SCMA(playerid, reklama);
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_AQUA"================================");
		SetTimerEx( "DRKANJE", 20000, false, "i", playerid );
		SendSrwMessage(playerid, "Reklamirali ste i dobili 100$ kao marketing tim platu!");
		DajIgracuNovac(playerid, 100);
		Reklamirao[playerid] = true;
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:for( playerid, params[] )
{
	if(ServerInfo[Reklamiranje] == 0) return greska(playerid,"Reklamiranje je trenutno onemoguceno!");
	if(Reklamirao[playerid] == true) return GRESKA(playerid, "Vec ste reklamirali, zabranjeno je spamovanje sa ovom komandom!");
	if(PDuty[playerid] == false) return GRESKA(playerid, "Nisi promoter na duznosti!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, ""SERVERBOJA_BJELA"Usutkani ste od strane admina - ne mozete sada reklamirati!");
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		new reklama[300];
		format(reklama, sizeof(reklama), ""SERVERBOJA_BJELA"Reklamu postavio: %s", ImeIgraca(playerid));
		SCMA(playerid, ""SERVERBOJA_AQUA"========| OBAVJESTENJE |========");
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_BJELA"Dragi igraci, molimo Vas da se");
		SCMA(playerid, ""SERVERBOJA_BJELA"registrujete i na nasem forumu! Hvala.");
		SCMA(playerid, ""SERVERBOJA_PLAVA"=== /forum ===");
		SCMA(playerid, reklama);
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_AQUA"================================");
		SetTimerEx( "DRKANJE", 20000, false, "i", playerid );
		SendSrwMessage(playerid, "Reklamirali ste i dobili 100$ kao marketing tim platu!");
		DajIgracuNovac(playerid, 100);
		Reklamirao[playerid] = true;
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:insta( playerid, params[] )
{
	if(ServerInfo[Reklamiranje] == 0) return greska(playerid,"Reklamiranje je trenutno onemoguceno!");
	if(Reklamirao[playerid] == true) return GRESKA(playerid, "Vec ste reklamirali, zabranjeno je spamovanje sa ovom komandom!");
	if(PDuty[playerid] == false) return GRESKA(playerid, "Nisi promoter na duznosti!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, ""SERVERBOJA_BJELA"Usutkani ste od strane admina - ne mozete sada reklamirati!");
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		new reklama[300];
		format(reklama, sizeof(reklama), ""SERVERBOJA_BJELA"Reklamu postavio: %s", ImeIgraca(playerid));
		SCMA(playerid, ""SERVERBOJA_AQUA"========| OBAVJESTENJE |========");
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_BJELA"Dragi igraci, zapratite nas");
		SCMA(playerid, ""SERVERBOJA_BJELA"na nasem Instagramu - hvala unaprijed!");
		SCMA(playerid, ""SERVERBOJA_PLAVA"===    @novaera_samp    ===");
		SCMA(playerid, reklama);
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_AQUA"================================");
		SetTimerEx( "DRKANJE", 20000, false, "i", playerid );
		SendSrwMessage(playerid, "Reklamirali ste i dobili 100$ kao marketing tim platu!");
		DajIgracuNovac(playerid, 100);
		Reklamirao[playerid] = true;
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:fb( playerid, params[] )
{
	if(ServerInfo[Reklamiranje] == 0) return greska(playerid,"Reklamiranje je trenutno onemoguceno!");
	if(Reklamirao[playerid] == true) return GRESKA(playerid, "Vec ste reklamirali, zabranjeno je spamovanje sa ovom komandom!");
	if(PDuty[playerid] == false) return GRESKA(playerid, "Nisi promoter na duznosti!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, ""SERVERBOJA_BJELA"Usutkani ste od strane admina - ne mozete sada reklamirati!");
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		new reklama[300];
		format(reklama, sizeof(reklama), ""SERVERBOJA_BJELA"Reklamu postavio: %s", ImeIgraca(playerid));
		SCMA(playerid, ""SERVERBOJA_AQUA"========| OBAVJESTENJE |========");
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_BJELA"Postovani igraci, zapratite nas");
		SCMA(playerid, ""SERVERBOJA_BJELA"na nasem Facebooku - hvala unaprijed!");
		SCMA(playerid, ""SERVERBOJA_PLAVA"===     ( Nova Era RP )     ===");
		SCMA(playerid, reklama);
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_AQUA"================================");
		SetTimerEx( "DRKANJE", 20000, false, "i", playerid );
		SendSrwMessage(playerid, "Reklamirali ste i dobili 100$ kao marketing tim platu!");
		DajIgracuNovac(playerid, 100);
		Reklamirao[playerid] = true;
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:yt( playerid, params[] )
{
	if(ServerInfo[Reklamiranje] == 0) return greska(playerid,"Reklamiranje je trenutno onemoguceno!");
	if(Reklamirao[playerid] == true) return GRESKA(playerid, "Vec ste reklamirali, zabranjeno je spamovanje sa ovom komandom!");
	if(PDuty[playerid] == false) return GRESKA(playerid, "Nisi promoter na duznosti!");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, ""SERVERBOJA_BJELA"Usutkani ste od strane admina - ne mozete sada reklamirati!");
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1 )
	{
		new reklama[300];
		format(reklama, sizeof(reklama), ""SERVERBOJA_BJELA"Reklamu postavio: %s", ImeIgraca(playerid));
		SCMA(playerid, ""SERVERBOJA_AQUA"========| OBAVJESTENJE |========");
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_BJELA"Postovani igraci, pretplatite se i");
		SCMA(playerid, ""SERVERBOJA_BJELA"na nasem YT kanalu - hvala unaprijed!");
		SCMA(playerid, ""SERVERBOJA_PLAVA"===    (   - NE:RP -   )    ===");
		SCMA(playerid, reklama);
		SCMA(playerid, "");
		SCMA(playerid, ""SERVERBOJA_AQUA"================================");
		SetTimerEx( "DRKANJE", 20000, false, "i", playerid );
		SendSrwMessage(playerid, "Reklamirali ste i dobili 100$ kao marketing tim platu!");
		DajIgracuNovac(playerid, 100);
		Reklamirao[playerid] = true;
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
CMD:pduty(playerid, params[]) {
	if( PlayerInfo[ playerid ][ xPromoter ] >= 1 )
	{
		if(PDuty[playerid] == false)
		{
			new string[300];
			format(string, sizeof(string), ""col_balkanstory"P | DUTY: (( {FFFFFF}Promoter "col_balkanstory"%s {ffffff}je na duznosti kao clan marketing tima! "col_balkanstory"))", ImeIgraca(playerid));
			SendClientMessageToAll(playerid, string);
			PDuty[playerid] = true;
			if(PlayerInfo[playerid][xPromoter] == 2) {
			PlayerInfo[playerid][xTogn] = 1;
			}//SetPlayerAttachedObject( playerid, OBJECT_SLOT_BACKPACK, 3026, 1, -0.134207, -0.093048, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); }
		}
		else if(PDuty[playerid] == true)
		{
			new string[300];
			format(string, sizeof(string), ""col_balkanstory"P | DUTY: (( {FFFFFF}Promoter "col_balkanstory"%s {ffffff}vise nije na duznosti! "col_balkanstory"))", ImeIgraca(playerid));
			SendClientMessageToAll(playerid, string);
			PDuty[playerid] = false;
			if(PlayerInfo[playerid][xPromoter] == 2) {
			PlayerInfo[playerid][xTogn] = 0;
			/*RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BACKPACK );*/ }
		}
	}
	else {
		GRESKA(playerid, "Nisi promoter.");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:ranac(playerid,params[]){
	//SetPlayerAttachedObject( playerid, OBJECT_SLOT_BACKPACK, 3026, 1, -0.134207, -0.093048, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	return 1;
}*/
CMD:promoterspawn( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSpawn ] == SPAWN_PROMOTER ) return GRESKA( playerid, "Spawn ti je vec postavljen na promotersku bazu!");
	if( PlayerInfo[ playerid ][ xPromoter ] == 0 ) return GRESKA( playerid, "Ne mozete staviti promoterski spawn jer niste promoter.");
	PlayerInfo[ playerid ][ xSpawn ] = SPAWN_PROMOTER;
	SendClientMessagee( playerid, BELA, "Od sada cete se spawnati u promoter bazi.");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:vipspawn( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSpawn ] == SPAWN_VIP ) return GRESKA( playerid, "Spawn ti je vec postavljen na VIP bazu!");
	if( PlayerInfo[ playerid ][ xVIPLevel ] == 0 ) return GRESKA( playerid, "Ne mozete staviti ovaj spawn jer niste VIP!");
	PlayerInfo[ playerid ][ xSpawn ] = SPAWN_VIP;
	SendClientMessagee( playerid, BELA, "Od sada cete se spawnati u VIP bazi.");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:gmh( playerid, params[] )
{
	new DialogStrgEx1[ 3072 ];
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 )
	{
		if( PlayerInfo[ playerid ][ xHelper ] >= 1 || PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"_________________________________________________________________________________\n");
			strcat( DialogStrgEx1, ""col_balkanstory"GM LEVEL 1 | "col_white" /gmduty /gmport /pitanja /pm /hodg /g /e /kick /Slap /gmo\n");
			strcat( DialogStrgEx1, ""col_balkanstory"GM LEVEL 1 | "col_white"/fv /Spec /specoff /unfreeze /goto\n");

		}
		if( PlayerInfo[ playerid ][ xHelper ] >= 2 || PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"_________________________________________________________________________________\n");
			strcat( DialogStrgEx1, ""col_balkanstory"GM LEVEL 2 | "col_white" /freeze /rtc /proveriidvozila /cc\n");
			
		}
		if( PlayerInfo[ playerid ][ xHelper ] >= 3 || PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"_________________________________________________________________________________\n");
			strcat( DialogStrgEx1, ""col_balkanstory"GM LEVEL 3 | "col_white" /neaktivnost /Rtcveh /mute /provjerioruzje /skloniblokade\n");
		}
		if( PlayerInfo[ playerid ][ xHelper ] >= 4 || PlayerInfo[ playerid ][ xAdmin ] >= 1337 )
		{
			strcat( DialogStrgEx1, ""col_balkanstory"_________________________________________________________________________________\n");
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD GM | "col_white" /mark /gotomark /zatvoreni /utisani /maskirani  /ubij /zatvori\n");
			strcat( DialogStrgEx1, ""col_balkanstory"HEAD GM | "col_white" /Sethp /Setarmor /unmute\n");
		}

		ShowPlayerDialog( playerid, dialog_HELP, DSMSG, "GameMaster Komande", DialogStrgEx1, "Uredu", "" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dizajnerhelp( playerid, params[] )
{
	new DialogStrgEx1[ 300 ];
	if( PlayerInfo[ playerid ][ xAdmin ] >= 1337 || PlayerInfo[ playerid ][ xSkriptaRank ] == 2)
	{
		strcat( DialogStrgEx1, ""col_balkanstory"_________________________________________________________________________________\n");
		strcat( DialogStrgEx1, ""col_balkanstory"DIZAJNER | "col_white" /mark /gotomark /rtcveh /fv /goto /gethere /vskin\n");
		strcat( DialogStrgEx1, ""col_balkanstory"DIZAJNER| "col_white" /zatvori /aport\n");
		ShowPlayerDialog( playerid, dialog_HELP, DSMSG, "Dizajner Komande", DialogStrgEx1, "Uredu", "" );
	} else GRESKA( playerid, "Niste ovlasteni za koristenje ove komande!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
forward ZonaZauzmi( playerid );
public ZonaZauzmi( playerid )
{
	new string[ 128 ];
	if( IsPlayerInDynamicArea( playerid, gZoneInfo[ gZone_ID[ playerid ] ][ gZoneRectAngle ] ) )
	{
	
		if( gZone_Time[ playerid ] > 0 )
		{
			format( string, sizeof( string ), "~w~Ostanite u teritoriji jos ~r~%d ~w~sekundi", gZone_Time[ playerid ] );
			announcement( playerid, string, 1000, 4 ) ;
			gZone_Time[ playerid ]--;
		}
		else if( gZone_Time[ playerid ] == 0 )
		{
			GangZoneStopFlashForAll( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneID ] );
			GangZoneHideForAll( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneID ] );
			gZone_Time[ playerid ] = 0;
			Dimi_KillTimer( gZone_Timer[ playerid ] );
		
			OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xFFC801C8, "Vasa organizacija je prosirila svoju vladavinu na jos jednu teritoriju." );
		
			if( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ] != -1 )
			{
				format( string, sizeof( string ), "[TERITORIJA] Suparnicka organizacija %s je preuzela jednu od vasih teritorija.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oName ] );
				OrgPoruka( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ], 0x95b4a2FF, string );
				format( string, sizeof( string ), "[TERITORIJA] Clan %s je zauzeo teritoriju koju je kontrolisala organizacija %s.", ImeIgraca( playerid ), OI[ gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ] ][ oName ] );
				OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, string );
			}
			else if( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ] == -1 )
			{
				format( string, sizeof( string ), "[TERITORIJA] Clan %s je zauzeo teritoriju koja je bila slboodna.", ImeIgraca( playerid ) );
				OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, string );
			}
			gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ] = PlayerInfo[ playerid ][ xClan ];
			gZoneInfo[ gZone_ID[ playerid ] ][ gZoneTaken ] = true;
			
			new stringic[ 24 ];
			format( stringic, sizeof( stringic ), "%s", OI[ PlayerInfo[ playerid ][ xClan ] ][ oColor ] );
			strmid( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneColor ], stringic, 0, strlen( stringic ), 255 );
			format( stringic, sizeof( stringic ), "0x%s66", gZoneInfo[ gZone_ID[ playerid ] ][ gZoneColor ] );
			GangZoneShowForAll( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneID ], HexToInt( stringic ) );
			GZone_Refresh( gZone_ID[ playerid ] );
			gZoneInfo[ gZone_ID[ playerid ] ][ gZoneTime ] = 30;
			GZone_Save( gZone_ID[ playerid ] );
			PostaviWanted( playerid, "Zauzimanje Teritorija", "Nepoznati", 6 );
			gZone_ID[ playerid ] = -1;
		}
	}
	else
	{
		announcement( playerid, "~w~Otisli ste iz teritorije!", 1000, 4) ;
		GangZoneStopFlashForAll( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneID ] );
		gZone_Time[ playerid ] = 0;
		Dimi_KillTimer( gZone_Timer[ playerid ] );
		PostaviWanted( playerid, "Zauzimanje Teritorija", "Nepoznati", 6 );
		if( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ] != -1 )
		{
			format( string, sizeof( string ), "[TERITORIJA] Suparnicka organizacija %s je napustila teritoriju i prestala sa preuzimanjem.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oName ] );
			OrgPoruka( gZoneInfo[ gZone_ID[ playerid ] ][ gZoneGangID ], 0x95b4a2FF, string );
		}
		format( string, sizeof( string ), "[TERITORIJA] Clan %s je napustio teritoriju i prestao sa zauzimanjem.", ImeIgraca( playerid ) );
		OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, string );
		gZoneInfo[ gZone_ID[ playerid ] ][ gZoneTime ] = 30;
		GZone_Save( gZone_ID[ playerid ] );
		gZone_ID[ playerid ] = -1;
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
forward ZauzimanjeFirme( playerid );
public ZauzimanjeFirme( playerid )
{
	new string[ 128 ];
	if( uFirmi[ playerid ] != -1 )
	{
		if( zauzimanje_firme_Vreme[ playerid ] > 0 )
		{
			format( string, sizeof( string ), "~w~Ostanite u firmi jos ~r~%d ~w~sekundi", zauzimanje_firme_Vreme[ playerid ] );
			announcement( playerid, string, 1000, 4 ) ;
			zauzimanje_firme_Vreme[ playerid ]--;
		}
		else if( zauzimanje_firme_Vreme[ playerid ] == 0 )
		{
			new bussinesID = zauzimanje_firme_ID[ playerid ];
			if( IsPlayerConnected( GetPlayerIdFromName( BussinesInfo[ bussinesID ][ bOwner ] ) ) )
			{
				SendClientMessagee( playerid, ZUTA, "MAFIJA OD SADA REKETIRA VASU FIRMU 7 DANA.");
			}
			zauzimanje_firme_Vreme[ playerid ] = 0;
			Dimi_KillTimer( zauzimanje_firme_Timer[ playerid ] );
			format( string, sizeof( string ), "[ZAUZIMANJE] Vasa organizacija sada ima reket nad firmom %s.", BussinesInfo[ bussinesID ][ bName ] );
			OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xFFC801C8, string );
			OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xFFC801C8, "[ZAUZIMANJE] Sada ce vasa organizacija dobijati 20posto od zarade, 7 dana." );
			BussinesInfo[ bussinesID ][ bReket ] = PlayerInfo[ playerid ][ xClan ];
			BussinesInfo[ bussinesID ][ bReketTime ] = gettime();
			SaveBussines( bussinesID );
			Bussines_Refresh( bussinesID );
			PostaviWanted( playerid, "Zauzimanje Firme", "Nepoznati", 6 );
			zauzimanje_firme_ID[ playerid ] = -1;
		
		}
	}
	else
	{
		new bussinesID = zauzimanje_firme_ID[ playerid ];
		zauzimanje_firme_Vreme[ playerid ] = 0;
		Dimi_KillTimer( zauzimanje_firme_Timer[ playerid ] );
		PostaviWanted( playerid, "Zauzimanje Firme", "Nepoznati", 6 );
		format( string, sizeof( string ), "[ZAUZIMANJE] Clan %s je napustio firmu i prestao sa zauzimanjem.", ImeIgraca( playerid ) );
		OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, string );
		BussinesInfo[ bussinesID ][ bReket ] = -1;
		BussinesInfo[ bussinesID ][ bReketTime ] = 0;
		SaveBussines( bussinesID );
		Bussines_Refresh( bussinesID );
		zauzimanje_firme_ID[ playerid ] = -1;
	}

	return true;
}
/////////////////////////////////////////////////////////////////////////////////
forward ZauzimanjeFirme2( playerid );
public ZauzimanjeFirme2( playerid )
{
	new string[ 128 ];
	new bussinesID = zauzimanje_firme_ID[ playerid ];
	if( IsPlayerInRangeOfPoint( playerid, 100.0, BussinesInfo[ bussinesID ][ bEnterX ], BussinesInfo[ bussinesID ][ bEnterY ], BussinesInfo[ bussinesID ][ bEnterZ ] ) )
	{
		if( zauzimanje_firme_Vreme[ playerid ] > 0 )
		{
			format( string, sizeof( string ), "~w~Ostanite pored firme jos ~r~%d ~w~sekundi", zauzimanje_firme_Vreme[ playerid ] );
			announcement( playerid, string, 1000, 4 ) ;
			zauzimanje_firme_Vreme[ playerid ]--;
		}
		else if( zauzimanje_firme_Vreme[ playerid ] == 0 )
		{
			if( IsPlayerConnected( GetPlayerIdFromName( BussinesInfo[ bussinesID ][ bOwner ] ) ) )
			{
				SendClientMessagee( playerid, ZUTA, "MAFIJA OD SADA REKETIRA VASU FIRMU 7 DANA.");
			}
			zauzimanje_firme_Vreme[ playerid ] = 0;
			Dimi_KillTimer( zauzimanje_firme_Timer[ playerid ] );
			format( string, sizeof( string ), "[ZAUZIMANJE] Vasa organizacija sada ima reket nad firmom %s.", BussinesInfo[ bussinesID ][ bName ] );
			OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xFFC801C8, string );
			OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0xFFC801C8, "[ZAUZIMANJE] Sada ce vasa organizacija dobijati 20posto od zarade, 7 dana." );
			BussinesInfo[ bussinesID ][ bReket ] = PlayerInfo[ playerid ][ xClan ];
			BussinesInfo[ bussinesID ][ bReketTime ] = gettime();
			SaveBussines( bussinesID );
			Bussines_Refresh( bussinesID );
			PostaviWanted( playerid, "Zauzimanje Firme", "Nepoznati", 6 );
			zauzimanje_firme_ID[ playerid ] = -1;

		}
	}
	else
	{
		zauzimanje_firme_Vreme[ playerid ] = 0;
		Dimi_KillTimer( zauzimanje_firme_Timer[ playerid ] );
		PostaviWanted( playerid, "Zauzimanje Firme", "Nepoznati", 6 );
		format( string, sizeof( string ), "[ZAUZIMANJE] Clan %s je napustio firmu i prestao sa zauzimanjem.", ImeIgraca( playerid ) );
		OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, string );
		BussinesInfo[ bussinesID ][ bReket ] = -1;
		BussinesInfo[ bussinesID ][ bReketTime ] = 0;
		SaveBussines( bussinesID );
		Bussines_Refresh( bussinesID );
		zauzimanje_firme_ID[ playerid ] = -1;
	}

	return true;
}

/////////////////////////////////////////////////////////////////////////////////
CMD:savezi( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	for( new id = 1; id < MAX_ORG; id++)
	{
		if( OI[ id ][ oTip ] == ORG_TIP_BANDA || OI[ id ][ oTip ] == ORG_TIP_MAFIJA  || OI[ id ][ oTip ] == ORG_TIP_SR || OI[ id ][ oTip ] == ORG_TIP_MC )
		{
			if( OI[ id ][ oSavez ] == -1 )
			{
				format( globalstring, sizeof( globalstring ), ""col_white"%s "col_orange"nema saveznika.\n", OI[ id ][ oName ] );
				strcat( DialogStrgEx, globalstring );
			}
			else
			{
				format( globalstring, sizeof( globalstring ), ""col_white"%s "col_orange"u savezu sa "col_white"%s.\n", OI[ id ][ oName ], OI[ OI[ id ][ oSavez ] ][ oName ] );
				strcat( DialogStrgEx, globalstring );
			}
		}
	}
	ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));

	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:savezhelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Savez HELP | "col_white"/savez /prekinisavez /sa /savezi" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:prekinisavez( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLider ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!(Samo Lider)." );
	if( GetFactionType( playerid ) == ORG_TIP_PD ||
		GetFactionType( playerid ) == ORG_TIP_MD ||
		GetFactionType( playerid ) == ORG_TIP_CNN ||
		GetFactionType( playerid ) == ORG_TIP_HITM ||
		GetFactionType( playerid ) == ORG_TIP_ELEK ||
		GetFactionType( playerid ) == ORG_TIP_TAXI )
	{
		GRESKA( playerid, "Vasa organizacija nema razloga prekidati saveze.");
		return 1;
	}

	if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oSavez ] == -1 ) return GRESKA( playerid, "Vasa organizacija nije u savezu." );

	new savezOrga = OI[ PlayerInfo[ playerid ][ xClan ] ][ oSavez ];

	if( savezOrga != -1 )
	{
		OI[ savezOrga ][ oSavez ] = -1;
		SaveOrganization( savezOrga );
	}
	OI[ PlayerInfo[ playerid ][ xClan ] ][ oSavez ] = -1;
	SaveOrganization( PlayerInfo[ playerid ][ xClan ] );
	SendInfoMessage( playerid, "Prekinuli ste savez sa drugom organizacijom." );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:sa( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xZatvor ] != 0 ) return GRESKA( playerid, "Ne mozes koristi ovu komandu dok si u jailu." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete pisati dok ste u zatvoru / ALKATRAZ.");
	new poruka[ 128 ], string[ 234 ];
	if( sscanf( params, "s[128]", poruka ) ) return SendUsageMessage( playerid, "/sa [Text]");

	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( poruka, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, poruka );
			AdminPoruka( 0x808000AA, globalstring );
		}
	}
	
	if( PlayerInfo[ playerid ][ xLider ] > 0 || PlayerInfo[ playerid ][ xClan ] > 0 )
	{
		if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oSavez ] == -1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!, jer nemate sklopljen savez." );
		if( PlayerInfo[ playerid ][ xRank ] == 5 ) format(string, sizeof string, "(%s) %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], ImeIgraca( playerid ), poruka );
		else if( PlayerInfo[ playerid ][ xRank ] == 6 ) format(string, sizeof string, "(%s) %s: "col_white"%s.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oPreFix ], ImeIgraca( playerid ), poruka );
		else return GRESKA( playerid, "Samo rank 5 i 6 mogu koristiti ovu komandu." );
		SaveZPoruka( PlayerInfo[ playerid ][ xClan ], 0x7ef2faFF, string );
		
	}
	else { GRESKA( playerid, "Niste ovlasteni za ovu komandu!" ); return true; }

	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:savez( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLider ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!(Samo Lider)." );
	if( GetFactionType( playerid ) == ORG_TIP_PD ||
		GetFactionType( playerid ) == ORG_TIP_MD ||
		GetFactionType( playerid ) == ORG_TIP_CNN ||
		GetFactionType( playerid ) == ORG_TIP_HITM ||
		GetFactionType( playerid ) == ORG_TIP_ELEK ||
		GetFactionType( playerid ) == ORG_TIP_TAXI )
	{
		GRESKA( playerid, "Vasa organizacija nema razloga sklapati saveze.");
		return 1;
	}
	
	new id;
	if( sscanf( params, "u", id ) )
	{
		SendUsageMessage( playerid, "/savez [ ID/Ime ]");
		return 1;
	}
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID igraca." );
	if( PlayerInfo[ id ][ xLider ] < 1 ) return GRESKA( playerid, "Izabrani igrac nije lider." );
	if( id == playerid ) return GRESKA( playerid, "Ne mozete sami sebi." );
	if( !IsPlayerNearPlayer( 5.0, playerid, id ) ) return GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
	
	if( GetFactionType( id ) == ORG_TIP_PD ||
		GetFactionType( id ) == ORG_TIP_MD ||
		GetFactionType( id ) == ORG_TIP_CNN ||
		GetFactionType( id ) == ORG_TIP_HITM ||
		GetFactionType( id ) == ORG_TIP_ELEK ||
		GetFactionType( id ) == ORG_TIP_TAXI )
	{
		GRESKA( playerid, "Organizacija izabranog lidera nema razloga sklapati saveze.");
		return 1;
	}
	
	if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oSavez ] != -1 ) return GRESKA( playerid, "Vasa organizacija je vec u savezu sa nekim." );
	if( OI[ PlayerInfo[ id ][ xClan ] ][ oSavez ] != -1 ) return GRESKA( playerid, "Organizacija izabranog lidera je vec u savezu sa drugom organizacijom." );
	GlobalProdaja[ id ] = playerid;
	format( globalstring, sizeof( globalstring ), ""col_white"%s\n"col_orange"Lider "col_white"%s vam je ponudio savez.", OI[ PlayerInfo[ playerid ][ xClan ] ][ oName ], ImeIgraca( playerid ) );
	ShowPlayerDialog( id, dialog_SAVEZ, DSMSG, "Zahtev za savez", globalstring, "Prihvati", "Odbij" );


	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:napravioruzje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA )
	{
		//if( inProperty[ playerid ] == -1 && inOrgInt[ playerid ] == -1 ) return GRESKA( playerid, "Morate biti u vasoj kuci/stanu/vikendici ili intu orge." );
		if(!IsPlayerInRangeOfPoint(playerid,2.0,2608.6785,-1515.3672,14.9451)) return GRESKA( playerid, "Niste kod standa na crnom trzistu!" );
		if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Ne mozes to jos, moras biti level 3+!" );
		new x_weapon[ 32 ];
		if( sscanf( params, "s[32]", x_weapon ) )
		{
			SendUsageMessage( playerid, "/napravioruzje [ oruzje ] ");
			SendUsageMessage( playerid, "knife(150) bat(100) sdpistol(1000) colt(1500) eagle(2000)");
			SendUsageMessage( playerid, "mp5(2750) shotgun(2500) ak47(3300) m4(3300) rifle(2500)");
			return true;
		}
		if(strcmp(x_weapon,"knife",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 149)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 150;
				GiveWeaponToPlayer( playerid, 4, 1);
				SendInfoMessage( playerid, "Potrosili ste 150 materijala i napravili noz!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio noz.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"bat",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 99)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 100;
				GiveWeaponToPlayer( playerid, 5, 1);
				SendInfoMessage( playerid, "Potrosili ste 100 materijala i napravili palicu!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio palicu.", ImeIgraca( playerid ) );
				PorukaRadius( 30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"sdpistol",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 999)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 1000;
				GiveWeaponToPlayer( playerid, 23, 100);
				SendInfoMessage( playerid, "Potrosili ste 1000 materijala i napravili SDPistolj!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio SDPistolj.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"colt",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 1499)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 1500;
				GiveWeaponToPlayer( playerid, 22, 125);
				SendInfoMessage( playerid, "Potrosili ste 1500 materijala i napravili Colt45!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio Colt45.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"eagle",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 1999)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 2000;
				GiveWeaponToPlayer( playerid, 24, 150);
				SendInfoMessage( playerid, "Potrosili ste 2000 materijala i napravili Desert Eagle!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio Desert Eagle.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"mp5",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 2749 )
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 2750;
				GiveWeaponToPlayer( playerid, 29, 300);
				SendInfoMessage( playerid, "Potrosili ste 2750 materijala i napravili MP5!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio MP5.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"shotgun",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 2499 )
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 2500;
				GiveWeaponToPlayer( playerid, 25, 75);
				SendInfoMessage( playerid, "Potrosili ste 2500 materijala i napravili Shotgun!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio Shotgun.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"ak47",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 3299)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 3300;
				GiveWeaponToPlayer( playerid, 30, 275);
				SendInfoMessage( playerid, "Potrosili ste 3300 materijala i napravili AK47!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio AK47.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"m4",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 3299)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 3300;
				GiveWeaponToPlayer( playerid, 31, 275);
				SendInfoMessage( playerid, "Potrosili ste 3300 materijala i napravili M4!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio M4.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else if(strcmp(x_weapon,"rifle",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xMaterijali ] > 2499)
			{
				PlayerInfo[ playerid ][ xMaterijali ] -= 2500;
				GiveWeaponToPlayer( playerid, 33, 150);
				SendInfoMessage( playerid, "Potrosili ste 2500 materijala i napravili Rifle!");
				format( globalstring, sizeof( globalstring ), "* %s je napravio Rifle.", ImeIgraca( playerid ) );
				PorukaRadius(30.0 , playerid, globalstring, LJUBICASTA );
			}
			else return GRESKA(playerid, "Nemas dovoljno materijala.");
		}
		else return GRESKA(playerid, "Pogresno ime oruzja!");
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	}
	else GRESKA( playerid, "Samo mafije." );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:svercmatsa( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA)
	{
		if( PlayerInfo[ playerid ][ xSvercer ] != 0 ) return GRESKA( playerid, "Sacekajte jos %d minuta do ponovnog sverca!", PlayerInfo[ playerid ][ xSvercer ] );

		if( !IsVehicleC1( GetPlayerVehicleID( playerid ) ) ) return GRESKA( playerid, "Niste u kombiju!" );
		CheckpointStatus[ playerid ] = 39;
		Dimi_SetPlayerCheckpoint( playerid, -2127.7300,-247.6051,35.3203, 2.0 );
		SendInfoMessage( playerid, "Mjesto preuzimanja matsa vam je oznacen na mapi!" );
		ProcesSvercanja[ playerid ] = 1;

	}
	else return GRESKA( playerid, "Samo mafije i bande!" );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:prekinisverc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA )
	{
		if( ProcesSvercanja[ playerid ] == 0 ) return GRESKA( playerid, "Niste poceli sverc materijala." );
		if( IDVozilaKojimSverca[ playerid ] != -1 ) KutijaMatsa[ IDVozilaKojimSverca[ playerid ] ] = false;
		IDVozilaKojimSverca[ playerid ] = -1;
		CheckpointStatus[ playerid ] = 0;
		Dimi_DisablePlayerCheckpoint( playerid );
		SendInfoMessage( playerid, "Zaustavili ste svercanje materijala i ponovo mozete svercati za 5 minuta!" );
		PlayerInfo[ playerid ][ xSvercer ] = 5;
		SavePlayer( playerid );
		ProcesSvercanja[ playerid ] = 0;
	}
	else return GRESKA( playerid, "Samo mafije i bande!" );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:ubacimats( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA )
	{
		if( !IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_BADGE ) ) return GRESKA( playerid, "Nemate kutiju materijala u rukama!");
		if( ProcesSvercanja[ playerid ] != 3 ) return GRESKA( playerid, "Nemate kutiju matsa u rukama!");
		new vehicleid = getPlayerNearestVehicle( playerid );
		if( KutijaMatsa[ vehicleid ] ) return GRESKA( playerid, "Ovde vec ima ubacena kutija sa materijalima." );
		new Float:vehPos[ 3 ];
		getPosBehindVehicle( vehicleid, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ], 0.0 );
		if( !IsPlayerInRangeOfPoint( playerid, 2, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ] ) ) return GRESKA( playerid, "Morate biti pored prtljaznika." );
		if( !IsVehicleC1( vehicleid ) ) return GRESKA( playerid, "Mozete samo u kombi da ubacite mats!" );
		ProcesSvercanja[ playerid ] = 4;
		RemovePlayerAttachedObject( playerid, OBJECT_SLOT_BADGE );
		Dimi_SetPlayerCheckpoint(playerid, 2616.5786,-1509.4080,15.4831, 2.0 );
		CheckpointStatus[ playerid ] = 39;
		IDVozilaKojimSverca[ playerid ] = vehicleid;
		KutijaMatsa[ vehicleid ] = true;
		SendInfoMessage( playerid, "Ubacili ste paket materijala u vase vozilo!");
		SendInfoMessage( playerid,  "Sada odvezite materijale do crnog trzista i tamo ih istovarite!" );
		SendInfoMessage( playerid,  "Kada stignete do crnog trzista izvadite materijale iz vozila /izvadimats !" );
		ApplyAnimation( playerid, "CARRY", "putdwn", 3.0, 0, 0, 0, 0, 0 );
	}
	else return GRESKA( playerid, "Samo mafije i bande!" );
	return true;

}
/////////////////////////////////////////////////////////////////////////////////
CMD:izvadimats( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( GetFactionType( playerid ) == ORG_TIP_MAFIJA || GetFactionType( playerid ) == ORG_TIP_BANDA )
	{
		if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_BADGE ) ) return GRESKA( playerid, "Vec imas kutiju materijala u rukama!");
		if( ProcesSvercanja[ playerid ] != 4 ) return GRESKA( playerid, "Niste ubacili kutiju materijala u kombi!");
		new vehicleid = getPlayerNearestVehicle( playerid );
		if( !KutijaMatsa[ vehicleid ] ) return GRESKA( playerid, "Vozilo je prazno!" );
		new Float:vehPos[ 3 ];
		getPosBehindVehicle( vehicleid, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ], 0.0 );
		if( !IsPlayerInRangeOfPoint( playerid, 2, vehPos[ 0 ], vehPos[ 1 ], vehPos[ 2 ] ) ) return GRESKA( playerid, "Morate biti pored prtljaznika." );
		if( !IsVehicleC1( vehicleid ) ) return GRESKA( playerid, "Materijale mozete izvaditi samo iz kombija!" );
		ProcesSvercanja[ playerid ] = 5;
		IDVozilaKojimSverca[ playerid ] = -1;
		KutijaMatsa[ vehicleid ] = false;
		Dimi_SetPlayerCheckpoint(playerid, 2608.6785,-1515.3672,14.9451, 2.0 );
		CheckpointStatus[ playerid ] = 39;
		SetPlayerAttachedObject( playerid, OBJECT_SLOT_BADGE, 3052, 1, 0.15, 0.4, 0.0, 0.0, 90.0, 0.0, 1.0, 1.0, 1.0 );
		SendInfoMessage( playerid,  "Izvadili ste kutiju materijala sada je ostvaite kod oznacenog standa!");
		ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1 );

	}
	else return GRESKA( playerid, "Samo mafije i bande!" );
	return true;

}
/////////////////////////////////////////////////////////////////////////////////
CMD:zauzmifirmu( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLider ] < 1 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!(Samo Lider)." );
	if( GetFactionType( playerid ) != ORG_TIP_MAFIJA ) return GRESKA( playerid, "Samo mafije mogu koristiti ovu komandu." );
	if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes da zauzimas sa vozila." );
	if( PlayerInfo[ playerid ][ xZauzimanjeVreme ] != 0 ) return GRESKA( playerid, "Vec ste zauzimali, sacekajte jos %d minuta.", PlayerInfo[ playerid ][ xZauzimanjeVreme ] );
	new policajci = 0, igraci = 0, hour, minute, seconds;
	gettimeEx( hour, minute, seconds );
	FixHour( hour );
	hour = shifthour;
	new bussinesID = -1;
	if( uFirmi[ playerid ] == -1 )
	{
		if( BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_JFIRMA ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_TRAFIKA ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_POSAO ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_RENT ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_OGLAS ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_TELEKOM ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_PAYSPRAY ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_KOMUNALIJE ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_VODOVOD ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_ELEKTRANA ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_NEON ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_RODA ||
			BussinesInfo[ GetNearestBussines( playerid ) ][ bType ] == VRSTA_LUTRIJA )
		{
			bussinesID = GetNearestBussines( playerid );

			for(new i; i < MAX_PLAYERS; i++)
			{
				if( GetFactionType( i ) == ORG_TIP_PD ) policajci++;

				if( PlayerInfo[ i ][ xClan ] == PlayerInfo[ playerid ][ xClan ] && i != playerid && IsPlayerInRangeOfPoint( i, 100.0, BussinesInfo[ bussinesID ][ bEnterX ], BussinesInfo[ bussinesID ][ bEnterY ], BussinesInfo[ bussinesID ][ bEnterZ ] ) )
				{
					igraci++;
				}
			}
			if( igraci < 6 )  return GRESKA( playerid, "Moras imati bar 6 ljudi iz organizacije online pored firme." );
		}
		else return GRESKA( playerid, "Morate biti u firmi." );
	}
	else
	{
		bussinesID = uFirmi[ playerid ];
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( GetFactionType( i ) == ORG_TIP_PD ) policajci++;

			if( PlayerInfo[ i ][ xClan ] == PlayerInfo[ playerid ][ xClan ] && i != playerid && uFirmi[ i ] == uFirmi[ playerid ] )
			{
				igraci++;
			}
		}
		if( igraci < 6 )  return GRESKA( playerid, "Moras imati bar 6 ljudi iz organizacije online u firmi." );
		
	}
	if( bussinesID != -1 )
	{
		if( BussinesInfo[ bussinesID ][ bOwned ] == 0 ) return GRESKA( playerid, "Samo kupljene firme mogu da se reketiraju." );
		new time = gettime( );
		if( BussinesInfo[ bussinesID ][ bReketTime ] != 0 && ( time - BussinesInfo[ bussinesID ][ bReketTime ] ) < 604800 )
		{
			new Float:ostatak = ( 604800 - ( time - BussinesInfo[ bussinesID ][ bReketTime ] ) );
			GRESKA( playerid, "Ova firma ne moze da se zauzima jos %.0f sekundi. ", Float:ostatak );
			return 1;
		}

		if( policajci < 6 ) return GRESKA( playerid, "Ne mozete zauzimati firmu ako nema 6 policajaca online." );
		if( GetWeapon( playerid ) >= 22 && GetWeapon( playerid ) <= 40 )
		{
			if( ( hour >= 19 ) && ( hour <= 22 ) )
			{
				if( IsPlayerConnected( GetPlayerIdFromName( BussinesInfo[ bussinesID ][ bOwner ] ) ) )
				{
					SendClientMessagee( playerid, ZUTA, "MAFIJA TRAZI IZNUDU VASE ZARADE.");
					SendClientMessagee( playerid, ZUTA, "MAFIJA JE POCELA DA ZAUZIMA VASU FIRMU.");
				}
				PostaviWanted( playerid, "Zauzimanje Firme", "Nepoznati", 6 );
				PlayerInfo[ playerid ][ xZauzimanjeVreme ] = 30;
				SavePlayer( playerid );
				SendInfoMessage( playerid, "ZAPOCEO SI ZAUZIMANJE FIRME." );
				SendInfoMessage( playerid, "Moras ostati ziv sledecih 15 minuta kako bi je osvojio." );
				if( uFirmi[ playerid ] == -1 ) { SendInfoMessage( playerid, "Moras ostati u blizini firme, jer ce zauzimanje biti prekinuto."); }
				else { SendInfoMessage( playerid, "Ne smijes izaci iz firme, jer ce zauzimanje biti prekinuto."); }
				zauzimanje_firme_ID[ playerid ] = bussinesID;
				zauzimanje_firme_Vreme[ playerid ] = 900;
				if( uFirmi[ playerid ] == -1 ) { zauzimanje_firme_Timer[ playerid ] = SetTimerEx( "ZauzimanjeFirme2", 1000, true, "i", playerid ); }
				else { zauzimanje_firme_Timer[ playerid ] = SetTimerEx( "ZauzimanjeFirme", 1000, true, "i", playerid ); }
				OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, "[ZAUZIMANJE] Lider je zapoceo zauzimanje firme." );

			} else return GRESKA( playerid, "Mozete zauzimati firmu samo od 19h do 22h." );

		} else return GRESKA( playerid, "Nemate oruzije za zauzimanje firmi!" );
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zauzmi( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_BANDA || GetFactionType( playerid ) == ORG_TIP_MAFIJA )
	{
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozes da zauzimas sa vozila." );
		if( PlayerInfo[ playerid ][ xZauzimanjeVreme ] != 0 ) return GRESKA( playerid, "Vec ste zauzimali, sacekajte jos %d minuta.", PlayerInfo[ playerid ][ xZauzimanjeVreme ] );
		new gZone__ID = GetNearestGZone( playerid );
		if( gZone__ID == -1 ) return GRESKA( playerid, "Moras biti u teritoriji da bi je zauzeo." );
		if( !gZoneInfo[ gZone__ID ][ gZoneTakeable ] ) return GRESKA( playerid, "Ovu teritoriju nije moguce zauzeti." );
		if( PlayerInfo[ playerid ][ xClan ] == gZoneInfo[ gZone__ID ][ gZoneGangID ] ) return GRESKA( playerid, "Ne mozes zauzeti teritoriju koja je u vlasnistvu tvoje bande." );
		if( gZoneInfo[ gZone__ID ][ gZoneTime ] != 0 ) return GRESKA( playerid, "Ovo je vec neko zauzimao u skorije vreme." );
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, gZoneInfo[ gZone__ID ][ gZonePickupPos ][ 0 ], gZoneInfo[ gZone__ID ][ gZonePickupPos ][ 1 ], gZoneInfo[ gZone__ID ][ gZonePickupPos ][ 2 ] ) ) return GRESKA( playerid, "Morate biti na pickupu te teritorije da bi zapoceli zauzimanje." );
		new Orga = 0, Protiv = 0, hour, minute, seconds;
		gettimeEx( hour, minute, seconds );
		FixHour( hour );
		hour = shifthour;

		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerInfo[ i ][ xClan ] == gZoneInfo[ gZone__ID ][ gZoneGangID ] ) Protiv++;

			if( PlayerInfo[ i ][ xClan ] == PlayerInfo[ playerid ][ xClan ] )
			{
				Orga++;
			}
		}

		if( GetWeapon( playerid ) >= 22 && GetWeapon( playerid ) <= 40 )
		{
			if( ( hour >= 09 ) && ( hour <= 23 ) )
			{
				if( Orga < 3 )  return GRESKA( playerid, "Moras imati bar 3 ljudi iz bande online da bi zauzeo neko teritoriju." );
				if( gZoneInfo[ gZone__ID ][ gZoneGangID ] != -1 )
				{
					if( Protiv < 3 )  return GRESKA( playerid, "Mora biti bar 3 clanova iz protivnicke bande online da bi zauzeli njihovu teritoriju." );
					OrgPoruka( gZoneInfo[ gZone__ID ][ gZoneGangID ], 0x95b4a2FF, "[TERITORIJA] Druga banda pokusava da zauzme vasu teritoriju." );
				}
				new stringic[ 24 ];
				format( stringic, sizeof( stringic ), "0x%s99", OI[ PlayerInfo[ playerid ][ xClan ] ][ oColor ] );
				GangZoneFlashForAll( gZoneInfo[ gZone__ID ][ gZoneID ], HexToInt( stringic ) );
				SendInfoMessage( playerid, "ZAPOCEO SI ZAUZIMANJE TERITORIJE." );
				SendInfoMessage( playerid, "Moras ostati ziv sljedecih 10 minuta kako bi je osvojio." );
				SendInfoMessage( playerid, "Ne smijes se previse udaljiti od mesta zauzimanja, jer ce zauzimanje biti prekinuto.");
				gZoneInfo[ gZone__ID ][ gZoneTime ] = 30;
				gZone_ID[ playerid ] = gZone__ID;
				gZone_Time[ playerid ] = 600;
				gZone_Timer[ playerid ] = SetTimerEx( "ZonaZauzmi", 1000, true, "i", playerid );
				PlayerInfo[ playerid ][ xZauzimanjeVreme ] = 30;
				SavePlayer( playerid );
				OrgPoruka( PlayerInfo[ playerid ][ xClan ], 0x95b4a2FF, "[TERITORIJA] Clan vase organizacije pokusava da zauzme tudju teritoriju." );

				new zauzimanje_vijesti_string[300];
				format(zauzimanje_vijesti_string,sizeof(zauzimanje_vijesti_string),"| VIJESTI | Trenutno u {ffffff}%s "col_orange"traje rat bandi - gradjani, budite oprezni.");
				SCMA(NARANDZASTA,zauzimanje_vijesti_string);

			} else return GRESKA( playerid, "Mozete zauzimati teritorije samo od 9h do 23h." );

		} else return GRESKA( playerid, "Nemate oruzije za zauzimanje teritorije!" );
	}else return GRESKA( playerid, "Samo mafije i bande!" );

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:radio( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xBoombox ] != true ) return GRESKA( playerid, "Nemate radio." );
	new item[ 24 ];
	if( sscanf( params, "s[24] ", item ) )
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/radio [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije]: postavi, podigni, url");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( strcmp( item, "postavi", true ) == 0 )
	{
		if( BoomboxInfo[ playerid ][ boomboxPlaced ] ) return GRESKA( playerid, "Vec ste postavili radio." );
		if( Boombox_Nearest( playerid ) != INVALID_PLAYER_ID ) return GRESKA( playerid, "Vec ste u blizini drugog radia.");
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate napustiti vozilo prvo." );
		Boombox_Place( playerid );
		format( globalstring, sizeof( globalstring ), "** %s stavlja radio na pod i podesava ga.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		SendClientMessagee( playerid, ZUTA, "Postavili ste radio (koristite \"/radio\" za opcije).");
		return 1;
	}
	else if( strcmp( item, "podigni", true ) == 0 )
	{
		if( !BoomboxInfo[ playerid ][ boomboxPlaced ] ) return GRESKA( playerid, "Nemate postavljen radio.");
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, BoomboxInfo[ playerid ][ boomboxPos ][ 0 ], BoomboxInfo[ playerid ][ boomboxPos ][ 1 ], BoomboxInfo[ playerid ][ boomboxPos ][ 2 ] ) ) return GRESKA( playerid, "Niste u blizini vaseg radia." );
		Boombox_Destroy( playerid );
		format( globalstring, sizeof( globalstring ), "** %s je podigao svoj radio s poda.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		return 1;
	}
	else if( strcmp( item, "url", true ) == 0 )
	{
		new url[ 128 ];
		if( sscanf( params, "s[24]s[128]", item, url ) ) return SendUsageMessage( playerid, "/radio url [song url]");
		if( !BoomboxInfo[ playerid ][ boomboxPlaced ] ) return GRESKA( playerid, "Nemate postavljen radio.");
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, BoomboxInfo[ playerid ][ boomboxPos ][ 0 ], BoomboxInfo[ playerid ][ boomboxPos ][ 1 ], BoomboxInfo[ playerid ][ boomboxPos ][ 2 ] ) ) return GRESKA( playerid, "Niste u blizini vaseg radia.");
		Boombox_SetURL( playerid, url );
		format( globalstring, sizeof( globalstring ), "** %s okrece kotacic na radiu te mjenja stanicu.", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		return 1;
	}
	else
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/radio [opcija]");
		SendClientMessagee( playerid, BELA, "[Opcije]: postavi, podigni, url");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:donator( playerid, params[] )
{
	 if( PlayerInfo[ playerid ][ xVIPLevel ] != 0 )
	 {
		new string[ 512 ];
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
		format( string, sizeof( string ), ""col_white"2xRespekt UP "col_balkanstory"(4 CHB)\n"col_white"Novac (1000$) "col_balkanstory"(1 CHB)\n"col_white"Otkaz bez ugovora "col_balkanstory"(15 CHB)\n"col_white"Skill mehanicara 5 "col_balkanstory"(20 CHB)\n"col_white"Ugasi telefon "col_balkanstory"(15 CHB)\n"col_white"Micanje warna "col_balkanstory"(40 CHB)\n"col_white"Bon mobitela (600$)"col_balkanstory"(1 CHB)\n");
		strcat( DialogStrgEx, string );
		format( string, sizeof( string ), ""col_white"Dozvola A kategorije"col_balkanstory"(3 CHB)\n"col_white"Dozvola B kategorije"col_balkanstory"(5 CHB)\n"col_white"Dozvola C1 kategorije"col_balkanstory"(7 CHB)\n"col_white"Dozvola C2 kategorije"col_balkanstory"(8 CHB)\n"col_white"Dozvola C3 kategorije"col_balkanstory"(10 CHB)\n"col_white"Promena broja (6 znamenki)"col_balkanstory"(10 CHB)\n");
		strcat( DialogStrgEx, string );
		format( string, sizeof( string ), ""col_white"Dozvola za oruzje"col_balkanstory"(10 CHB)\n"col_white"NRG (osobni motor)"col_balkanstory"(100 CHB)\n"col_white"Infernus (osobno vozilo)"col_balkanstory"(200 CHB)\n"col_white"Turismo (osobno vozilo)"col_balkanstory"(230 CHB)\n"col_white"Zavrsi sve skole"col_balkanstory"(40 CHB)\n"col_white"Napustanje organizacije bez ugovora"col_balkanstory"(30 CHB)\n");
		strcat( DialogStrgEx, string );
		format( string, sizeof( string ), ""col_white"Dozvola D kategorije"col_balkanstory"(12 CHB)\n"col_white"Dozvola F kategorije"col_balkanstory"(14 CHB)\n"col_white"Promjena email-a"col_balkanstory"(50 CHB)");
		strcat( DialogStrgEx, string );
		ShowPlayerDialog( playerid, dialog_VIP, DSL, "Donator Opcije", DialogStrgEx, "Odabir", "Ponisti");
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
		SendClientMessageEx( playerid, SVETLOCRVENA, "Imate jos %d Athlonebodova.", PlayerInfo[ playerid ][ xVIPLevel ] );
	 }
	 else return GRESKA( playerid, "Niste Donator!" );
	 return 1;
}*/
/////////////////////////////////////////////////////////////////////////////////
CMD:razvedi( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/razvedi [ ID/Ime ] " );
	if( id == IPI) return GRESKA(playerid, "Pogresan ID Korisnika");
	format( globalstring, sizeof( globalstring ), "*Razveo si igraca %s.", ImeIgraca( id ) );
	SendClientMessagee(playerid, SVETLOPLAVA, globalstring );
	format( globalstring, sizeof( globalstring ), "*Admin %s te je razveo.", ImeIgraca( playerid ) );
	SendClientMessagee( id, SVETLOPLAVA, globalstring );
	strmid( PlayerInfo[ id ][ xMarriedTo ], "Niko", 0, strlen( "Niko" ), 24 );
	PlayerInfo[ id ][ xMarried ] = false;
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:zaprosi( playerid, params[] )
{
	new id;
	if( sscanf(params, "u", id ) ) return SendUsageMessage( playerid, "/zaprosi [ ID/Ime ]");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika");
	if( PlayerInfo[ playerid ][ xNovac ] < 10000 ) return GRESKA( playerid, "Trosak svadbe kosta $10000!");
	if( PlayerInfo[ playerid ][ xMarried ] != false ) return GRESKA( playerid, "Vec si ozenjen/udana!");
	if( PlayerInfo[ id ][ xMarried ] != false ) return GRESKA( playerid, "Vec je ozenjen/udana!");
	if( PlayerInfo[ playerid ][ xPol ] != 1 ) return GRESKA( playerid, "Samo muski pol moze da zaprosi!");
	if( PlayerInfo[ id ][ xPol ] != 2 ) return GRESKA( playerid, "Da li si peder ?!");
	if( IsPlayerNearPlayer( 8.0, playerid, id ) )
	{
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sam sebe zaprosit!");
		format( globalstring, sizeof( globalstring ), "* Zaprosio si %s.", ImeIgraca( id ) );
		SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
		format( globalstring, sizeof( globalstring ), "* %s te zaprosio/la (pisi /prihvati marriage) da prihvatis brak.", ImeIgraca( playerid ) );
		SendClientMessagee( id, SVETLOPLAVA, globalstring );
		ProposeOffer[ id ] = playerid;
	}
	else return GRESKA( playerid, "Osoba se ne nalazi u vasoj blizini!" );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:svjedok( playerid, params[] )
{
	new id;
	if( sscanf( params, "u", id  ) ) return SendUsageMessage( playerid, "/svjedok [ ID/Ime ]");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika");
	if( IsPlayerNearPlayer( 8.0, playerid, id ) )
	{
		if( id == playerid ) return GRESKA( playerid, "Ne mozes sebe staviti za svjedoka!");
		format( globalstring, sizeof( globalstring ), "* Pitao si %s hoce li biti tvoj svjedok na vjencanju.", ImeIgraca( id ) );
		SendClientMessagee(playerid, SVETLOPLAVA, globalstring );
		format( globalstring, sizeof( globalstring ), "* %s te pitao hoces li biti njegov/njezin svjedok na vjencanju (pisi /prihvati witness  - da prihvatis).", ImeIgraca( playerid ) );
		SendClientMessagee( id, SVETLOPLAVA, globalstring );
		MarryWitnessOffer[ id ] = playerid;
	}
	else return GRESKA( playerid, "Osoba se ne nalazi u vasoj blizini!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:divorce( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMarried ] == false ) return GRESKA( playerid, "Nisi ozenjen/udana!");
	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/divorce [ ID/Ime ] ");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika");
	if( IsPlayerNearPlayer( 8.0, playerid, id ) )
	{
		if( id == playerid ) return GRESKA( playerid, "Ne mozete se razvesti sami od sebe!");
		new dstring[ MAX_PLAYER_NAME ], wstring[ MAX_PLAYER_NAME ];
		format( globalstring, sizeof( globalstring ), "%s", ImeIgraca( id ) );
		strmid( wstring, globalstring, 0, strlen( globalstring ), 255 );
		format( globalstring, sizeof( globalstring ), "%s", PlayerInfo[ playerid ][ xMarriedTo ] );
		strmid( dstring, globalstring, 0, strlen( globalstring ), 255 );
		if( strcmp( dstring, wstring, true ) == 0 )
		{
			format( globalstring, sizeof( globalstring ), "* Poslao si papire za razvod %s.", ImeIgraca( id ) );
			SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
			format( globalstring, sizeof( globalstring ), "* %s poslao/la ti je papire za razvod (pisi /prihvati divorce) da prihvatis.", ImeIgraca( playerid ) );
			SendClientMessagee( id, SVETLOPLAVA, globalstring );
			DivorceOffer[ id ] = playerid;
		}
		else return GRESKA( playerid, "Taj igrac nije vjencan za tebe!");
	}
	else return GRESKA( playerid, "Osoba se ne nalazi u vasoj blizini!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:lottohelp( playerid, params[] )
{
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	SendClientMessagee( playerid, -1, ""col_balkanstory"Lotto HELP | "col_white"Izvalacenje lotto kombinacije je svaki pun sat." );
	SendClientMessagee( playerid, -1, ""col_balkanstory"Lotto HELP | "col_white"/lotto /dobitak /mojtiket" );
	SendClientMessagee( playerid, SVETLOPLAVA, ""col_balkanstory"___________________________________________________________________");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:lotto( playerid, params[] )
{ 
	new broj;
	new aa1,bb1,cc1;
	aa1 = IsPlayerInRangeOfPoint( playerid, 3, 1732.0049,-1274.3639,13.5640 );
	bb1 = IsPlayerInRangeOfPoint( playerid, 3, 1730.5156,-1272.9764,13.5476 );
	cc1 = IsPlayerInRangeOfPoint( playerid, 3, 1728.9086,-1271.4746,13.5461 );
	
	if(aa1 || bb1 || cc1)
	{
		if( PlayerInfo[ playerid ][ xLottoNumber ] > 0 )
		{
			GRESKA( playerid, "Imate uplacen loto listic.");
			return 1;
		}
		if( PlayerInfo[ playerid ][ xNovac ] < 100 ) return GRESKA( playerid, "Nemate dovoljno novca. Cijena listica je 100$." );
		if( sscanf( params, "d", broj ) ) return SendUsageMessage( playerid, "/lotto [ broj ] ");
		if( broj < 1 || broj > 100 )
		{
			GRESKA( playerid, "Brojevi ne mogu biti manji od 1 ili veci od 100." );
			return true;
		}
		PlayerInfo[ playerid ][ xLottoNumber ] = broj;
		SavePlayer( playerid );
		SendClientMessageEx( playerid, -1, "Uplatili ste tiket sa brojem %d.", broj );
		SendClientMessagee( playerid, -1, "Koristi /lottohelp." );
		DajIgracuNovac( playerid, -100 );
		BussinesLutrijaMoney( 100 );
		
	}
	else return GRESKA( playerid, "Niste na salteru drzavne lutrije." );
	
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:mojtiket( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLottoNumber ] == 0 ) return GRESKA(playerid, "Nemate uplacen lotto listic." );
	SendClientMessageEx( playerid, UGBOJA, "Tvoja lotto tiket kombinacija je: "col_white"%d.", PlayerInfo[ playerid ][ xLottoNumber ] );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:dobitak( playerid,params[] )
{
	new aa1,bb1,cc1,dd1;
	aa1 = IsPlayerInRangeOfPoint( playerid, 3, 1726.3292,-1261.1490,13.5469 );
	bb1 = IsPlayerInRangeOfPoint( playerid, 3, 1726.2458,-1264.1096,13.5469 );
	cc1 = IsPlayerInRangeOfPoint( playerid, 3, 1739.3099,-1276.7129,13.5481 );
	dd1 = IsPlayerInRangeOfPoint( playerid, 3, 1742.0348,-1276.4623,13.5466 );
	if(aa1 || bb1 || cc1 || dd1)
	{
		if( PlayerInfo[ playerid ][ xLottoMoney ] < 1 ) return GRESKA( playerid, "Trenutno nemate novca na lotto racunu." );
		DajIgracuNovac( playerid, PlayerInfo[ playerid ][ xLottoMoney ] );
		SendInfoMessage( playerid, "Preuzeli ste vasu nagradu od "col_white"%d$.", PlayerInfo[ playerid ][ xLottoMoney ] );
		PlayerInfo[ playerid ][ xLottoMoney ] = 0;
		SavePlayer( playerid );
		
	} else return GRESKA( playerid, "Niste na salteru drzavne lutrije." );
		
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:daxcamera( playerid,params[] )
{
	if( !FlyMode[ playerid ] ) SetTimerEx("FlyMode1", 1000, false, "d", playerid );
	else if( FlyMode[ playerid ] ) CancelFlyMode( playerid );
	return true;
}*/
/////////////////////////////////////////////////////////////////////////////////
CMD:toghud( playerid,params[] )
{
	TogPlayerHud( playerid );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
stock ShowBGTextdraw(playerid)
{
	PlayerTextDrawShow(playerid,Textdraw0[playerid]);
	PlayerTextDrawShow(playerid,Textdraw1[playerid]);
	PlayerTextDrawShow(playerid,Textdraw2[playerid]);
	PlayerTextDrawShow(playerid,Textdraw3[playerid]);
	PlayerTextDrawShow(playerid,Textdraw4[playerid]);
	PlayerTextDrawShow(playerid,Textdraw5[playerid]);
	PlayerTextDrawShow(playerid,Textdraw6[playerid]);
	//PlayerTextDrawShow(playerid,Textdraw7[playerid]);
	//PlayerTextDrawShow(playerid,Textdraw9[playerid]);
	//PlayerTextDrawShow(playerid,Textdraw11[playerid]);
}
stock HideBGTextdraw(playerid)
{
	PlayerTextDrawHide(playerid,Textdraw0[playerid]);
	PlayerTextDrawHide(playerid,Textdraw1[playerid]);
	PlayerTextDrawHide(playerid,Textdraw2[playerid]);
	PlayerTextDrawHide(playerid,Textdraw3[playerid]);
	PlayerTextDrawHide(playerid,Textdraw4[playerid]);
	PlayerTextDrawHide(playerid,Textdraw5[playerid]);
	PlayerTextDrawHide(playerid,Textdraw6[playerid]);
	//PlayerTextDrawHide(playerid,Textdraw7[playerid]);
	//PlayerTextDrawHide(playerid,Textdraw9[playerid]);
	//PlayerTextDrawHide(playerid,Textdraw11[playerid]);
}

SwapModernTextDrawBarColors(); public SwapModernTextDrawBarColors()
{
	acolorid = 1;
	if ( acolorid == 0) return 0; 
	return 1;
}

static TogPlayerHud( playerid )
{
	//announcement(playerid,"Textdrawi sacuvani!");
	PlayerTextDrawHide(playerid,ptakedamage0[playerid]);
	PlayerTextDrawHide(playerid,ptakedamage1[playerid]);
	TextDrawHideForPlayer(playerid,takedamage0);
	TextDrawHideForPlayer(playerid,takedamage1);

	
	FadeFromBlack(playerid);
	if(Modern[playerid] == 0)
	{
		if( TogHud[ playerid ] )
		{
			for( new i = 0; i < 100; i ++)
			{
				TextDrawShowForPlayer( playerid, TDEditor_TD[ i ] );
			}
			/*for( new i = 0; i < 15; i ++)
			{
				TextDrawShowForPlayer( playerid, GPSIGTD[ i ] );
			}*/
			TextDrawShowForPlayer( playerid, GladTDPizza);
			TextDrawShowForPlayer( playerid, WcTDSolja);
			//PlayerTextDrawShow( playerid, BankaIgraca[ playerid ] );
			//PlayerTextDrawShow( playerid, PlataIgraca[ playerid ] );
			//PlayerTextDrawShow( playerid, ZlatoIgraca[ playerid ] );
			PlayerTextDrawShow( playerid, GladIgraca[ playerid ] );
			PlayerTextDrawShow( playerid, WcIgraca[ playerid ] );
			PlayerTextDrawShow( playerid, LokacijaIgracaTD[ playerid ] );
			PlayerTextDrawShow( playerid, GradIgracaTD[ playerid ] );
			//PlayerTextDrawShow( playerid, LevelIgraca[playerid]);

		   // PlayerTextDrawShow(playerid, Textdraw3[playerid]);
			ShowBGTextdraw(playerid);
		   //showhjhh(playerid);
			
			
			TogHud[ playerid ] = false;
			return 1;
		}
		else if( !TogHud[ playerid ] )
		{
			for( new i = 0; i < 100; i ++)
			{
				TextDrawHideForPlayer( playerid, TDEditor_TD[ i ] );
			}
			/*for( new i = 0; i < 15; i ++)
			{
				TextDrawHideForPlayer( playerid, GPSIGTD[ i ] );
			}*/
			TextDrawHideForPlayer( playerid, GladTDPizza);
			TextDrawHideForPlayer( playerid, WcTDSolja);
			PlayerTextDrawHide( playerid, GladIgraca[ playerid ] );
			PlayerTextDrawHide( playerid, WcIgraca[ playerid ] );
			PlayerTextDrawHide( playerid, LokacijaIgracaTD[ playerid ] );
			PlayerTextDrawHide( playerid, GradIgracaTD[ playerid ] );
			//PlayerTextDrawHide( playerid, BankaIgraca[ playerid ] );
			//PlayerTextDrawHide( playerid, PlataIgraca[ playerid ] );
			//PlayerTextDrawHide( playerid, ZlatoIgraca[ playerid ] );
		  //  PlayerTextDrawHide( playerid, LevelIgraca[playerid]);
			HideBGTextdraw(playerid);

			//PlayerTextDrawHide(playerid, Textdraw3[playerid]);
			TogHud[ playerid ] = true;
			//hidehjhh(playerid);
			return 1;
		}
	}
	else if(Modern[playerid] == 1)
	{
		print("[DENTIST-BUG]: Sistem ok");
		#if defined retardirani_textdrawi

		if(TogHud[playerid])
		{
			moderntd(playerid,true);
			ShowInteractiveMenu(playerid);
			TogHud[ playerid ] = false;
			return 1;
		}
		if(!TogHud[playerid])
		{
			moderntd(playerid,false);
			HideInteractiveMenu(playerid);
			TogHud[playerid] = true;
			return 1;
		}
		#endif
	}
	new xd = 0;
	return xd;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:bacioruzje( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Morate biti level 3+ da bi mogli dropati oruzje." );
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Morate biti na nogama da bi bacili oruzje!" );
	if( DropedGun[ playerid ] != 0 ) return GRESKA( playerid, "Morate sacekati jos %d sekundi da bi ponovo bacili oruzje.", DropedGun[ playerid ] );
	if( GetFactionType( playerid ) == ORG_TIP_PD ) return GRESKA( playerid, "PD nema potrebe da koristi ovu komandu." );
	if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes na DM Zoni." );
	if( WARPInfo[ playerid ][ WARIgrac ] != -1 ) return GRESKA( playerid, "Ne mozes dok si u WARU." );
	new GunID = GetWeapon( playerid );
	new GunAmmo = GetPlayerAmmo( playerid );
	if( GunID > 0 && GunAmmo != 0 )
	{
		if( GetWeapon( playerid ) == GetPlayerWeapon( playerid ) )
		{
			new f = -1;
			for( new a = 0; a < MAX_GOBJ; a++ )
			{
				if( dGunData[ a ][ ObjPos ][ 0 ] == 0.0 )
				{
					f = a;
					break;
				}
			}
			if( f == -1 ) return GRESKA( playerid, "Trenutno ne mozes baciti oruzje na pod." );
			RemovePlayerWeapon( playerid, GunID );
			dGunData[ f ][ ObjData ][ 0 ] = GunID;
			dGunData[ f ][ ObjData ][ 1 ] = GunAmmo;
			GetPlayerPos( playerid, dGunData[ f ][ ObjPos ][ 0 ], dGunData[ f ][ ObjPos ][ 1 ], dGunData[ f ][ ObjPos ][ 2 ] );
			dGunData[ f ][ gObjID ] = CreateDynamicObject( WeaponInfos[ GunID ][ wModel ], dGunData[ f ][ ObjPos ][ 0 ], dGunData[ f ][ ObjPos ][ 1 ], dGunData[ f ][ ObjPos ][ 2 ]-1, 93.7, 120.0, 120.0 );
			DropedGun[ playerid ] = 30;
			SendClientMessageEx( playerid, -1, "Bacio si oruzje "col_balkanstory"%s.", WeaponInfos[ dGunData[ f ][ ObjData ][ 0 ] ][ wName ] );
		}
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:unistioruzje( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( GetPlayerState( playerid ) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Moras biti van vozila da bi unistio oruzje!");
	new f = -1;
	for( new a = 0; a < MAX_GOBJ; a++ )
	{
		if( IsPlayerInRangeOfPoint( playerid, 5.0, dGunData[ a ][ ObjPos ][ 0] , dGunData[ a ][ ObjPos ][ 1 ], dGunData[ a ][ ObjPos ][ 2 ] ) )
		{
			f = a;
			break;
		}
	}
	if( f == -1 ) return GRESKA( playerid, "Nemas oruzje u blizini." );
	DestroyDynamicObject( dGunData[ f ][ gObjID ] );
	SendClientMessageEx( playerid, -1, "Unistio si oruzje "col_balkanstory"%s.", WeaponInfos[ dGunData[ f ][ ObjData ][ 0 ] ][ wName ] );
	dGunData[ f ][ ObjPos ][ 0 ] = 0.0;
	dGunData[ f ][ ObjPos ][ 1 ] = 0.0;
	dGunData[ f ][ ObjPos ][ 2 ] = 0.0;
	dGunData[ f ][ gObjID ] = -1;
	dGunData[ f ][ ObjData ][ 0 ] = 0;
	dGunData[ f ][ ObjData ][ 1 ] = 0;
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:podignioruzje( playerid, params[] )
{
	if( GetPlayerState(playerid) != PLAYER_STATE_ONFOOT ) return GRESKA( playerid, "Moras biti na nogama da bi bacio oruzje!");
	if( NaDmEventu[ playerid ] == true ) return GRESKA( playerid, "Ne mozes na DM Zoni." );
	if( WARPInfo[ playerid ][ WARIgrac ] != -1 ) return GRESKA( playerid, "Ne mozes dok si u WARU." );
	new f = -1;
	for( new a = 0; a < MAX_GOBJ; a++ )
	{
		if( IsPlayerInRangeOfPoint( playerid, 5.0, dGunData[ a ][ ObjPos ][ 0] , dGunData[ a ][ ObjPos ][ 1 ], dGunData[ a ][ ObjPos ][ 2 ] ) )
		{
			if(PlayerInfo[playerid][xPUBG] == 1)
			{
				if(dGunData[a][PUBG] == 0) return greska(playerid,"Ovo nije PUBG gun.");
				f = a;
			}
			else if(PlayerInfo[playerid][xPUBG] == 0) f = a;
			break;
		}
	}
	if( f == -1 ) return GRESKA( playerid, "Nemas oruzje u blizini." );
	DestroyDynamicObject( dGunData[ f ][ gObjID ] );
	SendClientMessageEx( playerid, -1, "Pokupio si oruzje "col_balkanstory"%s.", WeaponInfos[ dGunData[ f ][ ObjData ][ 0 ] ][ wName ] );
	GiveWeaponToPlayer( playerid, dGunData[ f ][ ObjData ][ 0 ], dGunData[ f ][ ObjData ][ 1 ] );
	dGunData[ f ][ ObjPos ][ 0 ] = 0.0;
	dGunData[ f ][ ObjPos ][ 1 ] = 0.0;
	dGunData[ f ][ ObjPos ][ 2 ] = 0.0;
	dGunData[ f ][ gObjID ] = -1;
	dGunData[ f ][ ObjData ][ 0 ] = 0;
	dGunData[ f ][ ObjData ][ 1 ] = 0;
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
forward SprayDone( playerid, broj );
public SprayDone( playerid, broj )
{
	new vehicleid = GetPlayerVehicleID( playerid );
	if( GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
	{
		switch( broj )
		{
			case 0:
			{
				Dimi_SetVehiclePos( vehicleid, 2076.5461, -1832.5647, 13.5545 );
				SendInfoMessage( playerid, "Popravio si vozilo za 500$." );
				antiCheatCS[ playerid ][ VehRepairTime ] = 3;
			}
			case 1:
			{
				Dimi_SetVehiclePos( vehicleid, 1025.4225, -1033.1587, 31.8380 );
				SendInfoMessage( playerid, "Popravio si vozilo za 500$." );
				antiCheatCS[ playerid ][ VehRepairTime ] = 3;
			}
			case 2:
			{
				Dimi_SetVehiclePos( vehicleid, 488.3767, -1731.1235, 11.2469 );
				SendInfoMessage( playerid, "Popravio si vozilo za 500$." );
				antiCheatCS[ playerid ][ VehRepairTime ] = 3;
			}
			case 3:
			{
				Dimi_SetVehiclePos( vehicleid, 720.2908, -467.6113, 16.3437 );
				SendInfoMessage( playerid, "Popravio si vozilo za 500$." );
				antiCheatCS[ playerid ][ VehRepairTime ] = 3;
			}
		}
		BussinesPaySprayMoney( playerid, 500 );
	}
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:enter( playerid, params[] )
{
	if( GetPlayerState( playerid ) != PLAYER_STATE_DRIVER ) return GRESKA( playerid, "Morate biti na mjestu vozaca." );
	if( PlayerInfo[ playerid ][ xNovac ] < 500 ) return GRESKA( playerid, "Nemate dovoljno novca( 500$ )." );
	new vehicleid = GetPlayerVehicleID( playerid );
	if( IsPlayerInRangeOfPoint( playerid, 3.0, 1099.1404, -824.9033, 181.2554 ) )
	{
		DajIgracuNovac( playerid, -400 );
		Dimi_SetVehiclePos( vehicleid, 2062.1294, -1831.5498, 13.5469 );
		SetVehicleZAngle( vehicleid, 90 );
		SetTimerEx( "SprayDone", 5000, false, "ii", playerid, 0 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 5;
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3.0, 1024.9756, -1030.7930, 32.0257 ) )
	{
		DajIgracuNovac( playerid, -400 );
		Dimi_SetVehiclePos( vehicleid, 1024.9763, -1021.8850, 32.1016 );
		SetVehicleZAngle( vehicleid, 0 );
		SetTimerEx( "SprayDone", 5000, false, "ii", playerid, 1 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 5;
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3.0, 488.3819, -1733.0563, 11.1752 ) )
	{
		DajIgracuNovac( playerid, -400 );
		Dimi_SetVehiclePos( vehicleid, 487.4099, -1741.4585, 11.1330 );
		SetVehicleZAngle( vehicleid, 180 );
		SetTimerEx( "SprayDone", 5000, false, "ii", playerid, 2 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 5;
	}
	else if( IsPlayerInRangeOfPoint( playerid, 3.0, 719.8940, -464.8272, 16.3359 ) )
	{
		DajIgracuNovac( playerid, -400 );
		Dimi_SetVehiclePos( vehicleid, 720.3924, -456.0286, 16.3359 );
		SetVehicleZAngle( vehicleid, 0 );
		SetTimerEx( "SprayDone", 5000, false, "ii", playerid, 3 );
		antiCheatCS[ playerid ][ VehRepairTime ] = 5;
	}
	else return GRESKA( playerid, "Morate biti pored ulaza payspraya." );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:music( playerid, params[] )
{
	ShowPlayerDialog( playerid, dialog_RADIOPLAY, DSL, D_NASLOV, "BUM Radio\nB92 Radio\nAntena Radio\nJuzni Vetar\nCool Radio\nNaxi Radio\nPingvin Radio\nCarsija Radio\nRadio BN\nRadio M\nRadio Banovina\nRadio Super\nBalkan DJ\nD Plus\nOff Radio", D_ODABERI, D_ODUSTANI );
	return true;
}
/////////////////////////////////////////////////////////////////////////////////
/*CMD:statistika( playerid, params[] )
{
	new coordsstring[ 128 ], srecnisati[ 11 ], mogucnostreporta[ 11 ], mogucnostpitanja[ 11 ], mogucnostkupovinev[ 11 ], oglasici[ 11 ];
	if( ServerInfo[ HappyHours ] == true ) srecnisati = "Ukljuceni";
	else srecnisati = "Iskljuceni";
	if( ServerInfo[ KupovinaVozila ] == true ) mogucnostkupovinev = "ukljucena";
	else mogucnostkupovinev = "iskljucena";
	if( ServerInfo[ Report ] == true ) mogucnostreporta = "ukljucena";
	else mogucnostreporta = "iskljucena";
	if( ServerInfo[ Pitanja ] == true ) mogucnostpitanja = "ukljucena";
	else mogucnostpitanja = "iskljucena";
	if( ServerInfo[ Oglasi ] == true ) oglasici = "ukljucena";
	else oglasici = "iskljucena";
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "__________________________________________________________________\n");
	format( coordsstring, sizeof( coordsstring ), ""col_white"Ukupno posjeta servera: "col_balkanstory"%d "col_crvena"| "col_white"Ukupno registrovanih igraca: "col_balkanstory"%d\n", ServerInfo[ BrojPosetaServeru ], ServerInfo[ RegistrovanihKorisnika ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Ukupno banovanih igraca: "col_balkanstory"%d "col_crvena"| "col_white"Ukupno kikovanih igraca: "col_balkanstory"%d\n", ServerInfo[ BanovanihKorisnika ], ServerInfo[ KikovanihKorisnika ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Broj datih warnova: "col_balkanstory"%d "col_crvena"| "col_white"Srecni sati: "col_balkanstory"%s\n", ServerInfo[ BrojWarnova ], srecnisati );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Pocetni level: "col_balkanstory"%d "col_crvena"| "col_white"Pocetni novac: "col_balkanstory"%d$\n", ServerInfo[ PocetniLevel ], ServerInfo[ PocetniNovaca ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Mogucnost kupovine vozila je "col_balkanstory"%s"col_white".\n", mogucnostkupovinev );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Mogucnost slanja pitanja A.S.T-u je "col_balkanstory"%s"col_white".\n", mogucnostpitanja );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Mogucnost slanja reporta A.S.T-u je "col_balkanstory"%s"col_white".\n", mogucnostreporta );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Trenutni broj kreiranih vozila je "col_balkanstory"%d"col_white".\n", ServerInfo[ BrojKreiranihVozila ] );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Mogucnost postavljanja oglasa je "col_balkanstory"%s"col_white".\n", oglasici );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_white"Rekord servera je "col_balkanstory"%d"col_white".\n", ServerInfo[ RekordServera ] );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, "__________________________________________________________________");
	ShowPlayerDialog( playerid, 0, DSMSG, "Nova Era OGC statistika", DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}*/
/////////////////////////////////////////////////////////////////////////////////
CMD:unrentroom( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xRentID ] == -1 ) return GRESKA( playerid, "Nisi rentao nijednu imovinu." );
	II[ PlayerInfo[ playerid ][ xRentID ] ][ iRentovano ]--;
	PlayerInfo[ playerid ][ xSpawn ] = SPAWN_OBICAN_LS_1;
	SavePlayer( playerid );
	SaveProperty( PlayerInfo[ playerid ][ xRentID ] );
	PlayerInfo[ playerid ][ xRentID ] = -1;
	SendInfoMessage( playerid, "Unretnovao si sobu u imovini koju si iznajmljivao." );
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:rentroom( playerid, params[] )
{
	if( GetNearestProperty( playerid ) == -1 ) return GRESKA( playerid, "Nema imovine u vasoj blizini!" );
	if( II[ GetNearestProperty( playerid ) ][ iRentable ] == 0 ) return GRESKA( playerid, "Ova imovina ne moze da se renta!" );
	if( II[ GetNearestProperty( playerid ) ][ iRentPrice ] == 0 ) return GRESKA( playerid, "Ova imovina ne moze da se renta!" );
	if( PlayerInfo[ playerid ][ xNovac ] < II[ GetNearestProperty( playerid ) ][ iRentPrice ] ) return GRESKA( playerid, "Nemas dovoljno novca(%d$).", II[ GetNearestProperty( playerid ) ][ iRentPrice ] );
	PlayerInfo[ playerid ][ xRentID ] = GetNearestProperty( playerid );
	PlayerInfo[ playerid ][ xSpawn ] = SPAWN_RENT;
	DajIgracuNovac( playerid, -II[ GetNearestProperty( playerid ) ][ iRentPrice ] );
	II[ GetNearestProperty( playerid ) ][ iRentovano ]++;
	II[ GetNearestProperty( playerid ) ][ iMoney ] += II[ GetNearestProperty( playerid ) ][ iRentPrice ];
	SaveProperty( GetNearestProperty( playerid ) );
	SendInfoMessage( playerid, "Uspjesno si rentao ovu imovinu za %d$.", II[ GetNearestProperty( playerid ) ][ iRentPrice ] );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rent( playerid, params[] )
{
	if( TipVozila[ GetPlayerVehicleID( playerid ) ] == RENTANO_VOZILO )
	{
		if( Rentano[ playerid ] != GetPlayerVehicleID( playerid ) )
		{
			new price;
			if( IsVehicleBajs( GetPlayerVehicleID( playerid ) ) ) price = 5;
			else if( IsVehicleMotor( GetPlayerVehicleID( playerid ) ) ) price = 10;
			else if( IsVehicleAuto( GetPlayerVehicleID( playerid ) ) ) price = 15;
			new rentstr[ 300 ];
			format(rentstr,sizeof(rentstr),""col_balkanstory"-------------------------------------------------------------------------\n\n\
			{FFFFFF}Unesite koliko minuta zelite rentati ovo vozilo.\n1 minut = %d$\nKomande: /lock /unrent\n\n\
			"col_balkanstory"-------------------------------------------------------------------------",price);
			ShowPlayerDialog(playerid,dialog_RENTANJE,DSI,"RENT",rentstr,"Uredu","Izlaz");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hpboks( playerid, params[] )
{
	if( IsPlayerInRangeOfPoint( playerid, 7.0, 1663.1982, -1386.0392, 65.0921 ) )
	{
		Dimi_SetPlayerHealth( playerid, 100 );
		Dimi_SetPlayerArmour( playerid, 0 );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prodajzlato( playerid, params[] )
{
	new kolicina;
	if( !IsPlayerInRangeOfPoint(playerid, 3.0, 918.3580,-1009.1941,-47.9101 ) ) return GRESKA( playerid, "Morate biti u zlatari.");
	if( sscanf( params, "i", kolicina ) ) return SendUsageMessage( playerid, "/prodajzlato [ kolicina ] ");
	if( kolicina < 1 ) return GRESKA( playerid, "Ne mozete manje od 1!");
	if( PlayerInfo[ playerid ][ xZlato ] < kolicina ) return GRESKA( playerid, "Niste u mogucnosti prodati toliko grama zlata - nemate toliko.");
	DajIgracuNovac( playerid, kolicina*200 );
	PlayerInfo[ playerid ][ xZlato ] -= kolicina;
	SavePlayer( playerid );
	ServerInfo[ Zlato ] += kolicina;
	SaveServerStats( );
	new zlatostring[ 256 ];
	format( zlatostring, sizeof( zlatostring ), ""col_white"Trenutno u sefu ima "col_balkanstory"%dg "col_white"zlata\n"col_white"Da opljackate zlataru kucajte\n"col_balkanstory"[ /pljackajzlataru ]", ServerInfo[ Zlato ] );
	UpdateDynamic3DTextLabelText( ServerInfo[ ZlatoLabel ], BELA, zlatostring );
	UpdateZlatoTD( playerid );
	SendInfoMessage( playerid, "Uspjesno ste prodali %d grama zlata te dobili %d$ novca.", kolicina, kolicina*200 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupizlato( playerid, params[] )
{
	new kolicina;
	if( !IsPlayerInRangeOfPoint(playerid, 3.0, 914.5087,-1009.1017,-47.9101 ) ) return GRESKA( playerid, "Morate biti u zlatari.");
	if( sscanf( params, "i", kolicina ) ) return SendUsageMessage( playerid, "/kupizlato [ kolicina ] ");
	if( kolicina < 1 ) return GRESKA( playerid, "Ne mozete manje od 1!");
	if( PlayerInfo[ playerid ][ xNovac ] < kolicina*250 ) return GRESKA( playerid, "Nemate dovoljno novca za tu kolicinu zlata!" );
	DajIgracuNovac( playerid, -kolicina*250 );
	PlayerInfo[ playerid ][ xZlato ] += kolicina;
	SavePlayer( playerid );
	ServerInfo[ Zlato ] -= kolicina;
	SaveServerStats( );
	new zlatostring[ 256 ];
	format( zlatostring, sizeof( zlatostring ), ""col_white"Trenutno u sefu ima "col_balkanstory"%dg "col_white"zlata\n"col_white"Da opljackate zlataru kucajte\n"col_balkanstory"[ /pljackajzlataru ]", ServerInfo[ Zlato ] );
	UpdateDynamic3DTextLabelText( ServerInfo[ ZlatoLabel ], BELA, zlatostring );
	UpdateZlatoTD( playerid );
	SendInfoMessage( playerid, "Kupili ste %d grama zlata i platili %d$ novca.", kolicina, kolicina*250 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupisat( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 909.6122,-1004.8207,-47.9101 ) ) return GRESKA( playerid, "Morate biti u zlatari." );
	if( PlayerInfo[ playerid ][ xSat ] != 0 ) return GRESKA( playerid, "Vec imas sat, ako zelis drugi prvo ga baci komandom /baci." );
	WatchModel[ playerid ] = 19039;
	buyWatchTDControl( playerid, true );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiprsten( playerid, params[] )
{
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 922.9607,-1004.9011,-47.9101 ) ) return GRESKA( playerid, "Morate biti u zlatari." );
	GRESKA( playerid, "Stize na sljedecoj verziji servera - ova funkcija je trenutno onemogucena!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:update( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	new version[300];
	format(version,sizeof(version),""col_balkanstory"VERZIJA | "col_white"Verzija servera je: %s\n",NERP_VERZIJA);
	strcat( DialogStrgEx, version);
	
	strcat( DialogStrgEx, ""col_balkanstory"INFO | "col_white"Sve informacije o update-u pronadjite na nasem forumu i ostalim drustvenim mrezama!\n");
	
	strcat( DialogStrgEx, ""col_balkanstory"BUGS | "col_white"Sve nove BUG-ove prijavite administraciji.\n");
	 
	strcat( DialogStrgEx, ""col_balkanstory"UPDATE | "col_white"Update je uradjen dana: 20. APRIL, 2021.\n");
	
	ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	//SendInfoMessage(playerid,"Do sada nije izvrsen update, server verzija v 3.0.0!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
forward PusenjeKraj( playerid );
public PusenjeKraj( playerid )
{
	if( PlayerInBlowJob[ playerid ] != 0 )
	{
		switch( PlayerInBlowJob[ playerid ] )
		{
			case 1:
			{
				DestroyActor( Sex_Lisa );
				WhoreLisa = false;
				SetPlayerPos( playerid, -2436.8672, 992.8784, -20.5350  );
			}
			case 2:
			{
				DestroyActor( Sex_Angelina );
				WhoreAngelina = false;
				SetPlayerPos( playerid, -2435.8345, 1008.8928, -20.5350 );
			}
			case 3:
			{
				DestroyActor( Sex_Mia );
				WhoreMia = false;
				SetPlayerPos( playerid, -2448.1772, 1008.9288, -20.5350 );
			}
			case 4:
			{
				DestroyActor( Sex_Sendy );
				WhoreSendy = false;
				SetPlayerPos( playerid, -2448.2437, 992.9090, -20.5350 );
			}
		}
		StopAudioStreamForPlayer( playerid );
		FadeFromBlack( playerid );
		SetCameraBehindPlayer( playerid );
		PlayerInBlowJob[ playerid ] = 0;
		BlowJobCount[ playerid ] = 0;
		SexTDControl( playerid, false );
		TogPlayerHud( playerid );
		TogglePlayerControllable( playerid, ( true ) );
		ClearAnimations( playerid );
		Dimi_KillTimer( PusenjeTimer[ playerid ] );
	}
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
stock SexTDControl( playerid, bool:show )
{
	if( show == true )
	{
		BLOWJOBCOVER[ playerid ][ 0 ] = CreatePlayerTextDraw(playerid, 741.375000, -25.333333, "usebox");
		PlayerTextDrawLetterSize(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 0.000000, 57.021297);
		PlayerTextDrawTextSize(playerid, BLOWJOBCOVER[ playerid ][ 0 ], -26.375000, 0.000000);
		PlayerTextDrawAlignment(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 1);
		PlayerTextDrawColor(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 0);
		PlayerTextDrawUseBox(playerid, BLOWJOBCOVER[ playerid ][ 0 ], true);
		PlayerTextDrawBoxColor(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 102);
		PlayerTextDrawSetShadow(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 0);
		PlayerTextDrawSetOutline(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 0);
		PlayerTextDrawFont(playerid, BLOWJOBCOVER[ playerid ][ 0 ], 0);

		BLOWJOBCOVER[ playerid ][ 1 ] = CreatePlayerTextDraw(playerid, -2.500000, -23.333337, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 645.000000, 175.000000);
		PlayerTextDrawAlignment(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 1);
		PlayerTextDrawColor(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 255);
		PlayerTextDrawUseBox(playerid, BLOWJOBCOVER[ playerid ][ 1 ], true);
		PlayerTextDrawBoxColor(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 0);
		PlayerTextDrawSetShadow(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 0);
		PlayerTextDrawSetOutline(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 0);
		PlayerTextDrawFont(playerid, BLOWJOBCOVER[ playerid ][ 1 ], 4);

		BLOWJOBCOVER[ playerid ][ 2 ] = CreatePlayerTextDraw(playerid, -0.250000, 321.250091, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 650.625000, 174.416656);
		PlayerTextDrawAlignment(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 1);
		PlayerTextDrawColor(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 255);
		PlayerTextDrawSetShadow(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 0);
		PlayerTextDrawSetOutline(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 0);
		PlayerTextDrawFont(playerid, BLOWJOBCOVER[ playerid ][ 2 ], 4);
		
		BLOWJOBCOVER[ playerid ][ 3 ] = CreatePlayerTextDraw(playerid,284.000000, 426.000000, "Da prekinete kucajte_~r~/blowjob~n~~w~ZVUK VAM MORA BITI UKLJUCEN");
		PlayerTextDrawBackgroundColor(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 255);
		PlayerTextDrawFont(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 2);
		PlayerTextDrawLetterSize(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 0.259999, 0.899999);
		PlayerTextDrawColor(playerid,BLOWJOBCOVER[ playerid ][ 3 ], -1);
		PlayerTextDrawSetOutline(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 0);
		PlayerTextDrawSetProportional(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 1);
		PlayerTextDrawSetShadow(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 1);
		PlayerTextDrawSetSelectable(playerid,BLOWJOBCOVER[ playerid ][ 3 ], 0);

		BLOWJOBCOVER[ playerid ][ 4 ] = CreatePlayerTextDraw(playerid, 610.875000, 10.083328, "60");
		PlayerTextDrawLetterSize(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 0.438125, 1.530001);
		PlayerTextDrawAlignment(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 1);
		PlayerTextDrawColor(playerid, BLOWJOBCOVER[ playerid ][ 4 ], -1);
		PlayerTextDrawSetShadow(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 0);
		PlayerTextDrawSetOutline(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 1);
		PlayerTextDrawBackgroundColor(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 51);
		PlayerTextDrawFont(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 2);
		PlayerTextDrawSetProportional(playerid, BLOWJOBCOVER[ playerid ][ 4 ], 1);

		for( new i = 0; i < 5; i ++)
		{
			PlayerTextDrawShow( playerid, BLOWJOBCOVER[ playerid ][ i ] );
		}
	}
	else if( show == false )
	{
		for( new i = 0; i < 5; i ++)
		{
			PlayerTextDrawHide( playerid, BLOWJOBCOVER[ playerid ][ i ] );
			PlayerTextDrawDestroy( playerid, BLOWJOBCOVER[ playerid ][ i ] );
			BLOWJOBCOVER[ playerid ][ i ] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
}
//////////////////////////////////////////////////////////////////////////////////
CMD:blowjob( playerid, params[] )
{
	if( PlayerInBlowJob[ playerid ] != 0 )
	{
		switch( PlayerInBlowJob[ playerid ] )
		{
		
			case 1:
			{
				DestroyActor( Sex_Lisa );
				WhoreLisa = false;
				SetPlayerPos( playerid, -2436.8672, 992.8784, -20.5350  );
			}
			case 2:
			{
				DestroyActor( Sex_Angelina );
				WhoreAngelina = false;
				SetPlayerPos( playerid, -2435.8345, 1008.8928, -20.5350 );
			}
			case 3:
			{
				DestroyActor( Sex_Mia );
				WhoreMia = false;
				SetPlayerPos( playerid, -2448.1772, 1008.9288, -20.5350 );
			}
			case 4:
			{
				DestroyActor( Sex_Sendy );
				WhoreSendy = false;
				SetPlayerPos( playerid, -2448.2437, 992.9090, -20.5350 );
			}
			
		}
		StopAudioStreamForPlayer( playerid );
		FadeFromBlack( playerid );
		BlowJobCount[ playerid ] = 0;
		SetCameraBehindPlayer( playerid );
		PlayerInBlowJob[ playerid ] = 0;
		SexTDControl( playerid, false );
		TogPlayerHud( playerid );
		TogglePlayerControllable( playerid, ( true ) );
		ClearAnimations( playerid );
		Dimi_KillTimer( PusenjeTimer[ playerid ] );
		
	}
	else
	{
	
		if( IsPlayerInRangeOfPoint( playerid, 5.0, -2436.5886, 992.8784, -20.5350 ) )
		{
			if( WhoreLisa == true ) return GRESKA( playerid, "Kurva 'Lisa' je zauzeta idi do druge.");
			if( PlayerInBlowJob[ playerid ] != 0 ) return GRESKA( playerid, "Vec ti pusi jedna kurva." );
			if( PlayerInfo[ playerid ][ xNovac ] < 1500 ) return GRESKA( playerid, "Nemas 1500$ u dzepu." );
			WhoreLisa = true;
			FadeFromBlack( playerid );
			DajIgracuNovac( playerid, -1500 );
			BussinesJavnaKucaMoney( playerid, 750 );
			PlayerInBlowJob[ playerid ] = 1;
			SetPlayerPos( playerid, -2436.5349, 990.3453, -19.8474 );
			SetPlayerFacingAngle( playerid, 0.0 );
			PlayAudioStreamForPlayer( playerid, "http://sm-ogc.com/SMMuzika/soundex.mp3" );
			ClearChat( playerid, 25 );
			SexTDControl( playerid, true );
			BlowJobCount[ playerid ] = 60;
			TogPlayerHud( playerid );
			TogglePlayerControllable( playerid, ( false ) );
			ApplyAnimation( playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 1, 1, 1, 0 );
			Sex_Lisa = CreateActor( 12, -2436.5349, 990.7470, -19.8474, 177.5185 );
			ApplyActorAnimation( Sex_Lisa, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 0 );
			SetPlayerCameraPos( playerid, -2435.4030, 995.6231, -19.745 );
			SetPlayerCameraLookAt( playerid, -2436.6162, 990.7932, -20.193 );
			PusenjeTimer[ playerid ] = SetTimerEx( "PusenjeKraj", 60000, false, "i", playerid );

		}
		else if( IsPlayerInRangeOfPoint( playerid, 5.0, -2436.6277, 1009.4991, -20.5350 ) )
		{
			if( WhoreAngelina  == true ) return GRESKA( playerid, "Kurva 'Lisa' je zauzeta idi do druge.");
			if( PlayerInBlowJob[ playerid ] != 0 ) return GRESKA( playerid, "Vec ti pusi jedna kurva." );
			if( PlayerInfo[ playerid ][ xNovac ] < 1500 ) return GRESKA( playerid, "Nemas 1500$ u dzepu." );
			FadeFromBlack( playerid );
			DajIgracuNovac( playerid, -1500 );
			BussinesJavnaKucaMoney( playerid, 750 );
			PlayerInBlowJob[ playerid ] = 2;
			SetPlayerPos( playerid, -2436.7629, 1011.8691, -19.8474 );
			SetPlayerFacingAngle( playerid, 180.0 );
			PlayAudioStreamForPlayer( playerid, "http://sm-ogc.com/SMMuzika/soundex.mp3" );
			ClearChat( playerid, 25 );
			SexTDControl( playerid, true );
			BlowJobCount[ playerid ] = 60;
			TogPlayerHud( playerid );
			TogglePlayerControllable( playerid, ( false ) );
			ApplyAnimation( playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 1, 1, 1, 0 );
			Sex_Angelina = CreateActor( 40, -2436.7629, 1011.2584, -19.8474, 359.8802 );
			ApplyActorAnimation( Sex_Angelina, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 0 );
			SetPlayerCameraPos( playerid, -2436.689208, 1007.504333, -19.828128 );
			SetPlayerCameraLookAt( playerid, -2436.272460, 1012.462280, -20.323490 );
			PusenjeTimer[ playerid ] = SetTimerEx( "PusenjeKraj", 60000, false, "i", playerid );
		}
		else if( IsPlayerInRangeOfPoint( playerid, 5.0, -2448.5032, 1009.4958, -20.5350 ) )
		{
			if( WhoreMia  == true ) return GRESKA( playerid, "Kurva 'Lisa' je zauzeta idi do druge.");
			if( PlayerInBlowJob[ playerid ] != 0 ) return GRESKA( playerid, "Vec ti pusi jedna kurva." );
			if( PlayerInfo[ playerid ][ xNovac ] < 1500 ) return GRESKA( playerid, "Nemas 1500$ u dzepu." );
			FadeFromBlack( playerid );
			DajIgracuNovac( playerid, -1500 );
			BussinesJavnaKucaMoney( playerid, 750 );
			PlayerInBlowJob[ playerid ] = 3;
			SetPlayerPos( playerid, -2448.7410, 1011.9281, -19.8474 );
			SetPlayerFacingAngle( playerid, 180.0 );
			PlayAudioStreamForPlayer( playerid, "http://sm-ogc.com/SMMuzika/soundex.mp3" );
			ClearChat( playerid, 25 );
			SexTDControl( playerid, true );
			BlowJobCount[ playerid ] = 60;
			TogPlayerHud( playerid );
			TogglePlayerControllable( playerid, ( false ) );
			ApplyAnimation( playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 1, 1, 1, 0 );
			Sex_Mia = CreateActor( 55, -2448.7410, 1011.2758, -19.8474, 358.3136 );
			ApplyActorAnimation( Sex_Mia, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 0 );
			SetPlayerCameraPos( playerid, -2449.675537, 1006.677124, -19.653558 );
			SetPlayerCameraLookAt( playerid, -2448.498535, 1011.489257, -20.330032 );
			PusenjeTimer[ playerid ] = SetTimerEx( "PusenjeKraj", 60000, false, "i", playerid );
		}
		else if( IsPlayerInRangeOfPoint( playerid, 5.0, -2448.4248, 992.9086, -20.5350 ) )
		{
			if( WhoreSendy  == true ) return GRESKA( playerid, "Kurva 'Lisa' je zauzeta idi do druge.");
			if( PlayerInBlowJob[ playerid ] != 0 ) return GRESKA( playerid, "Vec ti pusi jedna kurva." );
			if( PlayerInfo[ playerid ][ xNovac ] < 1500 ) return GRESKA( playerid, "Nemas 1500$ u dzepu." );
			FadeFromBlack( playerid );
			DajIgracuNovac( playerid, -1500 );
			BussinesJavnaKucaMoney( playerid, 750 );
			PlayerInBlowJob[ playerid ] = 4;
			SetPlayerPos( playerid, -2448.7410, 991.0281, -19.8474 );
			SetPlayerFacingAngle( playerid, 0.0 );
			PlayAudioStreamForPlayer( playerid, "http://sm-ogc.com/SMMuzika/soundex.mp3" );
			ClearChat( playerid, 25 );
			SexTDControl( playerid, true );
			BlowJobCount[ playerid ] = 60;
			TogPlayerHud( playerid );
			TogglePlayerControllable( playerid, ( false ) );
			ApplyAnimation( playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 1, 1, 1, 0 );
			Sex_Sendy = CreateActor( 64, -2448.7410, 991.5348, -19.8474, 180.0251 );
			ApplyActorAnimation( Sex_Sendy, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 0 );
			SetPlayerCameraPos( playerid, -2449.843994, 995.880554, -19.543146 );
			SetPlayerCameraLookAt( playerid, -2448.617187, 991.092651, -20.298999 );
			PusenjeTimer[ playerid ] = SetTimerEx( "PusenjeKraj", 60000, false, "i", playerid );
		}
	}
	return (true);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:selfie( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0)
	{
		GRESKA( playerid, "Nemate mobilni telefon!");
		return 1;
	}
	if( !takingselfie[ playerid ] )
	{
		GetPlayerPos( playerid, lX[ playerid ], lY[ playerid ], lZ[ playerid ] );
		static Float: n1X, Float: n1Y;
		if( Degree[ playerid ] >= 360 ) Degree[ playerid ] = 0;
		Degree[ playerid ] += SelfieSpeed;
		n1X = lX[ playerid ] + SelfieRadius * floatcos(Degree[ playerid ], degrees);
		n1Y = lY[ playerid ] + SelfieRadius * floatsin(Degree[ playerid ], degrees);
		SetPlayerCameraPos(playerid, n1X, n1Y, lZ[ playerid ] + SelfieHeight);
		SetPlayerCameraLookAt(playerid, lX[ playerid ], lY[ playerid ], lZ[ playerid ]+1);
		SetPlayerFacingAngle(playerid, Degree[ playerid ] - 90.0);
		takingselfie[ playerid ] = true;
		ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
		SendInfoMessage( playerid, "Da pomeras kameru koristi NUM4 i NUM6." );
		SendInfoMessage( playerid, "Da ugasis selfie mod koristi /selfie." );
		return 1;
	}
	if( takingselfie[ playerid ] )
	{
		TogglePlayerControllable( playerid, true );
		SetCameraBehindPlayer( playerid );
		takingselfie[ playerid ] = false;
		ApplyAnimation( playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1 );
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:teamspeak( playerid, params[] )
{
	format( globalstring, sizeof( globalstring ), "%s gleda adresu TeamSpeak3 servera! (/teamspeak)", ImeIgraca( playerid ) );
	PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"IP naseg TeamSpeak3 servera: "col_white"USKORO\n");
	ShowPlayerDialog( playerid, 0, DSMSG, "TeamSpeak3", DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:forum( playerid, params[] )
{
	format( globalstring, sizeof( globalstring ), "%s gleda adresu foruma servera! (/forum)", ImeIgraca( playerid ) );
	PorukaRadius(20.0 , playerid, globalstring, LJUBICASTA );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"Adresa naseg foruma je: "col_white"novaerarp.wixsite.com/portal/forum\n");
	ShowPlayerDialog( playerid, 0, DSMSG, "Forum", DialogStrgEx, "Hvala", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:donacije( playerid, params[] )
{
	ShowPlayerDialog( playerid, dialog_DONATE, DSL, D_NASLOV, "Sta sve moze da se donira?\nKontakt", "Odaberi", "Izlaz" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kupiparkinglistic( playerid, params[] )
{
	//if( PlayerInfo[ playerid ][ pPParking ] > 0 ) return GRESKA( playerid, "Vi vec imate parking listic!" );
	//if( KodParkinga( playerid ) == -1) return GRESKA( playerid, "Niste blizu aparata za kupovinu parking listica!" );
	//if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti van vozila!" );
	//ShowPlayerDialog( playerid, dialog_PARKING, DSL, "Parking", "5 minuta   50$\n10 minuta   100$\n15 minuta   150$\n20 minuta   200$\n30 minuta   300$\n60 minuta   500$", "Odabir", "Odustani" );
	new parkID = GetNearestParkingZone( playerid );
	if( parkID == -1 ) return GRESKA( playerid, "Nisi u nijednoj parking zoni." );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "Broj mesta\tDostupnost\n" );
	for( new i = 0; i < ParkingInfo[ parkID ][ parkMaxParkPlaces ]; i++)
	{
		new string[ 20 ];
		if( ParkingPlaces[ parkID ][ i ][ parkTaken ] ) string = ""col_red"Zauzeto";
		else if( !ParkingPlaces[ parkID ][ i ][ parkTaken ] ) string = ""col_sanm"Slobodno";
		format( DialogStrgEx, sizeof( DialogStrgEx ), ""col_white"%sParking mesto - "col_sanm"%d\t%s\n", DialogStrgEx, i+1, string );
	}
	ShowPlayerDialog( playerid, dialog_PARKING, DIALOG_STYLE_TABLIST_HEADERS, D_NASLOV, DialogStrgEx, D_ODABERI, D_ODUSTANI );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );

	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:granica( playerid, params[] )
{
	if( !IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Morate biti u vozilu." );
	if(PlayerInfo[ playerid ][ xLicna ] == 0) return GRESKA( playerid, "Morate imati licnu kartu za prelazak granice!" );
	if(PlayerInfo[ playerid ][ xPasos ] == 0) return GRESKA( playerid, "Morate imati pasos za prelazak granice!" );
	if( IsPlayerInRangeOfPoint( playerid, 5.0, 50.8649, -1539.2595, 5.2322 ) )//BG-ZG lijeva
	{
		DestroyDynamicObject(rampagranice1_1);
		rampagranice1_1 = CreateDynamicObject(968,55.9345, -1536.3816, 1.7769,0.0000, 0.0000, 82.2394);//newara
		SetTimerEx( "ZatvoriGranice", 7000, false, "i", 1 );
		format( globalstring, sizeof( globalstring ), "* %s pokazuje pasos i licnu kartu cariniku!", ImeIgraca( playerid ));
		PorukaRadius(20.0, playerid, globalstring, LJUBICASTA );
	}
	else if( IsPlayerInRangeOfPoint( playerid, 5.0, 53.5893, -1523.9884, 5.1619 ) )
	{
		DestroyDynamicObject(rampagranice1_2);
		rampagranice1_2 = CreateDynamicObject(968,48.9824, -1527.1010, 1.8731,0.0000, 0.0000, 80.1310);//newara
		SetTimerEx( "ZatvoriGranice", 7000, false, "i", 2 );
		format( globalstring, sizeof( globalstring ), "* %s pokazuje pasos i licnu kartu cariniku!", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else if( IsPlayerInRangeOfPoint( playerid, 5.0, 1750.5269, 530.3855, 27.3948 ) )//BG-SA desna rampa
	{
		DestroyDynamicObject(rampagranice2_1);
		rampagranice2_1 = CreateDynamicObject(968,1748.5144, 535.2263, 23.2715,0.0000, -2.0000, -19.0000);//newara
		SetTimerEx( "ZatvoriGranice", 7000, false, "i", 3 );
		format( globalstring, sizeof( globalstring ), "* %s pokazuje pasos i licnu kartu cariniku!", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else if( IsPlayerInRangeOfPoint( playerid, 5.0, 1733.2133, 532.8638, 27.5273 ) )//BG-SA lijeva rampa
	{
		DestroyDynamicObject(rampagranice2_3);
		rampagranice2_3 = CreateDynamicObject(968,1729.2097, 530.8297, 23.9925,0.0000, -2.0000, -19.0000);//newara
		SetTimerEx( "ZatvoriGranice", 7000, false, "i", 4 );
		format( globalstring, sizeof( globalstring ), "* %s pokazuje pasos i licnu kartu cariniku!", ImeIgraca( playerid ) );
		PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
	}
	else return GRESKA( playerid, "Morate biti kod naplatne rampe." );
	return 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#if nerp_droga == 1
CMD:posadidrogu( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new opcija[20];
	if( sscanf( params, "s[20] ", opcija))
	{
		SendUsageMessage( playerid, "/posadidrogu [ ime ]");
		SendClientMessagee( playerid, BELA, "Marihuana, Kokain");
		return 1;
	}
	if(strcmp(opcija,"marihuana",true) == 0)
	{
		new id = PlayerInfo[ playerid ][ xClan ];
		if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
		if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_MARIHUANA ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
		if( !IsPlayerInRangeOfPoint( playerid, 200.0, OI[ id ][ oDrugField ][ 0 ], OI[ id ][ oDrugField ][ 1 ], OI[ id ][ oDrugField ][ 2 ] ) && inProperty[ playerid ] == -1 && inOrgInt[ playerid ] == -1 ) return GRESKA( playerid, "Saditi samo mozete na poljani, u kuci i bazi organizacije!" );
		new Float:x, Float:y, Float:z;
		if( IgracPosadio[ playerid ] == 7 ) return GRESKA( playerid, "Vec ste posadili 7 sadnica droge sacekajte da sazriju!");
		if( Seeds[ playerid ] < 1 ) return GRESKA( playerid, "Morate imati 1 sjeme za sadnju!");
		if( GetPlayerState( playerid ) == PLAYER_STATE_ONFOOT)
		{
			new plants = -1;
			for( new ix = 1; ix < MAX_PLANTS; ix++ )
			{
				if( DrogaStab[ ix ][ wPlanted ] == 0 )
				{
					plants = ix;
					break;
				}
			}
			if( plants == -1 ) return GRESKA( playerid, "Trenutno ne mozete da sadite drogu." );
			GetPlayerPos( playerid, x, y, z );
			DrogaStab[ plants ][ Plantx ] = x;
			DrogaStab[ plants ][ Planty ] = y;
			DrogaStab[ plants ][ Plantz ] = z-2;
			DrogaStab[ plants ][ wObjectID ] = CreateDynamicObject( 19473, x, y, z-2, 0.0, 0.0, 96, GetPlayerVirtualWorld( playerid ), -1, -1, 200.0 );
			DrogaStab[ plants ][ wPlanted ] = 1;
			DrogaStab[ plants ][ wType ] = 1;
			DrogaStab[ plants ][ wHoursPassed ] = 0;
			strmid( DrogaStab[ plants ][ wOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255);
			DrogaStab[ plants ][ wViwo ] = GetPlayerVirtualWorld( playerid );
			Seeds[ playerid ] -= 1;
			ApplyAnimation( playerid, "BOMBER", "BOM_Plant_Loop",4.0,0,0,0,0,0,1 );
			format( globalstring, sizeof( globalstring ), "%s uzima sjeme droge i sadi ga", ImeIgraca( playerid ) );
			PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			SendInfoMessage( playerid, "Da provjerite rast sadnice /provjeridrogu" );
			IgracPosadio[ playerid ]++;

		} else return GRESKA( playerid, "Morate biti van vozila na travi!");

	}
	//------------------------------------------------------------------------------------------------------------------------------------------
	else if(strcmp(opcija,"kokain",true) == 0)
	{
		new id = PlayerInfo[ playerid ][ xClan ];
		if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
		if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_KOKAIN ) return GRESKA( playerid, "Niste clan organizacije!" );
		if( !IsPlayerInRangeOfPoint( playerid, 200.0, OI[ id ][ oDrugField ][ 0 ], OI[ id ][ oDrugField ][ 1 ], OI[ id ][ oDrugField ][ 2 ] ) && inProperty[ playerid ] == -1 && inOrgInt[ playerid ] == -1 ) return GRESKA( playerid, "Saditi samo mozete na poljani, u kuci i bazi organizacije!" );
		new Float:x, Float:y, Float:z;
		if( IgracPosadio[ playerid ] == 7 ) return GRESKA( playerid, "Vec ste posadili 7 sadnica droge sacekajte da sazriju!");
		if( SeedsK[ playerid ] < 20 ) return GRESKA( playerid, "Morate imati 20 sjemenki za sadnju!");
		if( GetPlayerState( playerid ) == PLAYER_STATE_ONFOOT)
		{
			new plants = -1;
			for( new ix = 1; ix < MAX_PLANTS; ix++ )
			{
				if( DrogaStab[ ix ][ wPlanted ] == 0 )
				{
					plants = ix;
					break;
				}
			}
			if( plants == -1 ) return GRESKA( playerid, "Trenutno ne mozete da sadite drogu." );
			GetPlayerPos( playerid, x, y, z);
			DrogaStab[ plants ][ Plantx ] = x;
			DrogaStab[ plants ][ Planty ] = y;
			DrogaStab[ plants ][ Plantz ] = z-2;
			DrogaStab[ plants ][ wObjectID ] = CreateDynamicObject( 3409, x, y, z-2, 0.0, 0.0, 96, GetPlayerVirtualWorld( playerid ), -1, -1, 200.0 );
			DrogaStab[ plants ][ wPlanted ] = 1;
			DrogaStab[ plants ][ wType ] = 2;
			DrogaStab[ plants ][ wHoursPassed ] = 0;
			strmid( DrogaStab[ plants ][ wOwner ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 255);
			DrogaStab[ plants ][wViwo] = GetPlayerVirtualWorld( playerid );
			SeedsK[ playerid ] -= 20;
			ApplyAnimation( playerid, "BOMBER","BOM_Plant_Loop",4.0,0,0,0,0,0,1);
			format( globalstring, sizeof( globalstring ), "%s uzima sjeme droge i sadi ga", ImeIgraca( playerid ) );
			PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
			IgracPosadio[ playerid ]++;
			SendInfoMessage( playerid, "Da provjerite rast sadnice /provjeridrogu" );

		} else return GRESKA( playerid, "Morate biti van vozila na travi!");

	}

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:oberidrogu( playerid, params[] )
{

	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new found, plantid,kolicina;
	for( new i = 1; i < MAX_PLANTS; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 3.0, DrogaStab[ i ][Plantx], DrogaStab[ i ][Planty], DrogaStab[ i ][Plantz] ) )
		{
			plantid = i;
			found = 1;
			break;
		}
		else continue;
	}
	if( found == 0 ) return GRESKA( playerid, "Niste u blizini sadnice!");
	if( strcmp( ImeIgraca( playerid ), DrogaStab[ plantid ][ wOwner ], true) == 0 )
	{
		if( DrogaStab[ plantid ][ wType ] == 1 )
		{
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 0 && DrogaStab[ plantid ][ wHoursPassed ] < 2 )
			{
				SendInfoMessage(playerid, "Droga nije bila jos zrela za branje i niste nista dobili!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 2 && DrogaStab[ plantid ][ wHoursPassed ] < 4 )
			{
			   SendInfoMessage(playerid, "Obrali ste marihuanu i dobili ste 2 grama!" );
			   PlayerInfo[ playerid ][ xMarihuana ] += 2;
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 4 && DrogaStab[ plantid ][ wHoursPassed ] < 6 )
			{
				SendInfoMessage(playerid, "Obrali ste marihuanu i dobili ste 3 grama!" );
				PlayerInfo[ playerid ][ xMarihuana ] += 3;
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 6 && DrogaStab[ plantid ][ wHoursPassed ] <= 8 )
			{
				SendInfoMessage(playerid, "Obrali ste marihuanu i dobili ste 4 grama!" );
				PlayerInfo[ playerid ][ xMarihuana ] += 4;
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] > 8 && DrogaStab[ plantid ][ wHoursPassed ] <= 9 )
			{
				SendInfoMessage(playerid, "Obrali ste marihuanu i dobili ste 1 gram!" );
				PlayerInfo[ playerid ][ xMarihuana ] += 1;
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] > 9 )
			{
				SendInfoMessage(playerid, "Kasno ste obrali marihuanu i nista niste dobili!" );
			}

			DrogaStab[ plantid ][Plantx] = 0;
			DrogaStab[ plantid ][Planty] = 0;
			DrogaStab[ plantid ][Plantz] = 0;
			DrogaStab[ plantid ][wType] = 0;
			DrogaStab[ plantid ][wPlanted] = 0;
			DrogaStab[ plantid ][wHoursPassed] = 0;
			strmid( DrogaStab[ plantid ][ wOwner ], "Niko", 0, strlen( "Niko" ), 255);
			DrogaStab[ plantid ][wViwo] = GetPlayerVirtualWorld( playerid );
			DestroyDynamicObject( DrogaStab[ plantid ][ wObjectID ] );
			ApplyAnimation( playerid, "BOMBER","BOM_Plant_Loop",4.0,0,0,0,0,0,1);
			format( globalstring, sizeof( globalstring ), "%s se saginje i bere drogu!", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
			IgracPosadio[ playerid ]--;
		}
		else if( DrogaStab[ plantid ][ wType ] == 2 )
		{
			if( DrogaStab[ plantid ][ wHoursPassed ] <= 2 )
			{
				SendInfoMessage(playerid, "Droga nije bila jos zrela za branje i niste nista dobili!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] > 11 )
			{
				SendInfoMessage(playerid, "Kasno ste obrali kokain i nista niste dobili!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 3 && DrogaStab[ plantid ][ wHoursPassed ] <= 10 )
			{
				kolicina = DrogaStab[ plantid ][ wHoursPassed ]*5;
				SendInfoMessage(playerid, "Ubrali ste kokain i dobili %d grama. ", kolicina );
				PlayerInfo[ playerid ][ xKokain ] += kolicina;
			}
			DrogaStab[ plantid ][Plantx] = 0;
			DrogaStab[ plantid ][Planty] = 0;
			DrogaStab[ plantid ][Plantz] = 0;
			DrogaStab[ plantid ][wType] = 0;
			DrogaStab[ plantid ][wPlanted] = 0;
			DrogaStab[ plantid ][wHoursPassed] = 0;
			strmid( DrogaStab[ plantid ][ wOwner ], "Niko", 0, strlen( "Niko" ), 255);
			DrogaStab[ plantid ][wViwo] = GetPlayerVirtualWorld( playerid );
			DestroyDynamicObject( DrogaStab[ plantid ][ wObjectID ] );
			ApplyAnimation( playerid, "BOMBER","BOM_Plant_Loop",4.0,0,0,0,0,0,1);
			format( globalstring, sizeof( globalstring ), "%s se saginje i bere drogu!", ImeIgraca( playerid ) );
			PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
			IgracPosadio[ playerid ]--;
		}
	}
	else return GRESKA( playerid, "Ovo nije vasa sadnica!" );

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:osusidrogu( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new opcija[20];
	if( sscanf( params, "s[20]", opcija ) )
	{
		SendUsageMessage( playerid, "/osusidrogu [ ime ]");
		SendClientMessagee( playerid, BELA, "Marihuana, Kokain");
		return 1;
	}
	if(strcmp(opcija,"marihuana",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
		if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_MARIHUANA ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
		if( PlayerInfo[ playerid ][ xMarihuana ] == 0 ) return GRESKA( playerid, "Nemate marihuane!" );
		if( PlayerInfo[ playerid ][ xDrugCode ][ 0] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 1 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 2 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 3 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 4 ] != 0 ) return GRESKA( playerid, "Nemate mjesta za drogu!");
		if(!IsPlayerInRangeOfPoint( playerid, 3.0,2261.4402,-1151.2351,542.5454) && 
			!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
		{
			return GRESKA( playerid, "Vi niste u kuci ili fabrici droge svoje organizacije!" );
		}
		if( PlayerInfo[ playerid ][ xDrugCode ][ 0 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 0 ] = 1999;
			PlayerInfo[ playerid ][ xDrug ][ 0 ] = PlayerInfo[ playerid ][ xMarihuana ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 1 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 1 ] = 1999;
			PlayerInfo[ playerid ][ xDrug ][ 1 ] = PlayerInfo[ playerid ][ xMarihuana ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 2 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 2 ] = 1999;
			PlayerInfo[ playerid ][ xDrug ][ 2 ] = PlayerInfo[ playerid ][ xMarihuana ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 3 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 3 ] = 1999;
			PlayerInfo[ playerid ][ xDrug ][ 3 ] = PlayerInfo[ playerid ][ xMarihuana ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 4 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 4 ] = 1999;
			PlayerInfo[ playerid ][ xDrug ][ 4 ] = PlayerInfo[ playerid ][ xMarihuana ];
		}
		SendInfoMessage(playerid, "Osusili ste %d grama marihuane i spremna je za koristenje!", PlayerInfo[ playerid ][ xMarihuana ] );
		PlayerInfo[ playerid ][ xMarihuana ] = 0;
		return 1;
	}
	else if(strcmp(opcija,"kokain",true) == 0)
	{
		if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
		if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_KOKAIN ) return GRESKA( playerid, "Vasa organizacije ne koristi ovu vrstu droge!" );
		if( PlayerInfo[ playerid ][ xKokain ] == 0 ) return GRESKA( playerid, "Nemate kokaina!" );
		if( PlayerInfo[ playerid ][ xDrugCode ][ 0] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 1 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 2 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 3 ] != 0 && PlayerInfo[ playerid ][ xDrugCode ][ 4 ] != 0 ) return GRESKA( playerid, "Nemate mjesta za drogu!");
		//if( inProperty[ playerid ] == -1 && inOrgInt[ playerid ] == -1 ) return GRESKA( playerid, "Susiti mozete u kuci i bazi organizacije!" );
		if(!IsPlayerInRangeOfPoint( playerid, 3.0,2261.4402,-1151.2351,542.5454) && 
			!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
		{
			return GRESKA( playerid, "Vi niste u kuci ili fabrici droge svoje organizacije!" );
		}

		if( PlayerInfo[ playerid ][ xDrugCode ][ 0 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 0 ] = 5999;
			PlayerInfo[ playerid ][ xDrug ][ 0 ] = PlayerInfo[ playerid ][ xKokain ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 1 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 1 ] = 5999;
			PlayerInfo[ playerid ][ xDrug ][ 1 ] = PlayerInfo[ playerid ][ xKokain ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 2 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 2 ] = 5999;
			PlayerInfo[ playerid ][ xDrug ][ 2 ] = PlayerInfo[ playerid ][ xKokain ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 3 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 3 ] = 5999;
			PlayerInfo[ playerid ][ xDrug ][ 3 ] = PlayerInfo[ playerid ][ xKokain ];
		}
		else if( PlayerInfo[ playerid ][ xDrugCode ][ 4 ] == 0)
		{
			PlayerInfo[ playerid ][ xDrugCode ][ 4 ] = 5999;
			PlayerInfo[ playerid ][ xDrug ][ 4 ] = PlayerInfo[ playerid ][ xKokain ];
		}

		//PlayerInfo[ playerid ][ xKokain ] += PlayerInfo[ playerid ][ xKokain2 ];
		SendInfoMessage(playerid, "Osusili ste %d grama kokaina i spremna je za koristenje!", PlayerInfo[ playerid ][ xKokain ] );
		PlayerInfo[ playerid ][ xKokain ] = 0;
		return 1;
	}
	return 1;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:provjeridrogu( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new found, plantid;
	for( new i = 1; i < MAX_PLANTS; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 3.0, DrogaStab[ i ][Plantx], DrogaStab[ i ][Planty], DrogaStab[ i ][Plantz] ) )
		{
			plantid = i;
			found = 1;
			break;
		}
		else continue;
	}
	if( found == 0 ) return GRESKA( playerid, "Niste u blizini sadnice!");
	if( strcmp( ImeIgraca( playerid ), DrogaStab[ plantid ][ wOwner ], true) == 0 )
	{
		if( DrogaStab[ plantid ][ wType ] == 1 )
		{
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 0 && DrogaStab[ plantid ][ wHoursPassed ] < 2 )
			{
				SendInfoMessage(playerid, "Jos je rano za branje marihuane!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 2 && DrogaStab[ plantid ][ wHoursPassed ] < 4 )
			{
				SendInfoMessage(playerid, "Od ove sadnice bi dobili 2 grama, sacekajte jos malo!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 4 && DrogaStab[ plantid ][ wHoursPassed ] < 6 )
			{
				SendInfoMessage(playerid, "Od ove sadnice bi dobili 3 grama, sacekajte jos malo!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] >= 6 && DrogaStab[ plantid ][ wHoursPassed ] <= 8 )
			{
				SendInfoMessage(playerid, "Droga je spremna za branje!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] > 8 && DrogaStab[ plantid ][ wHoursPassed ] <= 9 )
			{
				SendInfoMessage(playerid, "Ova sadnica je skoro prezrela i od nje bi dobili 1 gram!" );
			}
			if( DrogaStab[ plantid ][ wHoursPassed ] > 9 )
			{
				SendInfoMessage(playerid, "Sadnica je prezrela i nebi nista dobili od nje!" );
			}
		}
		else if( DrogaStab[ plantid ][ wType ] == 2 )
		{

			if( DrogaStab[ plantid ][ wHoursPassed ] <= 2 )
			{
				SendInfoMessage(playerid, "Jos je rano za branje kokaina!" );
			}
			else if( DrogaStab[ plantid ][ wHoursPassed ] > 11 )
			{
				SendInfoMessage(playerid, "Sadnica je prezrela i nebi nista dobili od nje!" );
			}
			else if( DrogaStab[ plantid ][ wHoursPassed ] >= 3 && DrogaStab[ plantid ][ wHoursPassed ] <= 10 )
			{
				new jebomajku = DrogaStab[ plantid ][ wHoursPassed ]*5;
				SendInfoMessage(playerid, "Od ove sadnice bi dobili %d grama kokaina!", jebomajku );
			}
		}

	} else return GRESKA( playerid, "Vovo nije tvoja sadnica!" );

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:mjesajdrogu( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		GRESKA( playerid, "Ne mozete ovo vi koristiti!");
		return 1;
	}
	new slot,slot2;
	if( sscanf( params, "ii", slot, slot2 ) )
	{
		SendUsageMessage( playerid, "/mjesajdrogu [slot1] [slot2]");
		SendClientMessagee( playerid, BELA, "Da vidite vase droge kucajte /mojadroga!");
		return 1;
	}
	if( slot == slot2 ) return GRESKA( playerid, "Ne mozete isti slot mjesati!" );

	if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
	if( slot2 < 1 || slot2 > 5 ) return GRESKA( playerid, "Pogresan slot!");

	new slotnovi = slot-1;
	new slot2novi = slot2-1;

	if( PlayerInfo[ playerid ][ xDrug ][ slot2novi ] == 0 ) return GRESKA( playerid, "Nemate nista na slotu 2!" );
	if( PlayerInfo[ playerid ][ xDrug ][ slotnovi ] == 0 ) return GRESKA( playerid, "Nemate nista na slotu 1!" );

	new code1 = PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ];
	new code2 = PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ];

	if( IsAMarijuana( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsAMarijuana( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] ) )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsALSD( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsALSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsABlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsABlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsACrack( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsACrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsAMethamphetamine( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsAMethamphetamine( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}
	if( IsAHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) && !IsAHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] )  )
	{
		GRESKA( playerid, "Mjesati mozete samo iste droge!" );
		return 1;
	}

	PlayerInfo[ playerid ][ xDrug ][ slotnovi ] = ( PlayerInfo[ playerid ][ xDrug ][ slotnovi ] + PlayerInfo[ playerid ][ xDrug ][ slot2novi ] );
	PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] = ( ( code1 + code2 )/2 );
	PlayerInfo[ playerid ][ xDrug ][ slot2novi ] = 0;
	PlayerInfo[ playerid ][ xDrugCode ][ slot2novi ] = 0;
	SavePlayer( playerid );
	SendInfoMessage( playerid, "Pomjesali ste drogu i dobili ste %s.", GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ slotnovi ] ) );

	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:koristidrogu( playerid, params[] )
{
		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");
			return 1;
		}
		new slot,slot2;
		if( sscanf( params, "i", slot ) )
		{
			SendUsageMessage( playerid, "/koristidrogu [slot]");
			SendClientMessagee( playerid, BELA, "Da vidite vase droge kucajte /mojadroga!");
			return 1;
		}
		slot2 = slot-1;
		if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
		if( PlayerDrugged[ playerid ] == true ) return GRESKA( playerid, "Vec ste drogirani!");
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozete u vozilu!" );
		if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] == 0) return GRESKA( playerid, "Nemate te droge!");
		if( IsAMarijuana( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( PlayerInfo[ playerid ][ xUpaljac ] == 0) return GRESKA( playerid, "Morate imati upaljac da zapalite joint!");
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			ApplyAnimation( playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0, 1);
			SetPlayerSpecialAction( playerid,21);
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPlayerDrunkLevel( playerid, 10000);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 5 );
			SetPlayerWeather( playerid, -66 );
			DajIgracuGlad( playerid, 10 );
			DodajIgracuArmour( playerid, 25 );

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi joint i pocinje da pusi", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi joint i pocinje da pusi", ImeIgraca( playerid ) );

			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsALSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			SetPlayerDrunkLevel( playerid, 18000);
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 5 );
			SetPlayerWeather( playerid, 2009 );
			DajIgracuGlad( playerid, 10 );
			DodajIgracuArmour( playerid, 25 );

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi tableticu LSD-a i stavlja u usta!", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi tableticu LSD-a i stavlja u usta!", ImeIgraca( playerid ) );

			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsAMethamphetamine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( PlayerInfo[ playerid ][ xUpaljac ] == 0) return GRESKA( playerid, "Morate imati upaljac da zapalite joint!");
			UsingMeth( playerid, PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] );
			SetPlayerDrunkLevel( playerid, 28000);
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 10 );
			ApplyAnimation( playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerWeather( playerid, 1880 );

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi joint i pocinje da pusi", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi joint i pocinje da pusi", ImeIgraca( playerid ) );
			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsACrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( PlayerInfo[ playerid ][ xUpaljac ] == 0) return GRESKA( playerid, "Morate imati upaljac da zapalite joint!");
			UsingCrack( playerid, PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] );
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPlayerDrunkLevel( playerid, 35000);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 5 );
			SetPlayerWeather( playerid, 1782);

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi joint i pocinje da pusi", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi joint i pocinje da pusi", ImeIgraca( playerid ) );
			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsABlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( PlayerInfo[ playerid ][ xUpaljac ] == 0 ) return GRESKA( playerid, "Morate imati upaljac da zapalite joint!");
			UsingBMeth( playerid, PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] );
			SetPlayerDrunkLevel( playerid, 40000);
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 10 );
			ApplyAnimation( playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerWeather( playerid, 1880);

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi joint i pocinje da pusi", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi joint i pocinje da pusi", ImeIgraca( playerid ) );
			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			UsingCocaine( playerid, PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] );
			SetPlayerDrunkLevel( playerid, 45000);
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			SetPVarInt( playerid, "PlayerDruggedSeconds", 5 );
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			SetPlayerWeather( playerid, 1998);

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d povlaci cizu kokaina", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s povlaci cizu kokaina", ImeIgraca( playerid ) );
			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		else if( IsAHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( PlayerInfo[ playerid ][ xInekcija ] == false) return GRESKA( playerid, "Treba vam spric da bi ubrizgali heroin!");
			UsingHeroin( playerid, PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] );
			PlayerInfo[ playerid ][ xDrug ][ slot2 ] --;
			SetPlayerWeather( playerid, 1765);
			SetPlayerDrunkLevel( playerid, 50000);
			PlayerStoned[ playerid ] = true;
			PlayerDrugged[ playerid ] = true;
			SetPlayerTime( playerid, 12, 0);
			PlayerInfo[ playerid ][ xInekcija ] = false;
			SetPVarInt( playerid, "PlayerDruggedSeconds", 10 );
			ApplyAnimation( playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 0, 0, 1);

			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d vadi spric i ubrizgava heroin u venu", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "%s vadi spric i ubrizgava heroin u venu", ImeIgraca( playerid ) );
			PorukaRadius(15.0, playerid, globalstring, LJUBICASTA );
		}
		if( PlayerInfo[ playerid ][ xDrug ][ slot2 ] == 0)
			PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 0;

		return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:kvalitetdroge( playerid, params[] )
{

		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");
			return 1;
		}
		new slot,slot2;
		if( sscanf( params, "i", slot)) return SendUsageMessage( playerid, "/kvalitetdroge [slot]");
		if(slot < 1 || slot > 5) return GRESKA( playerid, "Pogresan slot!");
		slot2 = slot-1;
		if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ]  == 0) return GRESKA( playerid, "Taj slot vam je prazan!");
		if( IsAMarijuana( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
			SendInfoMessage( playerid, "Marihuana: Odlicne kvalitete!");
		if( IsALSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "LSD: Odlicna kvaliteta!");
			if( IsAGoodLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "LSD: Dobra kvaliteta!");
			if( IsABadLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "LSD: Losa kvaliteta!");
			if( IsAVeryBadLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "LSD: Vrlo losa kvaliteta!");
		}
		if( IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Kokain: Odlicna kvaliteta!");
			if( IsAGoodCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Kokain: Dobra kvaliteta!");
			if( IsABadCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Kokain: Losa kvaliteta!");
			if( IsAVeryBadCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Kokain: Vrlo losa kvaliteta!");
		}
		if( IsABlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Blue Metamfetamin: Odlicna kvaliteta!");
			if( IsAGoodBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Blue Metamfetamin: Dobra kvaliteta!");
			if( IsABadBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Blue Metamfetamin: Losa kvaliteta!");
			if( IsAVeryBadBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Blue Metamfetamin: Vrlo losa kvaliteta!");
		}
		if( IsACrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Crack: Odlicna kvaliteta!");
			if( IsAGoodCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Crack: Dobra kvaliteta!");
			if( IsABadCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Crack: Losa kvaliteta!");
			if( IsAVeryBadCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Crack: Vrlo losa kvaliteta!");
		}
		if( IsAMethamphetamine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Metamfetamin: Odlicna kvaliteta!");
			if( IsAGoodMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Metamfetamin: Dobra kvaliteta!");
			if( IsABadMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Metamfetamin: Losa kvaliteta!");
			if( IsAVeryBadMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Metamfetamin: Vrlo losa kvaliteta!");
		}
		if( IsAHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			if( IsAStrongHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Heroin: Odlicna kvaliteta!");
			if( IsAGoodHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Heroin: Dobra kvaliteta!");
			if( IsABadHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Heroin: Losa kvaliteta!");
			if( IsAVeryBadHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				SendInfoMessage( playerid, "Heroin: Vrlo los kvaliteta!");
		}


		return 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:napravidrogu( playerid, params[] )
{
		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");
			return 1;
		}
		new opcija[20],slot,slot2;
		if( sscanf( params, "s[20] ", opcija))
		{
			SendUsageMessage( playerid, "/napravidrogu [ ime ]");
			SendClientMessagee( playerid, BELA, "Meth, LSD, Heroin, Kokain, BlueMeth");
			return 1;
		}
		if(strcmp(opcija,"meth",true) == 0)
		{
			if(!IsPlayerInRangeOfPoint( playerid, 3.0,2258.4045,-1146.3474,542.5454) && 
				!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
			{
				return GRESKA( playerid, "Vi niste u kuci ili u fabrici droge svoje organizacije!" );
			}
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_METH ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new pseudo, solna, sodab, crvenif, razlika = 0;
			if( sscanf(params, "s[20]iiiii", opcija, slot, pseudo, solna, sodab, crvenif ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [pseudo] [solna kis.] [soda b.] [crveni f.]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
			slot2 = slot-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Odabrani slot vam je zauzet!");
			if( solna < 1 || solna > PlayerInfo[ playerid ][ xSolna ] ) return GRESKA( playerid, "Nemate toliko solne kiseline!");
			if( pseudo < 1 || pseudo > PlayerInfo[ playerid ][ xPseudo ] ) return GRESKA( playerid, "Nemate toliko pseudo tableta!");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			if( crvenif < 1 || crvenif > PlayerInfo[ playerid ][ xCrveniF ] ) return GRESKA( playerid, "Nemate toliko crvenog fosfora!");
			if( solna != 8 ) razlika += (random(20-10)+solna);
			if( sodab != 2 ) razlika += (random(20-10)+sodab);
			if( crvenif != 10 ) razlika += (random(20-10)+crvenif);
			if( pseudo != 7 ) razlika += (random(20-10)+pseudo);
			PlayerInfo[ playerid ][ xSolna ] -= solna;
			PlayerInfo[ playerid ][ xPseudo ] -= pseudo;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			PlayerInfo[ playerid ][ xCrveniF ] -= crvenif;
			if( IsAMethamphetamine( 3999-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 3999-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = (random(10-5)+5);
				SendInfoMessage( playerid, "Napravili ste metamfetamin i dobili %d grama!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );
			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			return 1;
		}
		else if(strcmp(opcija,"bluemeth",true) == 0)
		{
			if(!IsPlayerInRangeOfPoint( playerid, 3.0,2258.4045,-1146.3474,542.5454) && 
				!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
			{
				return GRESKA( playerid, "Vi niste u kuci ili u fabrici droge svoje organizacije!" );
			}
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_BMETH ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new metila, solna, sodab, crvenif, razlika = 0;
			if( sscanf(params, "s[20]iiiii", opcija, slot, metila, solna, sodab, crvenif ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [methylam.] [solna kis.] [soda b.] [crveni f.]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
			slot2 = slot-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Odabrani slot vam je zauzet!");
			if( solna < 1 || solna > PlayerInfo[ playerid ][ xSolna ] ) return GRESKA( playerid, "Nemate toliko solne kiseline!");
			if( metila < 1 || metila > PlayerInfo[ playerid ][ xMetilAmin ] ) return GRESKA( playerid, "Nemate toliko methylamina!");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			if( crvenif < 1 || crvenif > PlayerInfo[ playerid ][ xCrveniF ] ) return GRESKA( playerid, "Nemate toliko crvenog fosfora!");
			if( solna != 8) razlika += (random(20-10)+solna);
			if( sodab != 2) razlika += (random(20-10)+sodab);
			if( crvenif != 10) razlika += (random(20-10)+crvenif);
			if( metila != 11) razlika += (random(20-10)+metila);
			PlayerInfo[ playerid ][ xSolna ] -= solna;
			PlayerInfo[ playerid ][ xMetilAmin ] -= metila;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			PlayerInfo[ playerid ][ xCrveniF ] -= crvenif;
			if( IsABlueMeth( 6999-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 6999-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = (random(10-5)+5);
				SendInfoMessage( playerid, "Napravili ste metamfetamin i dobili %d grama!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );

			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			return 1;
		}
		else if(strcmp(opcija,"crack",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_CRACK ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new skokain, skokain2, kkokain, desvoda, sodab, razlika = 0;
			if( sscanf(params, "s[20]iiiii", opcija, slot, skokain, kkokain, desvoda, sodab ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [slot kokaina] [kol. kokaina] [des. voda] [soda b.]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
			slot2 = slot-1;
			skokain2 = skokain-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ skokain2 ] == 0) return GRESKA( playerid, "Slot vam je prazan!");
			if( !IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ skokain2 ] ) ) return GRESKA( playerid, "Nemate kokaina na tom slotu!" );
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Taj slot vam je vec pun!");
			if( desvoda < 1 || desvoda > PlayerInfo[ playerid ][ xDesVoda ] ) return GRESKA( playerid, "Nemate toliko destilovane vode!");
			if( kkokain < 10 || kkokain > 15 || kkokain > PlayerInfo[ playerid ][ xDrug ][ skokain2 ] ) return GRESKA( playerid, "Nemate toliko kokaina (ne moze ispod 10 i iznad 15)");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			if( sodab != 2 ) razlika += (random(20-10)+desvoda);
			if( desvoda != 8 ) razlika += (random(20-10)+sodab);
			PlayerInfo[ playerid ][ xDesVoda ] -= desvoda;
			PlayerInfo[ playerid ][ xDrug ][ skokain2 ] -= kkokain;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			if( IsACrack( 7999-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 7999-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = kkokain;
				SendInfoMessage( playerid, "Napravili ste crack i dobili %d grama!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );

			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			if( PlayerInfo[ playerid ][ xDrug ][ skokain2 ] == 0)
				PlayerInfo[ playerid ][ xDrugCode ][ skokain2 ] = 0;
			return 1;
		}
		else if(strcmp(opcija,"heroin",true) == 0)
		{
			if(!IsPlayerInRangeOfPoint( playerid, 3.0,2258.4045,-1146.3474,542.5454) && 
				!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
			{
				return GRESKA( playerid, "Vi niste u kuci ili u fabrici droge svoje organizacije!" );
			}
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_HEROIN ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new opium, sodab, desvoda, kalcijum, amonijum, razlika = 0;
			if( sscanf(params, "s[20]iiiiii", opcija, slot, opium, sodab, desvoda, kalcijum, amonijum ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [opium] [soda b.] [des. voda] [kaljicum] [amonijum hlorid]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Krivi broj slota!");
			slot2 = slot-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Odabrani slot vam je zauzet!");
			if( desvoda < 1 || desvoda > PlayerInfo[ playerid ][ xDesVoda ] ) return GRESKA( playerid, "Nemate toliko destilovane vode!");
			if( opium < 1 || opium > PlayerInfo[ playerid ][ xOpium ] ) return GRESKA( playerid, "Nemate toliko opijuma!");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			if( kalcijum < 1 || kalcijum > PlayerInfo[ playerid ][ xKalcij ] ) return GRESKA( playerid, "Nemate toliko kalcijuma!");
			if( amonijum < 1 || amonijum > PlayerInfo[ playerid ][ xAmonijH ] ) return GRESKA( playerid, "Nemate toliko amonijum hlorida!");
			if( opium < 1000 || opium > 1500 ) return GRESKA( playerid, "Opiuma mozete staviti 1000 do 1500!" );
			razlika += desvoda;
			razlika += sodab;
			razlika += opium;
			razlika += kalcijum;
			razlika += amonijum;
			PlayerInfo[ playerid ][ xDesVoda ] -= desvoda;
			PlayerInfo[ playerid ][ xOpium ] -= opium;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			PlayerInfo[ playerid ][ xKalcij ] -= kalcijum;
			PlayerInfo[ playerid ][ xAmonijH ] -= amonijum;
			if( IsAHeroin( 6999-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 6999-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = 250;
				SendInfoMessage( playerid, "Napravili ste heroin i dobili %d grama!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );
			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			return 1;
		}
		else if(strcmp(opcija,"kokain",true) == 0)
		{
			if(!IsPlayerInRangeOfPoint( playerid, 3.0,2258.4045,-1146.3474,542.5454) && 
				!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
			{
				return GRESKA( playerid, "Vi niste u kuci ili u fabrici droge svoje organizacije!" );
			}
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_KOKAIN ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new kokain, desvoda, sodab, razlika = 0;
			if( sscanf(params, "s[20]iiii", opcija, slot, kokain, desvoda, sodab ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [kokain] [des. voda] [soda b.]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
			slot2 = slot-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Odabrani slot vam je zauzet!");
			if( desvoda < 1 || desvoda > PlayerInfo[ playerid ][ xDesVoda ] ) return GRESKA( playerid, "Nemate toliko destilovane vode!");
			if( kokain < 1 || kokain > PlayerInfo[ playerid ][ xKokain ] ) return GRESKA( playerid, "Nemate toliko suhog kokaina!");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			razlika += (random(20-10)+desvoda);
			razlika += (random(20-10)+sodab);
			razlika += (random(20-10)+kokain);
			PlayerInfo[ playerid ][ xDesVoda ] -= desvoda;
			PlayerInfo[ playerid ][ xKokain ] -= kokain;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			if( IsACocaine( 6088-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 6088-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = (random(4)+10);
				SendInfoMessage( playerid, "Napravili ste kokain i dobili %d grama!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );

			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			return 1;
		}
		else if(strcmp(opcija,"lsd",true) == 0)
		{
			if(!IsPlayerInRangeOfPoint( playerid, 3.0,2258.4045,-1146.3474,542.5454) && 
				!(inDrugFactory[playerid]==PlayerInfo[playerid][xClan]) && inProperty[ playerid ] == -1)
			{
				return GRESKA( playerid, "Vi niste u kuci ili u fabrici droge svoje organizacije!" );
			}
			new lysacid, desvoda, sodab, razlika = 0;
			if( sscanf(params, "s[20]iiii", opcija, slot, lysacid, desvoda, sodab ) ) return SendUsageMessage( playerid, "/napravidrogu [ime] [slot] [lys. acid] [des. voda] [soda b.]");
			if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
			slot2 = slot-1;
			if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] != 0) return GRESKA( playerid, "Odabrani slot vam je zauzet!");
			if( desvoda < 1 || desvoda > PlayerInfo[ playerid ][ xDesVoda ] ) return GRESKA( playerid, "Nemate toliko destilovane vode!");
			if( lysacid < 1 || lysacid > PlayerInfo[ playerid ][ xLysAcid ] ) return GRESKA( playerid, "Nemate toliko Lysergic acida!");
			if( sodab < 1 || sodab > PlayerInfo[ playerid ][ xSodaB ] ) return GRESKA( playerid, "Nemate toliko sode bikarbone!");
			if( desvoda != 19 ) razlika += (random(20-10)+desvoda);
			if( sodab != 2 ) razlika += (random(20-10)+sodab);
			if( lysacid != 7 ) razlika += (random(20-10)+lysacid);
			PlayerInfo[ playerid ][ xDesVoda ] -= desvoda;
			PlayerInfo[ playerid ][ xLysAcid ] -= lysacid;
			PlayerInfo[ playerid ][ xSodaB ] -= sodab;
			if( IsALSD( 2999-razlika ) )
			{
				PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 2999-razlika;
				PlayerInfo[ playerid ][ xDrug ][ slot2 ] = (random(3)+3);
				SendInfoMessage( playerid, "Napravili ste LSD i dobili %d tableta!", PlayerInfo[ playerid ][ xDrug ][ slot2 ] );

			}
			else
			{
				SendInfoMessage( playerid, "Niste uspjeli napraviti smjesu!");
			}
			return 1;
		}

		return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:mojadroga( playerid, params[] )
{
	/*new coordsstring[128];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, ""col_balkanstory"-------------------------------------------------------------\n\n");
	format( coordsstring, sizeof( coordsstring ), ""col_balkanstory"Droga 1 | {FFFFFF}%s (%dg)\n",GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ 0 ] ), PlayerInfo[ playerid ][ xDrug ][ 0 ]  );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_balkanstory"Droga 2 | {FFFFFF}%s (%dg)\n",GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ 1 ] ), PlayerInfo[ playerid ][ xDrug ][ 1 ]  );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_balkanstory"Droga 3 | {FFFFFF}%s (%dg)\n",GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ 2 ] ), PlayerInfo[ playerid ][ xDrug ][ 2 ]  );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_balkanstory"Droga 4 | {FFFFFF}%s (%dg)\n",GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ 3 ] ), PlayerInfo[ playerid ][ xDrug ][ 3 ]  );
	strcat( DialogStrgEx, coordsstring );
	format( coordsstring, sizeof( coordsstring ), ""col_balkanstory"Droga 5 | {FFFFFF}%s (%dg)\n",GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ 4 ] ), PlayerInfo[ playerid ][ xDrug ][ 4 ] );
	strcat( DialogStrgEx, coordsstring );
	strcat( DialogStrgEx, "\n"col_balkanstory"-------------------------------------------------------------");
	ShowPlayerDialog( playerid, dialog_DROGAIGRACA, DSMSG, "Vase droge", DialogStrgEx, "U redu", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));*/
	SendInfoMessage(playerid, "Kucajte /itds i odaberite OSTALO, a zatim 'moje droge'.");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:dajdrogu( playerid, params[] )
{
		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");
			return 1;
		}
		new igrac,slot,slot2,kolicina;
		if( sscanf( params, "uii", igrac, slot, kolicina ) )
		{
			SendUsageMessage( playerid, "/dajdrogu [ ID/Ime ] [ slot ] [ kolicina ]");
			SendClientMessagee( playerid, BELA, "Da vidite vase droge kucajte /mojadroga!");
			return 1;
		}
		if( IsPlayerConnected( igrac ) )
		{
			if( igrac != INVALID_PLAYER_ID )
			 {
				if( igrac == playerid ) return GRESKA( playerid, "Ne mozes sebi dati!");
				slot2 = slot-1;
				if( IsPlayerNearPlayer( 5.0, playerid, igrac ) )
				{
					if(PlayerInfo[ igrac ][ xDrugCode ][ 0 ] != 0 && PlayerInfo[ igrac ][ xDrugCode ][ 1 ] != 0 && PlayerInfo[ igrac ][ xDrugCode ][ 2 ] != 0 && PlayerInfo[ igrac ][ xDrugCode ][ 3 ] != 0 && PlayerInfo[ igrac ][ xDrugCode ][ 4 ] != 0 )
					{
						return GRESKA( playerid, "Igracu su puni slotovi!");
					}
					if( slot < 1 || slot > 5 ) return GRESKA( playerid, "Pogresan slot!");
					if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] == 0) return GRESKA( playerid, "Izabrabi slot je prazan!");
					if( kolicina < 1 || kolicina > 100 ) return GRESKA( playerid, "Ne mozete ispod 1 i iznad 100 grama/tableta!");
					if( PlayerInfo[ playerid ][ xDrug ][slot2] < kolicina ) return GRESKA( playerid, "Nemate toliko droge!");
					SendInfoMessage( playerid,"Igrac %s vam daje %d grama droge %s", ImeIgraca( playerid ), kolicina, GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) );
					SendInfoMessage( playerid, "Dali ste igracu %s %d grama droge %s", ImeIgraca( igrac ), kolicina, GetDrugNameByDrugID( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) );
					if( PlayerInfo[ igrac ][ xDrugCode ][ 0 ] == 0)
					{
						PlayerInfo[ igrac ][ xDrugCode ][ 0 ] = PlayerInfo[ playerid ][ xDrugCode ][ slot2 ];
						PlayerInfo[ igrac ][ xDrug ][ 0 ] = kolicina;
					}
					else if( PlayerInfo[ igrac ][ xDrugCode ][ 1 ] == 0)
					{
						PlayerInfo[ igrac ][ xDrugCode ][ 1 ] = PlayerInfo[ playerid ][ xDrugCode ][ slot2 ];
						PlayerInfo[ igrac ][ xDrug ][ 1 ] = kolicina;
					}
					else if( PlayerInfo[ igrac ][ xDrugCode ][ 2 ] == 0)
					{
						PlayerInfo[ igrac ][ xDrugCode ][ 2 ] = PlayerInfo[ playerid ][ xDrugCode ][ slot2 ];
						PlayerInfo[ igrac ][ xDrug ][ 2 ] = kolicina;
					}
					else if( PlayerInfo[ igrac ][ xDrugCode ][ 3 ] == 0)
					{
						PlayerInfo[ igrac ][ xDrugCode ][ 3 ] = PlayerInfo[ playerid ][ xDrugCode ][ slot2 ];
						PlayerInfo[ igrac ][ xDrug ][ 3 ] = kolicina;
					}
					else if( PlayerInfo[ igrac ][ xDrugCode ][ 4 ] == 0)
					{
						PlayerInfo[ igrac ][ xDrugCode ][ 4 ] = PlayerInfo[ playerid ][ xDrugCode ][ slot2 ];
						PlayerInfo[ igrac ][ xDrug ][ 4 ] = kolicina;
					}
					if( ( PlayerInfo[ playerid ][ xDrug ][ slot2 ]-kolicina ) < 1 )
						PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] = 0;
					PlayerInfo[ playerid ][ xDrug ][ slot2 ] -= kolicina;

					SavePlayer( playerid );
					SavePlayer( igrac );
				} else GRESKA( playerid, "Igrac nije u blizini!");
			}
		}
		return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:kupisjeme( playerid, params[] )
{
		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");
			return 1;
		}
		new opcija[20],kolicina;
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2611.6262,-1486.9033,16.5176 ) ) return GRESKA( playerid, "Niste na crnom trzistu!" );
		if( sscanf( params, "s[20]i", opcija, kolicina))
		{
			SendUsageMessage( playerid, "/kupisjeme [ ime ] [ kolicina ]");
			SendClientMessagee( playerid, BELA, "Marihuana, Kokain");
			return 1;
		}
		if(strcmp(opcija,"marihuana",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_MARIHUANA ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new cena;
			if(kolicina < 1 || kolicina > 1000) return GRESKA( playerid, "Ne mozes vise od 1000 sjemena uzei!");
			cena = kolicina*10;
			if( PlayerInfo[ playerid ][ xNovac ] < cena) return GRESKA( playerid, "Nemate novca za tu kolicinu sjemena (1 sjeme = 10$)");
			Seeds[ playerid ] += kolicina;
			DajIgracuNovac( playerid, -cena );
			SendInfoMessage( playerid, "Kupili ste %d sjemena marihuane i platili %d$.", kolicina, cena);
			return 1;
		}
		else if(strcmp(opcija,"kokain",true) == 0)
		{
			if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
			if( OI[ PlayerInfo[ playerid ][ xClan ] ][ oControlType ] != CTIP_KOKAIN ) return GRESKA( playerid, "Vasa organizacija ne koristi ovu vrstu droge!" );
			new cena;
			if(kolicina < 1 || kolicina > 1000) return GRESKA( playerid, "Ne mozes vise od 1000 sjemena uzei!");
			cena = kolicina*15;
			if( PlayerInfo[ playerid ][ xNovac ] < cena) return GRESKA( playerid, "Nemate novca za tu kolicinu sjemena (1 sjeme = 15$)");
			SeedsK[ playerid ] += kolicina;
			DajIgracuNovac( playerid, -cena );
			SendInfoMessage( playerid, "Kupili ste %d sjemenki kokaina i platili %d$.", kolicina, cena);
			return 1;
		}

		return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:ilsupstance( playerid, params[] )
{
		if( GetFactionType( playerid ) == ORG_TIP_PD )
		{
			GRESKA( playerid, "Ne mozete ovo vi koristiti!");//dialog_BIRAILSUPSTANCE
			return 1;
		}
		if( !IsPlayerInRangeOfPoint( playerid, 3.0, 2794.4043,-2411.6677,13.6320 ) ) return GRESKA( playerid, "Niste kod paketa u hangaru!" );
		if( PlayerInfo[ playerid ][ xClan ] == 0 ) return GRESKA( playerid, "Niste clan organizacije!" );
		if( GetFactionType( playerid ) != ORG_TIP_MAFIJA ) return GRESKA( playerid, "Ovo mogu koristiti samo mafije!" );
		ShowPlayerDialog( playerid, dialog_BIRAILSUPSTANCE, DSL, "Ilegalne supstance", "Opium\nMethylamin", "Ok", "" );
		/*if(strcmp(opcija,"opium",true) == 0)
		{
			new cena;
			if(kolicina < 500 || kolicina > 2000) return GRESKA( playerid, "Ne mozete uzeti vise od 2000 a manje od 500 grama opium!");
			cena = kolicina*2;
			if( PlayerInfo[ playerid ][ xNovac ] < cena) return GRESKA( playerid, "Nemate dovoljno novca!Jedan gram kosta 2$");
			new poz = random( sizeof( Randomilegal ) );
			VrstaIlegala[ playerid ] = 1;
			KolicinaIlegala[ playerid ] = kolicina;
			Dimi_SetPlayerCheckpoint( playerid, Randomilegal[poz][ 0 ], Randomilegal[poz][ 1 ], Randomilegal[poz][ 2 ], 5.0);
			CheckpointStatus[ playerid ] = 11;
			SendClientMessagee( playerid, UGBOJA, "Odi do markera i pokupi svoju robu." );
			return 1;
		}
		else if(strcmp(opcija,"methylamin",true) == 0)
		{
			new cena;
			if( kolicina < 300 || kolicina > 800 ) return GRESKA( playerid, "Ne mozete uzeti vise od 800 a manje od 300 grama methylamina!");
			cena = kolicina*3;
			if( PlayerInfo[ playerid ][ xNovac ] < cena ) return GRESKA( playerid, "Nemate dovoljno novca!Jedan gram kosta 3$");
			new poz = random( sizeof( Randomilegal ) );
			VrstaIlegala[ playerid ] = 2;
			KolicinaIlegala[ playerid ] = kolicina;
			Dimi_SetPlayerCheckpoint( playerid, Randomilegal[poz][ 0 ], Randomilegal[poz][ 1 ], Randomilegal[poz][ 2 ], 5.0);
			CheckpointStatus[ playerid ] = 11;
			SendClientMessagee( playerid, UGBOJA, "Odi do markera i pokupi svoju robu." );
			return 1;
		}*/

		return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:pokazidrogu( playerid, params[] )
{
		new slot,slot2;
		if( sscanf( params, "i",  slot)) return SendUsageMessage( playerid, "/pokazidrogu [slot]");
		if(slot < 1 || slot > 5) return GRESKA( playerid, "Pogresan slot!");
		slot2 = slot-1;
		if( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ]  == 0) return GRESKA( playerid, "Izabrani slot je prazan!");
		if( IsAMarijuana( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi kesicu sa marihuanom odlicne kvalitete.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}
		if( IsALSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi tabletice LSD-a.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
			{
				format( globalstring, sizeof( globalstring ), "* Tabletice su odlice kvalitete (( %s )).", ImeIgraca( playerid ) );
				PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			}
			if( IsAGoodLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
			{
				format( globalstring, sizeof( globalstring ), "* Tabletice su dobre kvalitete (( %s )).", ImeIgraca( playerid ) );
				PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			}
			if( IsABadLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
			{
				format( globalstring, sizeof( globalstring ), "* Tabletice su lose kvalitete (( %s )).", ImeIgraca( playerid ) );
				PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			}
			if( IsAVeryBadLSD( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
			{
				format( globalstring, sizeof( globalstring ), "* Tabletice su vrlo lose kvalitete (( %s )).", ImeIgraca( playerid ) );
				PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			}
		}
		if( IsACocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi kesicu kokaina.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Prah je veoma cist bez primjesa (( %s )).", ImeIgraca( playerid ) );
			if( IsAGoodCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Prah je dobre kvalitete uz malo primjesa (( %s )).", ImeIgraca( playerid ) );
			if( IsABadCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Prah je necist i sadrzi vecu kolicinu primjesa (( %s )).", ImeIgraca( playerid ) );
			if( IsAVeryBadCocaine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Prah je vrlo lose kvalitete sa puno primjesa (( %s )).", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}
		if( IsACrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi kesicu cracka.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su odlicne (( %s )).", ImeIgraca( playerid ) );
			if( IsAGoodCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su dobre (( %s )).", ImeIgraca( playerid ) );
			if( IsABadCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta je losa i boja je nesto drugacija (( %s )).", ImeIgraca( playerid ) );
			if( IsAVeryBadCrack( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su veoma lose (( %s )).", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}
		if( IsAHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi heroin.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su vrhunske kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsAGoodHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su dobre kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsABadHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja je losa (( %s )).", ImeIgraca( playerid ) );
			if( IsAVeryBadHeroin( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su jako lose kvalitete (( %s )).", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}
		if( IsABlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi blue meth.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su vrhunske kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsAGoodBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su dobre kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsABadBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su lose kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsAVeryBadBlueMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su jako lose kvalitete (( %s )).", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}
		if( IsAMethamphetamine( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
		{
			format( globalstring, sizeof( globalstring ), "* %s vadi blue meth.", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
			if( IsAStrongMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su vrhunske kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsAGoodMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su dobre kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsABadMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su lose kvalitete (( %s )).", ImeIgraca( playerid ) );
			if( IsAVeryBadMeth( PlayerInfo[ playerid ][ xDrugCode ][ slot2 ] ) )
				format( globalstring, sizeof( globalstring ), "* Kvaliteta i boja su jako lose kvalitete (very bad) (( %s )).", ImeIgraca( playerid ) );
			PorukaRadius( 5.0, playerid, globalstring, LJUBICASTA );
		}

		return 1;
}
#endif
//////////////////////////////////////////////////////////////////////////////////
CMD:pomoc( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	strcat( DialogStrgEx, "Account\nTelefon\nChat\nImovina\nVozilo\nImanje\nOrganizacija\nPosao\nAnimacije" );
	ShowPlayerDialog( playerid, dialog_LISTAKOMANDI, DSL, D_NASLOV, DialogStrgEx, "Izaberi", "Izlaz" );
	
	//ShowPlayerDialog( playerid, dialog_HELP, DSMSG, D_NASLOV, DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pokazidozvole( playerid, params[] )
{
	new playerID;
	if( sscanf( params, "u", playerID ) ) return SendUsageMessage( playerid, "/pokazidozvole [ ID/Ime ]");
	if( IsPlayerConnected( playerID ) )
	{
		if( playerID != INVALID_PLAYER_ID )
		{
			if( IsPlayerNearPlayer( 8.0, playerid, playerID ) )
			{
				if( playerid == playerID ) return GRESKA( playerid, "Ne mozes pokazati license samom sebi, koristi /dozvole!");
				new string[ 64], text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];

				if( PlayerInfo[ playerid ][ xVozacka ] > 0 ) { text1 = "Da"; } else { text1 = "Ne"; }
				if( PlayerInfo[ playerid ][ xMotorska ] > 0 ) { text4 = "Da"; } else { text4 = "Ne"; }
				if( PlayerInfo[ playerid ][ xKamionskaC1 ] > 0 ) { text2 = "Da"; } else { text2 = "Ne"; }
				if( PlayerInfo[ playerid ][ xKamionskaC2 ] > 0 ) { text3 = "Da"; } else { text3 = "Ne"; }
				if( PlayerInfo[ playerid ][ xKamionskaC3 ] > 0 ) { text5 = "Da"; } else { text5 = "Ne"; }
				if( PlayerInfo[ playerid ][ xBrodska ] > 0 ) { text6 = "Da"; } else { text6 = "Ne"; }
				if( PlayerInfo[ playerid ][ xLetelica ] > 0 ) { text7 = "Da"; } else { text7 = "Ne"; }
				//if( PlayerInfo[ playerid ][ xGunLicense ] > 0 ) { text8 = "Da"; } else { text8 = "Ne"; }
				format(string, sizeof(string),""col_balkanstory"Ime: "col_white"%s", ImeIgraca( playerid ) );
				format(DialogStrgEx, sizeof(DialogStrgEx),""col_balkanstory"Dozvola za motor[A]: "col_white"%s\n"col_balkanstory"Dozvola za auto[B]: "col_white"%s\n"col_balkanstory"Dozvola za kombi[C1]: "col_white"%s\n"col_balkanstory"Dozvola za kamion[C2]: "col_white"%s\n"col_balkanstory"Dozvola za kamion sa prikolicom[C3]: "col_white"%s\n"col_balkanstory"Dozvola za brod[D]: "col_white"%s\n"col_balkanstory"Dozvola za letelicu[F]: "col_white"%s",text4,text1,text2,text3,text5,text6,text7);
				ShowPlayerDialog( playerID, 0, DSMSG, string, DialogStrgEx, "Ok", "" );
				strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
				format( globalstring, sizeof( globalstring ), "* %s pokazuje dozvole %s.", ImeIgraca( playerid ), ImeIgraca( playerID ) );
				PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );

			} else GRESKA( playerid, "Taj igrac mora biti u vasoj blizini!");
		}
	} else GRESKA( playerid, "Taj igrac nije povezan na server!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:dozvole( playerid, params[] )
{
	new string[ 64], text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
	if( PlayerInfo[ playerid ][ xVozacka ] > 0 ) { text1 = "Da"; } else { text1 = "Ne"; }
	if( PlayerInfo[ playerid ][ xMotorska ] > 0 ) { text4 = "Da"; } else { text4 = "Ne"; }
	if( PlayerInfo[ playerid ][ xKamionskaC1 ] > 0 ) { text2 = "Da"; } else { text2 = "Ne"; }
	if( PlayerInfo[ playerid ][ xKamionskaC2 ] > 0 ) { text3 = "Da"; } else { text3 = "Ne"; }
	if( PlayerInfo[ playerid ][ xKamionskaC3 ] > 0 ) { text5 = "Da"; } else { text5 = "Ne"; }
	if( PlayerInfo[ playerid ][ xBrodska ] > 0 ) { text6 = "Da"; } else { text6 = "Ne"; }
	if( PlayerInfo[ playerid ][ xLetelica ] > 0 ) { text7 = "Da"; } else { text7 = "Ne"; }
	//if( PlayerInfo[ playerid ][ xGunLicense ] > 0 ) { text8 = "Da"; } else { text8 = "Ne"; }
	format(string, sizeof(string),""col_balkanstory"Ime: "col_white"%s", ImeIgraca( playerid ) );
	format(DialogStrgEx, sizeof(DialogStrgEx),""col_balkanstory"Dozvola za motor[A]: "col_white"%s\n"col_balkanstory"Dozvola za auto[B]: "col_white"%s\n"col_balkanstory"Dozvola za kombi[C1]: "col_white"%s\n"col_balkanstory"Dozvola za kamion[C2]: "col_white"%s\n"col_balkanstory"Dozvola za kamion sa prikolicom[C3]: "col_white"%s\n"col_balkanstory"Dozvola za brod[D]: "col_white"%s\n"col_balkanstory"Dozvola za letelicu[F]: "col_white"%s",text4,text1,text2,text3,text5,text6,text7);
	ShowPlayerDialog( playerid, 0, DSMSG, string, DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:cctv( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if( PlayerInfo[ playerid ][ xZatvor ] > 0 ) return GRESKA( playerid, "Ne mozes kamere dok si u zatvoru." );
		if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
		//if( inOrgInt[ playerid ] != PlayerInfo[ playerid ][ xClan ] ) return GRESKA( playerid, "Morate biti u interijeru vase organizacije." );

		if( (TipVozila[ vehicleid ] == ORGANIZACIJSKO_VOZILO && OrgaVozila[ vehicleid ] == PlayerInfo[ playerid ][ xClan ]) || inOrgInt[ playerid ] == PlayerInfo[ playerid ][ xClan ] )
		{
			ShowPlayerDialog( playerid, dialog_CCTV, DSL, "CCTV kamere", "Kamera 1\nKamera 2\nKamera 3\nKamera 4\nKamera 5", D_ODABERI, D_ODUSTANI );
			TogglePlayerControllable( playerid, false );
			WatchingTV{ playerid } = 1;
			SendInfoMessage( playerid, "Da prestanete gledati kameru /ugasikamere." );
			
		}else return GRESKA( playerid, "Nadgledati mozete iz svoje baze ili vozila vase organizacije!" );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ugasikamere( playerid, params[] )
{
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
		if( WatchingTV{ playerid } == 1 )
		{
			new id = PlayerInfo[ playerid ][ xClan ];
			Dimi_SetPlayerPos( playerid, OI[ id ][ oPozIntX ], OI[ id ][ oPozIntY ], OI[ id ][ oPozIntZ ] );
			ShowLoadingTextdraws(playerid, true); SendAcMessage(playerid, ""SERVERBOJA_AQUA"Anti-SK"col_white" zastita za Vas je pokrenuta, sacekajte - istice za nekoliko sekundi!");
			SetTimerEx( "SlobodnoSada", 2000, false, "i", playerid );
			SetCameraBehindPlayer( playerid );
			TogglePlayerControllable( playerid, false );
			SetPlayerInterior( playerid, OI[ id ][ oInt ] );
			SetPlayerVirtualWorld( playerid, OI[ id ][ oVw ] );
			WatchingTV{ playerid } = 0;
			SendInfoMessage( playerid, "Ugasili ste sigurnosne kamere." );
			
		} else return GRESKA( playerid, "Niste ni upalili kamere!" );
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:orghelp( playerid, params[] )
{
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		strcat( DialogStrgEx, ""col_balkanstory"Clan | "col_white"/duty /r /f /d /alcotest /databaza /uhapsi /zavezi /odvezi /pu /cctv /ugasikamere\n" );
		strcat( DialogStrgEx, ""col_balkanstory"Clan | "col_white"/tazer /m /wanted /su /blokada /oblokadu /oblokade /bk /bkc /govrepair /undercover /pdizbaci\n" );
		strcat( DialogStrgEx, ""col_balkanstory"Clan | "col_white"/ram /pretresi /oduzmi /ticket /orgstats /rotacija /gov /pokaziznacku /ocisti /suspend\n" );
		strcat( DialogStrgEx, ""col_balkanstory"Clan | "col_white"/opisosumnjicenog /skinistit /oprema /vuci /pusti /proveripojas /oznaka\n" );
		strcat( DialogStrgEx, ""col_balkanstory"Clan | "col_white"/narcotest /unistidrogu /unistioruzje /srusibvrata /namestibvrata\n" );
		strcat( DialogStrgEx, ""col_balkanstory"Lider | "col_white"/lider" );
		ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, DialogStrgEx, "Ok", "" );
		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ));
		
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:namestibvrata( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( PljackaUToku == true ) return GRESKA( playerid, "Ne mozes ovo dok je pljacka u toku." );
	if( !IsPlayerInRangeOfPoint( playerid, 5, 1470.7416, -1015.8396, 2045.6861 ) ) return GRESKA( playerid, "Morate biti pored vrata banke." );
	if( SruseniLaseri == true )
	{
		LaseriBanka[ 0 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2044.71631,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 1 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2045.30627,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 2 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2045.89624,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 3 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2046.48633,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 4 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2047.07629,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 5 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2047.66626,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 6 ] = CreateDynamicObject(18643, 1485.53259, -1006.33038, 2048.25635,   0.00000, 0.00000, 180.00000);
		LaseriBanka[ 7 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2048.25635,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 8 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2047.66626,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 9 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2047.07629,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 10 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2046.48633,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 11 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2045.89624,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 12 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2045.30627,   0.00000, 0.00000, 0.00000);
		LaseriBanka[ 13 ] = CreateDynamicObject(18643, 1456.26855, -1006.33038, 2044.71631,   0.00000, 0.00000, 0.00000);
		SruseniLaseri = false;
	}
	if( VrataBankeSrusena == true )
	{
		if( IsValidDynamicObject( VrataSefaBanke ) )
			DestroyDynamicObject( VrataSefaBanke );
		VrataSefaBanke = CreateDynamicObject(2634, 1470.7053, -1015.7482, 2046.0902,   0.0000, 0.0000, 0.0000);//normala
		VrataBankeSrusena = false;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:srusibvrata( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	if( !IsPlayerInRangeOfPoint( playerid, 5, 1470.7416, -1015.8396, 2045.6861 ) ) return GRESKA( playerid, "Morate biti pored vrata banke." );
	if( SruseniLaseri == false )
	{
		for( new i = 0; i < 14; i++ )
		{
			if( IsValidDynamicObject( LaseriBanka[ i ] ) )
				DestroyDynamicObject( LaseriBanka[ i ] );
		}

		SruseniLaseri = true;
	}
	if( VrataBankeSrusena == false )
	{
		if( IsValidDynamicObject( VrataSefaBanke ) )
			DestroyDynamicObject( VrataSefaBanke );
		VrataSefaBanke = CreateDynamicObject(2634, 1470.7053, -1017.2322, 2044.7122, 97.0550, 0.0000, 0.0000);//srusena
		VrataBankeSrusena = true;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
#if nerp_droga == 1
CMD:unistidrogu( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	new found, plantid;
	for( new i = 1; i < MAX_PLANTS; i++)
	{
		if( IsPlayerInRangeOfPoint( playerid, 5.0, DrogaStab[ i ][ Plantx ], DrogaStab[ i ][ Planty ], DrogaStab[ i ][ Plantz ] ) )
		{
			plantid = i;
			found = 1;
			break;
		}
		else
			continue;
	}
	if( found == 0 ) return GRESKA( playerid, "Niste blizu sadnice droge!");

	DrogaStab[ plantid ][ Plantx ] = 0;
	DrogaStab[ plantid ][ Planty ] = 0;
	DrogaStab[ plantid ][ Plantz ] = 0;
	DrogaStab[ plantid ][ wType ] = 0;
	DrogaStab[ plantid ][ wPlanted ] = 0;
	DrogaStab[ plantid ][ wHoursPassed ] = 0;
	strmid( DrogaStab[ plantid ][ wOwner ], "Niko", 0, strlen( "Niko" ), 255);
	DrogaStab[ plantid ][ wViwo ] = 0;
	DestroyDynamicObject( DrogaStab[ plantid ][ wObjectID ] );
	SendInfoMessage( playerid, "Unistili ste ovu sadnicu droge!" );
		
	return 1;
}
#endif
//////////////////////////////////////////////////////////////////////////////////
CMD:ocisti( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/ocisti [ ID/Ime ] ");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID Korisnika");
	if( GetFactionType( id ) == ORG_TIP_PD ) return GRESKA( playerid, "Ne mozes ocistiti WL PD/SAJ clanu." );
	PlayerInfo[ id ][ xWanted ] = 0;
	Dimi_SetPlayerWantedLevel( id, PlayerInfo[ id ][ xWanted ] );
	strmid( ZlocinInfo[ id ][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid( ZlocinInfo[ id ][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid( ZlocinInfo[ id ][zZlocin], "Nema", 0, strlen("Nema"), 255);
	SendClientMessageEx( playerid, BELA, "Obrisali ste dosije gradjaninu %s.", ImeIgraca( id ) );
	format( globalstring, sizeof( globalstring ), "| CLEARWL | %s je ocistio dosije igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
	AdminPoruka( SVETLOCRVENA, globalstring );
	format( globalstring, sizeof globalstring, "| CLEARWL | %s je ocistio dosije igracu %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
	OrgPorukaLeader( PlayerInfo[ playerid ][ xClan ], 0xD2CFCFFF, globalstring );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:otvoricelije( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	UpravljanjeCelijama( true );
	SendInfoMessage( playerid, "Otvorili ste celije u zatvoru." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:zatvoricelije( playerid, params[] )
{
	if( GetFactionType( playerid ) != ORG_TIP_PD ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	if( PoliceDuty[ playerid ] == false ) return GRESKA( playerid, "Da bi koristio ovu komandu moras biti policajac na duznosti!");
	UpravljanjeCelijama( false );
	SendInfoMessage( playerid, "Zatvorili ste celije u zatvoru." );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prisonhelp( playerid, params[] )
{
	new prisonhelp[ 128 ];
	if( GetFactionType( playerid ) == ORG_TIP_PD )
	{
		strcat( prisonhelp, ""col_balkanstory"Komande | "col_white"/otvoricelije /zatvoricelije /zatvorenici\n" );
		strcat( prisonhelp, ""col_balkanstory"Kapije | "col_white"Kapije se otvaraju pritiskom na slovo C." );
		ShowPlayerDialog( playerid, 0, DSMSG, D_NASLOV, prisonhelp, "Ok", "" );
	} else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:doniraj( playerid, params[] )
{
	new cash;
	if( sscanf( params, "i", cash ) )
	{
		SendUsageMessage( playerid, "/doniraj [ iznos ]");
		return 1;
	}
	if( !IsPlayerInRangeOfPoint( playerid, 10.0, 1133.5189, -936.0316, 47.7939 ) ) return GRESKA( playerid, "Morate biti pored bandere." );
	if( cash < 50000 ) return GRESKA( playerid, "Iznos ne moze biti manji od 50.000$." );
	if( PlayerInfo[ playerid ][ xNovac ] < cash ) return GRESKA( playerid, "Nemate toliko novca." );
	DajIgracuNovac( playerid, -cash );
	format( globalstring, sizeof( globalstring ), "|| CNN News || "col_white"%s je upravo donirao %d$ gradu!", ImeIgraca( playerid ), cash );
	SCMA( 0xFFA500AA, globalstring );
	
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( i != playerid )
		{
			if( IsPlayerInRangeOfPoint( i, 10.0, 1133.5189, -936.0316, 47.7939 ) )
			{
				DajIgracuNovac( i, cash/100 );
				SendClientMessageEx( i, -1, "Dobili ste %d$, od donacije gradu.", cash/100 );
			}
		}
	
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:podigni( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	new cashdeposit,
		string[ 64 ];

	if( !IsPlayerInRangeOfPoint(playerid,2.0,1467.1327,-1006.9041,2058.0039) ) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	if( sscanf( params, "i", cashdeposit ) ) {
	
		SendUsageMessage( playerid, "/podigni [ iznos ]");
		format( globalstring, sizeof( globalstring ), "Imate %d$ na vasem bankovnom racunu.", PlayerInfo[ playerid ][ xBRacun ] );
		SendClientMessagee( playerid, SIVA, globalstring );
		return 1;
	}
	if( cashdeposit > PlayerInfo[ playerid ][ xBRacun ] || cashdeposit < 1 ) return GRESKA( playerid, "Nemate toliko novaca !");
	DajIgracuNovac( playerid, cashdeposit );
	PlayerInfo[ playerid ][ xBRacun ] -= cashdeposit ;
	format( string, sizeof( string ), "Podigli ste $%d s vaseg racuna Ukupno: $%d ", cashdeposit, PlayerInfo[ playerid ][ xBRacun ] );
	SendClientMessagee( playerid, ZUTA, string ); UpdateBankTD( playerid );
	SavePlayer( playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:stanje( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	if( !IsPlayerInRangeOfPoint(playerid,2.0,1467.1327,-1006.9041,2058.0039) ) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	format( globalstring, sizeof( globalstring ), "Imate $%d na vasem bankovnom racunu.", PlayerInfo[ playerid ][ xBRacun ] );
	SendClientMessage( playerid, ZUTA, globalstring );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:podignikredit( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	if( !IsPlayerInRangeOfPoint(playerid,2.0,1476.6707,-1005.0105,2058.0039)) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	ShowPlayerDialog( playerid, dialog_KREDIT, DSL, D_NASLOV, "Kredit - 20000$ (Level 5)\nKredit - 50000$ (Level 10)\nKredit - 80000$ (Level 15)\nKredit - 100000$ (Level 20)", D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:kredit( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	if( !IsPlayerInRangeOfPoint(playerid,2.0,1476.6707,-1005.0105,2058.0039)) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	if( PlayerInfo[ playerid ][ xPreostaloZaOtplatu ] == 0 ) return GRESKA( playerid, "Nemate podignut kredit!");
	ShowPlayerDialog( playerid, dialog_INFOKREDIT, DSL, D_NASLOV, "Info Kredit\nPromena Iznosa Rate\nOtplati ceo kredit", D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ostavi( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	new cashdeposit, curfunds = PlayerInfo[ playerid ][ xBRacun ];
	if( !IsPlayerInRangeOfPoint(playerid,2.0,1467.1327,-1006.9041,2058.0039) ) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	if( sscanf( params, "i", cashdeposit ) )
	{
		SendUsageMessage( playerid, "/ostavi [ iznos ]");
		format( globalstring, sizeof( globalstring ), "Imate %d$ na vasem bankovnom racunu.", PlayerInfo[ playerid ][ xBRacun ] );
		SendClientMessagee( playerid, SIVA, globalstring );
		return 1;
	}
	if( cashdeposit > PlayerInfo[ playerid ][ xNovac ] || cashdeposit < 1) return GRESKA( playerid, "Nemate toliko novaca");
	DajIgracuNovac( playerid, -cashdeposit );
	PlayerInfo[ playerid ][ xBRacun ] += cashdeposit;
	SendClientMessagee(playerid, BELA, "|___ BANKOVNI RACUN ___|");
	format( globalstring, sizeof( globalstring ), "  Stari iznos: $%d", curfunds);
	SendClientMessagee( playerid, SIVA, globalstring );
	format( globalstring, sizeof( globalstring ), "  Pohrana: $%d",cashdeposit);
	SendClientMessagee( playerid, SIVA, globalstring );
	SendClientMessagee( playerid, SIVA, "|-----------------------------------------|");
	format( globalstring, sizeof( globalstring ), "  Novi iznos: $%d", PlayerInfo[ playerid ][ xBRacun ] );
	SendClientMessagee( playerid, BELA, globalstring );
	UpdateBankTD( playerid );
	SavePlayer( playerid );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:otvoriracun( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Vec imas otvoren racun u banci." );
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1458.0945,-1004.9053,2058.0039 ) ) return GRESKA( playerid, "Morate biti u banci kod pickupa." );
	PlayerInfo[ playerid ][ xImaBRacun ] = true;
	SavePlayer( playerid );
	UpdateBankTD( playerid );
	SendInfoMessage( playerid, "Uspjesno ste otvorili racun u banci." );
	SendInfoMessage( playerid, "Uz otvoren racun dobili ste i karticu za bankomat." );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:prebaci( playerid, params[] )
{
	if( !PlayerInfo[ playerid ][ xImaBRacun ] ) return GRESKA( playerid, "Prvo moras da otvoris racun u banci." );
	new id, cashdeposit;
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1458.0945,-1004.9053,2058.0039 ) ) return GRESKA( playerid, "Morate biti u banci da bi ste mogli koristit ovu komandu !");
	if( sscanf( params, "ui", id, cashdeposit ) )
	{
		SendUsageMessage( playerid, "/prebaci [ ID/Ime ] [ iznos ]");
		format( globalstring, sizeof( globalstring ), "Imate %d$ na vasem bankovnom racunu.", PlayerInfo[ playerid ][ xBRacun ] );
		SendClientMessagee( playerid, SIVA, globalstring );
		return 1;
	}
	if( cashdeposit > PlayerInfo[ playerid ][ xBRacun ] || cashdeposit < 1 ) return GRESKA( playerid, "Nemate toliko novaca");
	if( id == IPI ) return GRESKA( playerid, "Pogresan ID igraca." );
	if( !PlayerInfo[ id ][ xImaBRacun ] ) return GRESKA( playerid, "Igrac nema racun u banci." );
	if( PlayerInfo[ playerid ][ xLevel ] < 5 ) return GRESKA( playerid, "Morate biti level 5+." );
	if( PlayerInfo[ id ][ xLevel ] < 5 ) return GRESKA( playerid, "Igrac mora biti level 5+." );
	if( cashdeposit > 500000 ) return GRESKA( playerid, "Svota novca ne sme ici preko 500.000$." );
	PlayerInfo[ playerid ][ xBRacun ] -= cashdeposit;
	PlayerInfo[ id ][ xBRacun ] += cashdeposit;
	SavePlayer( playerid ); SavePlayer( id );
	PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessageEx( playerid, SIVA, "Prebacio si sa svoga racuna %d$ na %s-ov racun", cashdeposit, ImeIgraca( id ), id );
	SendClientMessageEx( id, SIVA, "Primio si %d$ na svoj racun od %s", cashdeposit, ImeIgraca( playerid ), playerid );
	format( globalstring , sizeof( globalstring ), "|TRANSFER| %s > %s [ %d$ ]", ImeIgraca( playerid ), ImeIgraca( id ), cashdeposit );
	AdminPoruka( 0xFFC0CBAA, globalstring );
	UpdateBankTD( playerid ); UpdateBankTD( id );
	new string[ 128 ]; 
	format( string, sizeof( string ), "Igrac %s -> Igrac: %s | Novac: %d", ImeIgraca( playerid ), ImeIgraca( id ), cashdeposit );
	LogSave( "Ostalo/LogTransfer.log", string );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:me( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string[ 234 ];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/me [Akcija]" );

	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( text, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, text );
			AdminPoruka( 0x808000AA, globalstring );
			return 1;
		}
	}
	if( Maskuse[ playerid ] == false )
		format( string, sizeof( string ), "* %s %s.", ImeIgraca( playerid ), text );
	else
		format( string, sizeof( string ), "* Maska_%d %s", PlayerInfo[ playerid ][ xMaskID ], text );
	PorukaRadius( 30.0, playerid, string, LJUBICASTA );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:attempt( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( isnull( params ) ) return SendUsageMessage( playerid, "/attempt [ akcija ]");
	new succeed = 1 + random(2);
	if( succeed == 1 )
	{
		if( Maskuse[ playerid ] == true )
			format( globalstring, sizeof( globalstring ), "Maska_%d pokusava %s i uspjeva", PlayerInfo[ playerid ][ xMaskID ], params );
		else
			format( globalstring, sizeof( globalstring ), "* %s pokusava %s i uspjeva.", ImeIgraca( playerid ), params );
		PorukaRadius( 15.0, playerid, globalstring, ZELENA );
	}
	if(succeed == 2)
	{
		if( Maskuse[ playerid ] == true)
			format( globalstring, sizeof( globalstring ), "Maska_%d pokusava %s i ne uspjeva", PlayerInfo[ playerid ][ xMaskID ], params );
		else
			format( globalstring, sizeof( globalstring ), "* %s pokusava %s i ne uspjeva.", ImeIgraca( playerid ), params );
		PorukaRadius( 15.0, playerid, globalstring, CRVENA );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:windows( playerid, params[] )
{
	if( IsPlayerInAnyVehicle( playerid ) )
	{
		new carid = GetPlayerVehicleID( playerid );
		if( IsACabrio( GetVehicleModel( carid ) ) ) return GRESKA( playerid, "Vozilo nema prozora!");
		if( VehicleWindows[ GetPlayerVehicleID( playerid ) ] == 0 )
		{
			VehicleWindows[ GetPlayerVehicleID( playerid ) ] = 1;
			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d spusta prozor.", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "* %s spusta prozor.", ImeIgraca( playerid ) );
			PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		 }
		 else if( VehicleWindows[ GetPlayerVehicleID( playerid ) ] == 1 )
		 {
			VehicleWindows[ GetPlayerVehicleID( playerid ) ] = 0;
			if( Maskuse[ playerid ] == true )
				format( globalstring, sizeof( globalstring ), "Maska_%d podize prozor.", PlayerInfo[ playerid ][ xMaskID ] );
			else
				format( globalstring, sizeof( globalstring ), "* %s podize prozor.", ImeIgraca( playerid ) );
			PorukaRadius( 20.0, playerid, globalstring, LJUBICASTA );
		}
	}
	else GRESKA( playerid, "Niste u vozilu!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pokucaj( playerid, params[] )
{
	new string[64];
	for( new i = 1; i < MAX_IMOVINA; i++)
	{
		if( IsPlayerInRangeOfPoint(playerid, 3, II[ i ][ iEnter ][ 0 ], II[ i ][  iEnter ][ 1 ], II[ i ][ iEnter ][ 2 ] ) )
		{
			format( string, sizeof( string ), "* %s kuca po vratima.", ImeIgraca( playerid ) );
			PorukaRadius( 30.0, playerid, string, LJUBICASTA );
			for(new p; p < MAX_PLAYERS; p++)
			{
				if( IsPlayerInRangeOfPoint( p, 60, II[ i ][ iExit ][ 0 ], II[ i ][  iExit ][ 1 ], II[ i ][ iExit ][ 2 ] ) )
					SendClientMessagee( p, LJUBICASTA, "* Netko kuca po vratima.");
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:c( playerid, params[] )
{
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	new text[ 128 ], string[ 234 ];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/c [close chat]");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( GetPVarInt(playerid, "ToggedAnim") == 0 )
	{
		if(strlen(params) > 0 && strlen(params) < 10)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,500,1);
		else if(strlen(params) >= 10 && strlen(params) < 20)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,1000,1);
		else if(strlen(params) >= 20 && strlen(params) < 30)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,1500,1);
		else if(strlen(params) >= 30 && strlen(params) < 40)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,2000,1);
		else if(strlen(params) >= 40 && strlen(params) < 50)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,2500,1);
		else if(strlen(params) >= 50 && strlen(params) < 61)
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,3000,1);
	}
	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( text, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, text );
			AdminPoruka( 0x808000AA, globalstring );
			return 1;
		}
	}
	if( IsPlayerInAnyVehicle( playerid ) )
	{
		if( Maskuse[ playerid ] == true)
			format( string, sizeof( string ), "Maska_%d kaze tiho (vozilo) : %s", PlayerInfo[ playerid ][ xMaskID ], text );
		else
			format( string, sizeof( string ), "%s kaze tiho (vozilo): %s", ImeIgraca( playerid ), text );
		PorukaRadius(3.0, playerid, string, 0xE6E6E6E6 );
	}
	else
	{
		if( Maskuse[ playerid ] == true)
			format( string, sizeof( string ), "Maska_%d kaze tiho: %s", PlayerInfo[ playerid ][ xMaskID ], text );
		else
			format( string, sizeof( string ), "%s kaze tiho: %s", ImeIgraca( playerid ), text );
		PorukaRadius( 3.0, playerid, string, 0xE6E6E6E6 );
	}
	new string1[ 128 ];
	format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), text );
	LogSave( "Ostalo/LogCChat.log", string1 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:s( playerid, params[] )
{
	new text[ 128 ], string[ 234 ];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/s [shout chat]");
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( text, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, text );
			AdminPoruka( 0x808000AA, globalstring );
			return 1;
		}
	}
	if( Maskuse[ playerid ] == false)
		format( string, sizeof( string ), ""col_yelow"IC | {FFFFFF}%s se dere: %s!!", ImeIgraca( playerid ), text);
	else
		format( string, sizeof( string ), ""col_yelow"IC | {FFFFFF}Maska_%d se dere: %s!!", PlayerInfo[ playerid ][ xMaskID ], text );
		
	PorukaRadius( 3.0, playerid, string, 0xE6E6E6E6);
	if( GetPVarInt( playerid, "ToggedAnim") == 0 )
	{
		if( strlen( params ) > 0 && strlen( params ) < 10 )
			ApplyAnimation( playerid, "PED", "IDLE_CHAT", 4.0, 0, 0, 0, 0, 500, 1 );
		else if( strlen( params ) >= 10 && strlen(params) < 20 )
			ApplyAnimation( playerid, "PED", "IDLE_CHAT", 4.0, 0, 0, 0, 0, 1000, 1 );
		else if( strlen( params ) >= 20 && strlen(params) < 30 )
			ApplyAnimation( playerid, "PED", "IDLE_CHAT",4.0,0,0,0,0,1500,1 );
		else if( strlen( params ) >= 30 && strlen(params) < 40 )
			ApplyAnimation( playerid, "PED", "IDLE_CHAT",4.0,0,0,0,0,2000,1 );
		else if( strlen( params ) >= 40 && strlen(params) < 50 )
			ApplyAnimation( playerid, "PED","IDLE_CHAT",4.0,0,0,0,0,2500,1 );
		else if( strlen( params ) >= 50 && strlen(params) < 61 )
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,3000,1 );
	}
	new string1[ 128 ]; 
	format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), text );
	LogSave( "Ostalo/LogSChat.log", string1 );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:w( playerid, params[] )
{
	new result[128], string[ 234 ], id;

	if( sscanf( params, "us[128]", id, result ) )
	{
		SendUsageMessage( playerid, "/w [ ID/DeoImena ] [ text ]");
		return 1;
	}
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xMute ] != 0 ) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( IsPlayerConnected( id ) )
	{
		if( IsPlayerNearPlayer( 2.0, playerid, id ) )
		{
			if( id == playerid ) return GRESKA( playerid, "Nisi valjda toliko lud da pricas sam sa sobom?");
			if( AdminDuty[ id ] ) return GRESKA( playerid, "Ne mozes da sapnes adminu ili GM na duty." );
			for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
			{
				if( strfind( result, ZabranjeneReci[ b ], true ) != -1 )
				{
					format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, result );
					AdminPoruka( 0x808000AA, globalstring );
					return 1;
				}
			}
			if( Maskuse[ playerid ] == true)
			{
				format( string, sizeof( string ), "Maska_%d sapuce %s", PlayerInfo[ playerid ][ xMaskID ], result );
				SendClientMessagee( playerid,  SVETLOCRVENA, string );
				SendClientMessagee( id, SVETLOCRVENA, string );
				format( string, sizeof( string ), "* Maska_%d sapuce nesto.", PlayerInfo[ playerid ][ xMaskID ] );
				PorukaRadius( 5.0, playerid, string, LJUBICASTA );
			}
			else
			{
				format( string, sizeof( string ), "%s sapuce %s", ImeIgraca( playerid ), result );
				SendClientMessagee( playerid,  SVETLOCRVENA, string );
				SendClientMessagee( id, SVETLOCRVENA, string );
				format( string, sizeof( string ), "* %s sapuce nesto.", ImeIgraca( playerid ) );
				PorukaRadius( 5.0, playerid, string, LJUBICASTA );
			}
			format( string, sizeof( string ), "|W|%s -> %s: %s", ImeIgraca( playerid ), ImeIgraca( id ), result );
			AdminWisper( 0xFFE4C4AA, string );
			new string1[ 128 ]; 
			format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), result );
			LogSave( "Ostalo/LogWChat.log", string1 );
			return 1;
		} else GRESKA( playerid, "Previse ste udaljeni od tog igraca!");
	} else GRESKA( playerid, "Taj igrac nije na serveru!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:changename( playerid, params[] )
{
	new novoime[32], newname[ 40 ];
	new year, month, day;
	if( sscanf( params, "s[32]", novoime)) return SendUsageMessage( playerid, "/changename [ Ime_Prezime ]");
	format( newname, sizeof( newname ), "Korisnici/%s.ini", novoime );
	if( GetPVarInt( playerid, "PlayerCanChangeName") != 1) return GRESKA( playerid, "Nemate dopustenje od Admina da promenite ime i prezime svoga lika.");
	if( !IsValidRoleplayName( novoime ) ) return GRESKA( playerid, "Nepravilan RolePlay format imena.");
	if( fexist( newname ) ) return GRESKA( playerid, "Novo ime vec postoji u bazi podataka!" );
	SetPVarInt( playerid, "PlayerCanChangeName", 0);
	getdate(year, month, day);
	format( globalstring, sizeof( globalstring ), "*RENAME: %s je promenio ime u %s (%d-%d-%d)", ImeIgraca( playerid ), novoime, month, day, year );
	printf("%s",  globalstring );
	format( globalstring, sizeof( globalstring ), "RENAME: %s je promenio ime u %s.", ImeIgraca( playerid ), novoime );
	AdminPoruka( CRVENA, globalstring );
	SavePlayer( playerid );
	RenamePlayer( ImeIgraca( playerid ), novoime, playerid );
	SendInfoMessage( playerid, "Uspjesno si promenio ime!" );
	format( globalstring, sizeof( globalstring ), "Prijavite se ponovno sa imenom: %s", novoime );
	Kickovanje( playerid, globalstring );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:specijalnoime( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new id, novoime[ 32 ], newname[ 40 ];
	new year, month, day;
	if( sscanf( params, "us[32]", id, novoime ) ) return SendUsageMessage( playerid, "/specijalnoime [ ID ] [ Ime_Prezime ]");
	format( newname, sizeof( newname ), "Korisnici/%s.ini", novoime );
	if( id == IPI ) return GRESKA( playerid, "Unijeli ste pogresan ID igraca, isti nije dostupan - pokusajte ponovno kasnije!" );
	if( fexist( newname ) ) return GRESKA( playerid, "Novo ime vec postoji u bazi podataka!" );
	getdate( year, month, day );
	format( globalstring, sizeof( globalstring ), "RENAME | Admin %s je promenio ime igracu %s u %s (%d-%d-%d)", ImeIgraca( playerid ), ImeIgraca( id ), novoime, month, day, year );
	printf( "%s",  globalstring );
	format( globalstring, sizeof( globalstring ), "RENAME | Admin %s je promenio ime igracu %s u %s .", ImeIgraca( playerid ), ImeIgraca( id ), novoime );
	AdminPoruka( CRVENA, globalstring );
	SavePlayer( id );
	RenamePlayer( ImeIgraca( id ), novoime, id );
	SendInfoMessage( id, "Admin %s vam je promenio ime u %s.", ImeIgraca( playerid ), ImeIgraca( id ) );
	format( globalstring, sizeof( globalstring ), "Prijavite se ponovno sa imenom: %s", novoime );
	Kickovanje( id, globalstring );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:passwordigraca( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!");
	if( !AdminDuty[ playerid ] ) return GRESKA( playerid, "Niste u mogucnosti koristiti ovo - morate biti administrator na duznosti!" );
	new imeigraca[ 24 ], novalozinka[ 40 ], ifile[ 64 ];
	if( sscanf( params, "s[24]", imeigraca ) ) return SendUsageMessage( playerid, "/passwordigraca [ Ime_Prezime ]" );
	new randombroj = 100000 + random(899999);
	format( novalozinka, sizeof( novalozinka ), "%d", randombroj );
	format( ifile, sizeof( ifile ), I_FILE, imeigraca );
	if( !fexist( ifile ) ) return GRESKA( playerid, "Taj igrac ne postoji u bazi podataka!");
	INI_ParseFile( ifile, "ShowOffStats" );
	new INI:File = INI_Open( ifile );
	INI_SetTag( File, "Informacije" );
	INI_WriteString( File, "Lozinka", novalozinka );
	INI_Close( File );
	format( globalstring, sizeof( globalstring ), "{FF0000}| AC |: "col_white"Igracu "SERVERBOJA_AQUA"%s "col_white"je promjenjen password! Ostale informacije slijede.. Admin: "SERVERBOJA_AQUA"%s", imeigraca, ImeIgraca( playerid ) );
	AdminPoruka( SVETLOCRVENA, globalstring );
	format( globalstring, sizeof( globalstring ), "{FF0000}| AC |: "col_white"Igracu "SERVERBOJA_AQUA"%s "col_white"je dodjeljen novi pass: "SERVERBOJA_AQUA"%s.", imeigraca, novalozinka );
	SendClientMessagee( playerid, ZUTA, globalstring );
	format( globalstring, sizeof( globalstring ), "{FF0000}| AC |: "col_white"Igracu "SERVERBOJA_AQUA"%s "col_white"lozinku poslati na email: "SERVERBOJA_AQUA"%s.", imeigraca, OfflineCheck[ eMail ] );
	SendClientMessagee( playerid, ZUTA, globalstring );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:promenilozinku( playerid, params[] )
{
	ShowPlayerDialog( playerid, dialog_CHANGEPASSWORD, DSI, D_NASLOV, "Upisi novu sifru i dobro je zapamti! Staff team ne odgovara za nestale/ukradene sifre registrovanih racuna!", D_ODABERI, D_ODUSTANI );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:promenispawn( playerid, params[] )
{
	if(PlayerInfo[playerid][xAdmin] == 0 && \
		PlayerInfo[playerid][xHelper] == 0 && \
		PlayerInfo[playerid][xClan] == 0 && \
		PlayerInfo[playerid][xLevel] >= 5 && \
		PlayerInfo[playerid][xProperty][0] == -1 &&\
		PlayerInfo[playerid][xProperty][1] == -1 &&\
		PlayerInfo[playerid][xProperty][2] == -1
	) return greska(playerid,"Ti si beskucnik i ne mozes stavljati sebi novi spawn!");
	//if( PlayerInfo[ playerid ][ xAdmin ] >= 1 || PlayerInfo[ playerid ][ xHelper ] >= 1 )
	//{
	ShowPlayerDialog( playerid, dialog_SPAWNCHANGE, DSL, "Odaberite spawn - Nova Era", "Nova Era - glavni spawn\nUSKORO...\nUSKORO...\nImovina 1\nImovina 2\nImovina 3\nOrganizacija\nRentana imovina\nAdmin Baza\nGM Baza", D_ODABERI, D_ODUSTANI );
   // }
   // else
	//{
		//ShowPlayerDialog( playerid, dialog_SPAWNCHANGE, DSL, "Odaberite spawn", "Plaza\nKolodvor\nImovina 1\nImovina 2\nImovina 3\nOrganizacija\nRentana imovina", D_ODABERI, D_ODUSTANI );
	//}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:listavozila( playerid, params[] )
{

	if( PlayerInfo[ playerid ][ xAdmin ] < 3 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new model;
	if( sscanf( params, "i", model ) ) return SendUsageMessage( playerid, "/listavozila [ Model vozila ]" );
	new string[ 128 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );

	for( new i = 1; i < MAX_CARS; i++ )
	{
		if( VehicleInfo[ i ][ vUsage ] == PRIVATNO_VOZILO && VehicleInfo[ i ][ vModel ] == model )
		{
			format( string, sizeof( string ), ""col_white"Vozilo ID - [%d]\n", i );
			strcat( DialogStrgEx, string );
		}
	}
	if( strlen( DialogStrgEx ) == 0 ) return GRESKA( playerid, "Nema nijednog vozila tog modela." );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"LISTA VOZILA", DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vozilazaaukciju( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 5 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new string[ 128 ];
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	for( new i = 1; i < MAX_CARS; i++ )
	{
		if( VehicleInfo[ i ][ vUsage ] == PRIVATNO_VOZILO && VehicleInfo[ i ][ vOwned ] == 0 && VehicleInfo[ i ][ vPrice ] == -1 )
		{
			format( string, sizeof( string ), ""col_white"Vozilo %s - [%d]\n", GetVehicleNameEx( VehicleInfo[ i ][ vModel ] ), i );
			strcat( DialogStrgEx, string );
		}
	}
	if( strlen( DialogStrgEx ) == 0 ) return GRESKA( playerid, "Nema nijednog vozila za aukciju." );
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"KOLA ZA AUKCIJU", DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:richlist( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new money, string[ 128 ];
	if( sscanf( params, "d", money ) ) return SendUsageMessage( playerid, "/richlist [ novac ]");
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( (PlayerInfo[ i ][ xNovac ]+PlayerInfo[ i ][ xBRacun ]) >= money )
		{
			format( string, sizeof( string ), ""col_white"Ruke %d | Banka %d | %s [%d]\n", PlayerInfo[ i ][ xNovac ], PlayerInfo[ i ][ xBRacun ], ImeIgraca( i ), i );
			strcat( DialogStrgEx, string );
		}
	}
	ShowPlayerDialog( playerid, 0, DSMSG, ""col_balkanstory"BOGATI IGRACI", DialogStrgEx, "Ok", "" );
	strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:mogucspam( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 1338 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new id;
	if( sscanf( params, "u", id ) ) return SendUsageMessage( playerid, "/mogucspam [ ID/Deo igraca ]");
	SendInfoMessage( playerid, "%s(%d) GETID: %d STATSID: %d", ImeIgraca( id ), id, GetPlayerVehicleID( id ), antiCheatCS[ id ][ EnteredVehicle ] );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pay( playerid, params[] )
{
	new giveplayerid,
		playermoney,
		moneys;
	if( sscanf( params, "ud", giveplayerid, moneys ) ) return SendUsageMessage( playerid, "/pay [ ID/Ime ] [ kolicina ]");
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Morate biti level 3 da bi poslali novac.");
	if( moneys > 50 && PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Morate biti level 3 da bi poslali preko 50.");
	if( moneys < 1 || moneys > 5000 ) return GRESKA( playerid, "Nemojte slati manje od 1, ili vise od 5000 odjednom.");
	if( IsPlayerConnected( giveplayerid ) )
	{
		if( giveplayerid != INVALID_PLAYER_ID )
		 {
			if( IsPlayerNearPlayer( 5.0, playerid, giveplayerid ) )
			{
				playermoney = PlayerInfo[ playerid ][ xNovac ];
				if( moneys > 0 && playermoney >= moneys )
				{
					DajIgracuNovac( playerid, - moneys );
					DajIgracuNovac( giveplayerid, moneys );
					format( globalstring, sizeof( globalstring ), "Poslali ste %s(player: %d), $%d.", ImeIgraca( giveplayerid ), giveplayerid, moneys );
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessagee( playerid, SVETLOPLAVA, globalstring );
					format( globalstring, sizeof( globalstring ), "Primili ste $%d od %s(player: %d).", moneys, ImeIgraca( playerid ), playerid );
					SendClientMessagee( giveplayerid, SVETLOPLAVA, globalstring );
					PlayerPlaySound( giveplayerid, 1052, 0.0, 0.0, 0.0 );
					format( globalstring, sizeof( globalstring ), "* %s vadi svoj novcanik i daje nesto novca %s.", ImeIgraca( playerid ) ,ImeIgraca( giveplayerid ) );
					PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
					new string[ 128 ]; 
					format( string, sizeof( string ), "Igrac %s -> Igrac: %s | Novac: %d", ImeIgraca( playerid ), ImeIgraca( giveplayerid ), moneys );
					LogSave( "Ostalo/LogPay.log", string );
				} else GRESKA( playerid, "Nepravilan iznos transakcije.");
				
			} else GRESKA( playerid, "Taj igrac nije dovoljno blizu vas.");
		}
	} else GRESKA( playerid, "Taj igrac nije na serveru!");
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:do( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new text[ 128 ], string[ 234 ];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/do [Akcija]" );
	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( text, ZabranjeneReci[ b ], true ) != -1 )
		{
			format( globalstring, sizeof( globalstring ), "{808080}[!]%s[%d]: %s", ImeIgraca( playerid ), playerid, text );
			AdminPoruka( 0x808000AA, globalstring );
			return 1;
		}
	}
	if( Maskuse[ playerid ] == false )
		format( string, sizeof( string ), "* %s (( %s ))", text, ImeIgraca( playerid ) );
	else
		format( string, sizeof( string ), "* %s (( Maska_%d ))", text, PlayerInfo[ playerid ][ xMaskID ] );
	PorukaRadius( 30.0, playerid, string, LJUBICASTA );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:b( playerid, params[ ], help )
{
	if( PlayerCuffed[ playerid ] >= 1 ) return GRESKA( playerid, "Ne mozes koristiti komandu kad si cuffovan ili tazovan.");
	if( PlayerInfo[ playerid ][ xMute ] != 0 )
	{
		GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
		return 0;
	}
	new text[ 128 ];
	for( new b = 0; b < sizeof( ZabranjeneReci ); b++)
	{
		if( strfind( text, ZabranjeneReci[ b ], true ) != -1 )
		{
			new string[ 128 ];
			if( Maskuse[ playerid ] == true )
				format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}Maska %d kaze: ****** ))", PlayerInfo[ playerid ][ xMaskID ] );
			else
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}%s kaze: ****** ))", ImeIgraca( playerid ) );
			PorukaRadius( 20.0 , playerid, string, -1 );
			SetPlayerChatBubble( playerid, text, 0xFF0000FF, 20.0, 7000 );

			new string1[ 128 ];
			format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), text );
			LogSave( "Ostalo/LogBChat.log", string1 );
			return 0;
		}
	}
	
	new string[ 234 ];
	if( sscanf( params, "s[128]", text ) ) return SendUsageMessage( playerid, "/b [lokalni ooc chat]");

	if( PlayerInfo[ playerid ][ xAdmin ] > 0 && AdminDuty[ playerid ] )
	{
		if( Maskuse[ playerid ] == false )
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}%s kaze: %s ))", ImeIgraca( playerid ), text );
		else
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}Maska_%d : %s ))", PlayerInfo[ playerid ][ xMaskID ], text );
	}
	else if( PlayerInfo[ playerid ][ xHelper ] > 0 && AdminDuty[ playerid ] )
	{
		if( Maskuse[ playerid ] == false )
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}%s kaze: %s ))", ImeIgraca( playerid ), text );
		else
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}Maska_%d : %s ))", PlayerInfo[ playerid ][ xMaskID ], text );
	}
	else
	{
		if( Maskuse[ playerid ] == false )
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}%s kaze: %s ))", ImeIgraca( playerid ), text );
		else
			format( string, sizeof( string ), "{FFFFFF}(( "col_yelow"OOC | {FFFFFF}Maska_%d : %s ))", PlayerInfo[ playerid ][ xMaskID ], text );
	}

	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerNearPlayer( 25.0, playerid, i ) )
		{
			SendClientMessage( i, 0xE6E6E6E6, string );
		}
	}
	
	new string1[ 128 ]; 
	format( string1, sizeof( string1 ), "Igrac %s: %s", ImeIgraca( playerid ), text );
	LogSave( "Ostalo/LogBChat.log", string1 );
	return true;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:maskon( playerid, params[] )
{
	if( !Inventory_HasItem( playerid, "Maska" ) )
		return GRESKA( playerid, "Nemate masku." );

	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Moras biti level 3.");
	if( Maskuse[ playerid ] != false ) return GRESKA( playerid, "Vec imas masku na glavi!");

	strmid( RealName[ playerid ], ImeIgraca( playerid ), 0, strlen( ImeIgraca( playerid ) ), 64 );
	new bre[ MAX_PLAYER_NAME ];
	format( bre, sizeof( bre ), "(( Maskiran )) - Maska_%d", PlayerInfo[ playerid ][ xMaskID ] );
	SetPlayerName( playerid, bre );
	
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_MASK, 19036, 2, 0.099999,0.028999,-0.004999,91.199935,87.199958,0.399999,1.000000,1.000000,1.000000 );

	Maskuse[ playerid ] = true;
	SendClientMessagee( playerid, BELA, "Stavili ste masku na glavu [ /maskoff da je skinete ]. ");
	format( globalstring, sizeof( globalstring ), "* %s stavlja masku na glavu.", ImeIgraca( playerid ) );
	PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:maskoff( playerid, params[] )
{
	if( !Inventory_HasItem( playerid, "Maska" ) )
		return GRESKA( playerid, "Nemate masku." );
		
	if( PlayerInfo[ playerid ][ xLevel ] < 3) return GRESKA( playerid, "Moras biti level 3.");
	if( Maskuse[ playerid ] != true ) return GRESKA( playerid, "Nemas masku na glavi!");

	SetPlayerName( playerid, RealName[ playerid ] );
	Maskuse[ playerid ] = false;
	RemovePlayerAttachedObject(playerid, OBJECT_SLOT_MASK);
	SendClientMessage( playerid, BELA, "Skinuli ste masku [/maskon da je vratite na glavu]. ");
	format( globalstring, sizeof( globalstring ), "* %s skida masku sa glave.", ImeIgraca( playerid ) );
	PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////
CMD:telbroj( playerid, params[] )
{
	new ID;
	if( sscanf(params, "u", ID )) return SendUsageMessage( playerid, "/telbroj [ ID/Ime ]");
	if( IsPlayerConnected( ID ) )
	{
		if( ID != INVALID_PLAYER_ID )
		{
			format( globalstring, sizeof( globalstring ), "Ime: %s, Broj: %d", ImeIgraca( ID ), PlayerInfo[ ID ][ xBrojTelefona ] );
			SendClientMessage( playerid, -1, globalstring );
		}
	}
	else return GRESKA( playerid, "Nema takvog igraca!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pozovi( playerid, params[] )
{
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) return GRESKA( playerid, "Vec imas objekt u ruci ne mozes zvati ili javiti se." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new phonenumb, igrac;
	if( sscanf( params, "i", phonenumb))
	{
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		SendUsageMessage( playerid, "/pozovi [broj]");
		SendClientMessagee( playerid, BELA, "Hitna linija : 911");
		SendClientMessagee( playerid, BELA, "Mehanicarska sluzba : 555");
		SendClientMessagee( playerid, BELA, "Taksi sluzba : 777");
		SendClientMessagee( playerid, SVETLOPLAVA, "___________________________________________________________________");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0)
	{
		GRESKA( playerid, "Nemate SIM karticu!");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xTelefonBon ] < 1)
	{
		GRESKA( playerid, "Preostala svota na racunu nije dovoljna za uspostavu poziva!" );
		return 1;
	}
	if( PlayerInfo[ playerid ][ xZatvor ] == OBICAN_ZATVOR || PlayerInfo[ playerid ][ xZatvor ] == ALKATRAZ  )//jese
	{
		GRESKA( playerid, "Ne mozete telefonirati dok ste u zatvoru!.");
		return 1;
	}
	if( phonenumb == 911 )
	{
		SendClientMessagee( playerid, BELA, "HINT: Sada mozete koristit T da bi ste razgovarali na telefon, ukucajte '(/h)angup' da bi ste prekinuli poziv");
		SendClientMessagee( playerid, 0xFF8282AA, "HITNA LINIJA: Koju sluzbu trebate, Policiju ili Hitnu Pomoc? (Upisite Police ili Paramedic)");
		SetPVarInt( playerid, "Mobile", 911);
		return 1;
	}
	if( phonenumb == 555 )
	{
		SendClientMessagee( playerid, BELA, "HINT: Sada mozete koristit T da bi ste razgovarali na telefon, ukucajte '(/h)angup' da bi ste prekinuli poziv");
		SendClientMessagee( playerid, 0xAFAFAFAA, "Tajnica: Spajam vas sa mehanicarskom sluzbom.");
		SendClientMessagee( playerid, 0x2641FEAA, "Tajnica: Molimo Vas recite nam svoju lokaciju.");
		SetPVarInt( playerid, "Mobile", 555);
		return 1;
	}
	if( phonenumb == 777 )
	{
		if( IsPlayerInAnyVehicle( playerid ) ) return GRESKA( playerid, "Ne mozete zvati iz vozila!");
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerInfo[ i ][ xPosao ] == POSAO_TAXI && taxiDuty[ i ] == true )
				SendClientMessageEx( i, -1, "%s (ID: %d) {FBE600}je potreban taxista, lokacija igraca:"col_white" %s {FBE600}('/taxi uzmiklijenta' da preuzmes klijenta)", ImeIgraca( playerid ), playerid, GetPlayerLocation( playerid ) );
		}
		PozvaoTaxi[ playerid ] = true;
		SendClientMessagee( playerid, ZUTA, "Uspjesno ste pozvali taxistu, pricekajte na mjestu gdje se trenutno nalazite!");
		return 1;
	}
	if( phonenumb == PlayerInfo[ playerid ][ xBrojTelefona ] )
	{
		SendInfoMessage(playerid,"Nazvali ste svoj broj!");
		return 1;
	}
	if( GetPVarInt( playerid, "Mobile") != -1 )
	{
		GRESKA( playerid, "Vec ste u razgovoru...");
		return 1;
	}
	format( globalstring, sizeof( globalstring ), "* %s vadi mobilni telefon.", ImeIgraca( playerid ) );
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_USECELLPHONE );
	SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, PlayerInfo[ playerid ][ xModelTelefona ], 6, 0.101469, 0.000639, -0.008395, 73.051651, 171.894165, 0.000000, 1.000000, 1.000000, 1.000000 );
	PorukaRadius(30.0, playerid, globalstring, LJUBICASTA );
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected(i))
		{
			if( PlayerInfo[ i ][ xBrojTelefona ] == phonenumb && phonenumb != 0)
			{
				igrac = i;
				SetPVarInt( playerid, "Mobile", igrac );
				if( IsPlayerConnected( igrac ) )
				{
					if( igrac != INVALID_PLAYER_ID )
					{
						if( PhoneOnline[ igrac ] == 1 )
						{
							GRESKA( playerid, "Korisnik je ugasio telefon.");
							return 1;
						}
						if( PlayerInfo[ igrac ][ xZatvor ] == OBICAN_ZATVOR || PlayerInfo[ igrac ][ xZatvor ] == ALKATRAZ )
						{
							GRESKA( playerid, "Osoba je pritvorena i ne moze vam se javiti.");
							return 1;
						}
						if( GetPVarInt( igrac, "Mobile" ) == -1)
						{
							SendClientMessageEx( igrac, ZUTA, "Vas mobilni zvoni ukucajte '(/p)ickup' Pozivatelj: %s", ImeIgraca( playerid ) );
							format(  globalstring, sizeof( globalstring ), "* %s zvoni mobilni.", ImeIgraca( igrac ) );
							SendClientMessagee( playerid, BELA, "HINT: Na mobilni sada pricate sa T, ukucajte '(/h)angup' da bi ste prekinuli razgovor.");
							PorukaRadius( 30.0, i, globalstring, LJUBICASTA );
							SetPVarInt( playerid, "CellTime",  1 );
							return 1;
						}
						else return SendInfoMessage(playerid,"Broj je zauzet!");
					}
				}
			}
		}
	}
	
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:pickup( playerid, params[] )
{
	if( IsPlayerAttachedObjectSlotUsed( playerid, OBJECT_SLOT_RHAND ) ) return GRESKA( playerid, "Vec imas objekt u ruci ne mozes zvati ili javiti se." );
	if( PlayerInfo[ playerid ][ xMute ] != 0) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	if( PlayerInfo[ playerid ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete se javiti dok ste u zatvoru / ALKATRAZ.");
	if(GetPVarInt( playerid, "Mobile") == -1 )
	{
		if( IsPlayerAttachedObjectSlotUsed( playerid,OBJECT_SLOT_RHAND ) )
		{
			GRESKA( playerid, "Vec imate neki objekt u desnoj ruci, ne mozete izvaditi mobilni telefon!");
			return 1;
		}
		for(new i; i < MAX_PLAYERS; i++)
		{
			if( PlayerLogged[ i ] == true )
			{
				if( GetPVarInt(i, "Mobile") == playerid )
				{
					SetPVarInt( playerid, "Mobile", i );
					SendClientMessagee(i,  BELA, "   Javio se.");
					format( globalstring, sizeof( globalstring ), "* %s se javlja na mobilni telefon.", ImeIgraca( playerid ) );
					SetPlayerSpecialAction( playerid, SPECIAL_ACTION_USECELLPHONE);
					SetPlayerAttachedObject( playerid, OBJECT_SLOT_RHAND, PlayerInfo[ playerid ][ xModelTelefona ], 6, 0.101469, 0.000639, -0.008395, 73.051651, 171.894165, 0.000000, 1.000000, 1.000000, 1.000000);
					PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
				}
			}
		}
	}
	else GRESKA( playerid,"Vec ste u razgovoru!");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:p( playerid, params[] )
{
	return cmd_pickup(playerid, params);
}
CMD:h( playerid, params[] )
{
	return cmd_hangup(playerid, params);
}
//////////////////////////////////////////////////////////////////////////////////
CMD:hangup( playerid, params[] )
{
	new caller = GetPVarInt( playerid, "Mobile" );
	SetPVarInt( playerid, "CellTime", 0 );
	SendClientMessagee( playerid,  0xAFAFAFAA, "Mobilni telefon vam je dzepu.");
	SendClientMessagee( playerid, CRVENA, "AKO VAM NIJE UGASENA ANIMACIJE 'ENTER'" );
	RemovePlayerAttachedObject( playerid, OBJECT_SLOT_RHAND );
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_STOPUSECELLPHONE );
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_STOPUSECELLPHONE );
	SetPlayerSpecialAction( playerid, SPECIAL_ACTION_NONE );
	SetPVarInt( playerid, "Mobile", -1 );
	if( caller < 501 && caller >= 0 )
	{
		if( caller != INVALID_PLAYER_ID )
		{
			if( PlayerLogged[ caller ] == true )
			{
			
				SendClientMessagee( caller,  0xAFAFAFAA, "Prekinuo je.");
				SetPVarInt( caller, "CellTime", 0 );
				SetPVarInt( playerid, "CellTime",  0);
				SendClientMessagee( playerid,  0xAFAFAFAA, "Prekinuli ste poziv.");
				SetPVarInt( caller, "Mobile", -1 );
				SetPlayerSpecialAction( caller, SPECIAL_ACTION_STOPUSECELLPHONE );
				SetPlayerSpecialAction( caller, SPECIAL_ACTION_STOPUSECELLPHONE );
				RemovePlayerAttachedObject( caller, OBJECT_SLOT_RHAND );
			}
		}
	}
	return true;
}
////////////////////////////////////////////////////////////////////////////////
CMD:telefon( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0)
	{
		GRESKA( playerid, "Vi nemate mobilni telefon - ne mozete vi ovo!");
		return 1;
	}
	SendInfoMessage(playerid,"Uspjesno ste otvorili aplikaciju za mobilni telefon!");
	ShowPlayerDialog(playerid,dialog_TELEFON, DSL, "Nova Era RolePlay | Vas mobilni",""SERVERBOJA_TAMNOZELENA"[a] {ffffff}Posalji SMS\n"SERVERBOJA_TAMNOZELENA"[b]{ffffff} Nazovi nekoga\n"SERVERBOJA_TAMNOZELENA"[c] {ffffff}Uzmi neciji broj telefona\n"SERVERBOJA_TAMNOZELENA"[d]{ffffff} Prekini poziv\n"SERVERBOJA_TAMNOZELENA"[e] {ffffff}Javi se na poziv\n"SERVERBOJA_TAMNOZELENA"[f] {ffffff}Ukljucite mobilne podatke\n"SERVERBOJA_TAMNOZELENA"[g]{ffffff} Kupi vozilo - online\n"SERVERBOJA_TAMNOZELENA"[h] {ffffff}Kupi vozilo - lista dostupnih vozila", "Odaberi", "Ugasi");
	return 1;
}
// /sms [ broj telefona ] [ poruka ]
// /hangup ( da prekinete poziv )
// /pickup ( da se javite )
// /pozovi [ broj telefona ]
// /telbroj [ Id igraca ili deo imena ]

// sms
// nazovi
// uzmi tel broj
// prekini
// javi se
//////////////////////////////////////////////////////////////////////////////////
CMD:sms( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xMute ] != 0 ) return GRESKA( playerid, "Ne mozete pricati, usutkani ste.");
	new phonenumb, result[128], string[234], igrac;
	if( sscanf(params, "is[128]", phonenumb, result ) )
	{
		SendUsageMessage( playerid, "/sms [ broj telefona ] [ poruka ]");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xBrojTelefona ] == 0)
	{
		GRESKA( playerid, "Nemate mobilni telefon...");
		return 1;
	}
	if( PlayerInfo[ playerid ][ xTelefonBon ] < 1)
	{
		GRESKA( playerid, "Preostala svota na racunu nije dovoljna da posaljete SMS!" );
		return 1;
	}
	if( PlayerInfo[ playerid ][ xZatvor ] == OBICAN_ZATVOR || PlayerInfo[ playerid ][ xZatvor ] == ALKATRAZ )
	{
		GRESKA( playerid, "Ne mozete telefonirati dok ste u zatvoru!");
		return 1;
	}
	
	for(new i; i < MAX_PLAYERS; i++)
	{
		if( IsPlayerConnected( i ) )
		{
			if( PlayerInfo[ i ][ xBrojTelefona ] == phonenumb && phonenumb != 0 )
			{
				igrac = i;
				if( IsPlayerConnected( igrac ) )
				{
					if( igrac != INVALID_PLAYER_ID )
					{
						if( PhoneOnline[ igrac ] > 0 )
						{
							GRESKA( playerid, "Korisnik je ugasio telefon.");
							return 1;
						}
						if( PlayerInfo[ igrac ][ xZatvor ] >= 1 ) return GRESKA( playerid, "Ne mozete igracu slati sms dok je u zatvoru / ALKATRAZ.");
						format( string, sizeof( string ), "{E6E6E6}Dobili ste SMS | Posiljatelj: "col_white"%s {E6E6E6}| Broj Telefona: "col_white" %d", RPImeIgraca( playerid ), PlayerInfo[ playerid ][ xBrojTelefona ] );
						SendClientMessagee( igrac, ZUTA, string );
						format( string, sizeof( string ), "{E6E6E6}SMS: "col_white"%s", result );
						SendClientMessagee( igrac, ZUTA, string );
						SendClientMessagee( playerid, BELA, "Poruka poslana.");
						format( string, sizeof( string ), "SMS | %s(ID:%d) salje -> %s(ID:%d)| %s", ImeIgraca( playerid ), playerid, ImeIgraca( igrac ), igrac, result );
						AdminSMS( ZUTA, string );
						format( string, sizeof( string ), "~r~$-%d", smscost);
						announcement( playerid, string, 5000, 1);
						PlayerInfo[ playerid ][ xTelefonBon ] -= smscost;
						BussinesTelekomMoney( smscost );
						PlayerPlaySound( playerid, 1052, 0.0, 0.0, 0.0 );
						PlayerPlaySound( igrac, 1052, 0.0, 0.0, 0.0 );
						
						format( string, sizeof( string ), "* %s salje poruku.", RPImeIgraca( playerid ) );
						PorukaRadius( 20.0, playerid, string, LJUBICASTA );
						return 1;
					}
				}
			}
		}
	}
	SendClientMessagee( playerid, 0xAFAFAFAA, "  Slanje poruke neuspelo...");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:vrijeme( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xSat ] != 0 )
	{
		new mtext[20], year, month, day;
		getdate( year, month, day );
		if(month == 1) { mtext = "Sijecanj/Januar"; }
		else if(month == 2) { mtext = "Veljaca/Februar"; }
		else if(month == 3) { mtext = "Ozujak/Mart"; }
		else if(month == 4) { mtext = "Travanj/April"; }
		else if(month == 5) { mtext = "Svibanj/Maj"; }
		else if(month == 6) { mtext = "Lipanj/Jun"; }
		else if(month == 7) { mtext = "Srpanj/Jul"; }
		else if(month == 8) { mtext = "Kolovoz/Avgust"; }
		else if(month == 9) { mtext = "Rujan/Semptembar"; }
		else if(month == 10) { mtext = "Listopad/Oktobar"; }
		else if(month == 11) { mtext = "Studeni/Novembar"; }
		else if(month == 12) { mtext = "Prosinac/Decembar"; }
		new hour,minuite,second;
		gettimeEx( hour, minuite, second );
		FixHour( hour );
		hour = shifthour;
		if( minuite < 10 )
		{
			if( PlayerInfo[ playerid ][ xZatvor ] > 0 )
				format( globalstring, sizeof( globalstring ), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Vreme pritvora: %d min", day, mtext, hour, minuite, ( PlayerInfo[ playerid ][ xZatvorVreme ]+1 ) );
			else
				format( globalstring, sizeof( globalstring ), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
		}
		else
		{
			if( PlayerInfo[ playerid ][ xZatvor ] > 0 )
				format( globalstring, sizeof( globalstring ), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Vreme: pritvora: %d min", day, mtext, hour, minuite, ( PlayerInfo[ playerid ][ xZatvorVreme ]+1 ) );
			else
				format( globalstring, sizeof( globalstring ), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
		}
		announcement(playerid, globalstring, 5000, 1);
		format( globalstring, sizeof( globalstring ), "* %s gleda na sat marke %s.", ImeIgraca( playerid ), GetNameByWatchID( playerid ) );
		PorukaRadius( 30.0, playerid, globalstring, LJUBICASTA );
		ApplyAnimation( playerid, "COP_AMBIENT", "Coplook_watch", 4.1,0,0,0,0,0, 1 );
	}
	else GRESKA( playerid, "Nemas sat!" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:warnapusti( playerid, params[] )
{
	if( WARPInfo[ playerid ][ WARIgrac ] == -1 ) return GRESKA( playerid, "Nisi usao na WAR.");
	new w = WARPInfo[ playerid ][ WARIgrac ];
	if( WARInfo[ w ][ WARAktivan ] == false ) return GRESKA( playerid, "War nije jos startovan.");
	Dimi_SetPlayerHealth( playerid, 100 );
	Dimi_SetPlayerArmour( playerid, 0 );
	Dimi_SetPlayerPos( playerid, PozicijaWAR[ playerid ][ 0 ], PozicijaWAR[ playerid ][ 1 ],  PozicijaWAR[ playerid ][ 2 ] );
	SetPlayerVirtualWorld( playerid, VirtualWWAR[ playerid ] );
	SetPlayerInterior( playerid, InteriorWAR[ playerid ] );
	antiCheatCS[ playerid ][ WeaponDetect ] = 3;
	ResetAllWeapons( playerid );
	WARPInfo[ playerid ][ WARIgrac ] = -1;
	ResetujWarIgraca( playerid );
	if( WARPInfo[ playerid ][ WARTim ][ 0 ] == true )
	{
		format( globalstring, sizeof( globalstring ), ""col_orange"WAR | {F81414}%s: "col_white"je napustio WAR.", ImeIgraca( playerid ) );
		WARPoruka( w, 0xFF9900AA, globalstring );
		WARInfo[ w ][ WARTimClanovi ][ 0 ]--;
	}
	if( WARPInfo[ playerid ][ WARTim ][ 1 ] == true ) {
		format( globalstring, sizeof( globalstring ), ""col_orange"WAR | "col_balkanstory"%s: "col_white"je napustio WAR.", ImeIgraca( playerid ) );
		WARPoruka( w, 0xFF9900AA, globalstring );
		WARInfo[ w ][ WARTimClanovi ][ 1 ]--;
	}
	SendClientMessagee( playerid, -1, "Izasli ste iz wara." );
	WarTDControl( playerid, false );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:wp( playerid, params[] )
{
	new text[ 180 ], string[ 240 ];
	if( WARPInfo[ playerid ][ WARIgrac ] == -1 ) return GRESKA( playerid, "Nisi usao na WAR.");
	if( sscanf( params, "s[180]", text ) ) return SendUsageMessage( playerid, "/wp [text]");
	if( WARPInfo[ playerid ][ WARTim ][ 0 ] == true )
	{
		format( string, sizeof( string ), ""col_orange"WAR | {F81414}%s: "col_white"%s", ImeIgraca( playerid ), text );
	}
	if( WARPInfo[ playerid ][ WARTim ][ 1 ] == true )
	{
		format( string, sizeof( string ), ""col_orange"WAR | "col_balkanstory"%s: "col_white"%s", ImeIgraca( playerid ), text );
	}
	WARPoruka( WARPInfo[ playerid ][ WARIgrac ], 0xFF9900AA, string );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
new ipFILE[128];
new	pFILE[MAX_PLAYERS][128];
new SendIP;

stock proveriAlias( playerid )
{
	new plname[ MAX_PLAYER_NAME ] ;
	GetPlayerName(playerid, plname, sizeof(plname));
	new playersip[64];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	new string2[256];
	new string[256];
	new string3[256];
	format(pFILE[ playerid ], 128, "Multiacc/%s.txt", plname);
	dini_Create(pFILE[ playerid ]);
	dini_Set(pFILE[ playerid ], "Nameip", playersip);
	if(strlen(dini_Get("Multiacc/ips.txt", plname)) == 0)
	{
		dini_Set("Multiacc/ips.txt", plname, playersip);
	}
	else
	{
		if( strfind( dini_Get("Multiacc/ips.txt", plname), playersip, true) == -1 )
		{
			format(string,sizeof(string),"%s, %s", dini_Get("Multiacc/ips.txt",plname), playersip);
			dini_Set("Multiacc/ips.txt", plname, string);
		}
	}
	new pAKA[256];
	pAKA = dini_Get("Multiacc/alias.txt",playersip);
	new pIPs[256];
	pIPs = dini_Get("Multiacc/ips.txt",plname);

	if (strlen(pAKA) < 3)
	{
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
			if(strlen(pIPs) >= 128)
			{
				format(string2,sizeof(string2),"* %s[%d] Drugi IP-ovi: -MNOGO-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s[%d] DRUGI IP-ovi: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}
	else if (!strcmp(pAKA,plname,true))
	{
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
			if(strlen(pIPs) >= 128)
			{
				format(string2,sizeof(string2),"* %s[%d] Drugi IP-ovi: -MNOGO-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s[%d] DRUGI IP-ovi: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}
	else
	{
		format(string3,sizeof(string3),"[INFO]: %s[%d] se konektovao na server (%s). (Drugi ACC-ovi: %s)", plname, playerid,playersip, pAKA);
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
			if(strlen(pIPs) >= 128)
			{
				format(string2,sizeof(string2),"* %s[%d] Drugi IP-ovi: -MNOGO-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s[%d] DRUGI IP-ovi: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][xAdmin] > 1)
			{
				if(strlen(string3) != 0) SendClientMessage(i,CRVENA,string3);
				if(SendIP == 1)
				{
					SendClientMessage(i,CRVENA,string2);
					SendIP = 0;
				}
			}
		}
	}
}
//////////////////////////////////////////////////////////////////////////////////
stock aliasLogin( playerid )
{
	new string55[256];
	new playername22[ MAX_PLAYER_NAME ] ;
	GetPlayerName(playerid, playername22, sizeof(playername22));
	new playersip[64];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	if(strlen(dini_Get("Multiacc/alias.txt", playersip)) == 0)
	{
		dini_Set("Multiacc/alias.txt", playersip, playername22);
	}
	else
	{
		if( strfind( dini_Get("Multiacc/alias.txt", playersip), playername22, true) == -1 )
		{
			format(string55,sizeof(string55),"%s, %s", dini_Get("Multiacc/alias.txt",playersip), playername22);
			dini_Set("Multiacc/alias.txt", playersip, string55);
		}
	}
}
//////////////////////////////////////////////////////////////////////////////////
CMD:multiacc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || RconAdmin[ playerid ] )
	{
		new player1;
		if(sscanf(params, "u", player1)) return SendUsageMessage(playerid, "/multiacc [ ID/Ime ]");
		new playername[ MAX_PLAYER_NAME ], str[ 128 ], tmp3[ 50 ];
		if( IsPlayerConnected( player1 ) && player1 != INVALID_PLAYER_ID )
		{
			GetPlayerIp( player1, tmp3, 50 );
			GetPlayerName(player1, playername, sizeof(playername));
			format(str, sizeof(str), ""col_white"Drugi korisnicki racuni za ime "col_red"%s (%d)"col_white" su:\n\t%s", playername, player1, dini_Get("Multiacc/alias.txt",tmp3) );
			return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""col_white"PROVERA "col_red"MULTI RACUNA", str, "Zatvori", "");
		}
		else return GRESKA(playerid, "Pogresan ID" );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
}
//////////////////////////////////////////////////////////////////////////////////
CMD:ips( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] >= 6 || RconAdmin[ playerid ] )
	{
		new ID;
		if( sscanf( params, "u", ID ) ) return SendUsageMessage(playerid, "/ips [ ID/Ime ]");
		new playername[ MAX_PLAYER_NAME ], str[ 128 ];
		if( IsPlayerConnected( ID ) && ID != INVALID_PLAYER_ID )
		{
			GetPlayerName(ID, playername, sizeof(playername));
			format(str, sizeof(str), ""col_white"IP-ovi koristeni na "col_red"%s (%d)"col_white" su:\n\t%s", playername, ID, dini_Get("Multiacc/ips.txt",playername) );
			return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""col_white"PROVERA "col_red"MULTI RACUNA", str, "Zatvori", "");
		}
		else return GRESKA(playerid, "Pogresan ID" );
	}
	else return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offips( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] <= 3 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new name2[24],msg[356];
	if(sscanf(params, "s[24]", name2))
		return SendUsageMessage(playerid, "/offips [ Ime_Prezime ]");
	format(ipFILE, 64, "Multiacc/%s.txt", name2);

	if(!dini_Exists(ipFILE))
		return GRESKA(playerid, "Odabrano ime ne postoji na ovom serveru - provjerite sva slova.");
	format(msg, sizeof(msg), ""col_white"IP-ovi koristeni na imenu "col_red"%s"col_white" su:\n\t%s", name2, dini_Get("Multiacc/alias.txt",name2) );
	return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""col_white"PROVERA "col_red"MULTI RACUNA", msg, "Zatvori", "");
}
//////////////////////////////////////////////////////////////////////////////////
CMD:offmultiacc( playerid, params[] )
{
	if( PlayerInfo[ playerid ][ xAdmin ] < 6 ) return GRESKA( playerid, "Niste ovlasteni za ovu komandu!" );
	new tmp3[50], msg[356], name[24];
	if(sscanf(params, "s[24]", name))
		return SendUsageMessage(playerid, "/offmultiacc [ Ime_Prezime ]");
	format(ipFILE, 64, "Multiacc/%s.txt", name);
	if(!dini_Exists(ipFILE))
		return GRESKA(playerid, "Odabrano ime ne postoji na ovom serveru - provjerite sva slova.");
	strmid(tmp3,dini_Get(ipFILE, "Nameip"),0,50,50);
	format(msg, sizeof(msg), ""col_white"Drugi korisnicki racuni za ime "col_red"%s"col_white" su:\n\t%s", name, dini_Get("Multiacc/alias.txt",tmp3) );
	return ShowPlayerDialog( playerid, 0, DIALOG_STYLE_MSGBOX, ""col_white"PROVERA "col_red"MULTI RACUNA", msg, "Zatvori", "");
}
//////////////////////////////////////////////////////////////////////////////////
CMD:rulet( playerid, params[] )
{
	if( GetPlayerBusinessId( playerid, VRSTA_CASINO ) == -1 ) return GRESKA( playerid, "Morate biti kod u casinu da bi koristili ovu komandu." );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3+." );
	new ruletkes;
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1116.2321, -61.3468, 994.1146 ) && !IsPlayerInRangeOfPoint( playerid, 3.0, 1115.0347, -39.7942, 994.1146 ) ) return GRESKA(playerid,  "Vi niste kod ruleta - ne mozete to sada!");
	if( sscanf(params, "i", ruletkes)) return SendUsageMessage(playerid, "/rulet [Novac]");
	if( ruletkes < 0 ) return GRESKA( playerid, "Minimalni ulog je: {FFFFFF}5$");
	if( ruletkes < 5 ) return GRESKA( playerid, "Minimalni ulog je: {FFFFFF}5$");
	if( ruletkes > 200 ) return GRESKA( playerid, "Maksimalni ulog je: {FFFFFF}200$");
	if( PlayerInfo[ playerid ][ xNovac ] < ruletkes ) return GRESKA( playerid, "Nemate dovoljno novca!");
	RuletAccount[ playerid ] = ruletkes;
	DajIgracuNovac( playerid, -ruletkes );
	BussinesMoney( uFirmi[ playerid ], ruletkes );
	format( globalstring, sizeof( globalstring ), "* %s stavlja novac na stol.", ImeIgraca( playerid ) );
	PorukaRadius( 10.0, playerid, globalstring, LJUBICASTA );
	ShowPlayerDialog( playerid, dialog_RULET_1, DSL, "Rulet", "Boja\nBroj\nPar-Nepar\nKombinacije", "Dalje", "Odustani" );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:gamble( playerid, params[] )
{
	if( GetPlayerBusinessId( playerid, VRSTA_CASINO ) == -1 ) return GRESKA( playerid, "Morate biti kod u casinu da bi koristili ovu komandu." );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3+." );
	new kockarkes;
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1120.2582, -37.3042, 994.1146 ) && !IsPlayerInRangeOfPoint(playerid, 3.0, 1111.9668, -37.4637, 994.1146 ) ) return GRESKA(playerid,  "Vi niste kod slot aparata - ne mozete to sada!");
	if( Gambling[ playerid ] == 1 )
	{
		ExitPlayerFromSlotMachine( playerid );
	}
	else
	{
	
		if( sscanf(params, "i", kockarkes ) ) return SendUsageMessage( playerid, "/gamble [Novac]" );
		if( kockarkes < 0 ) return GRESKA( playerid,  "Minimalni ulog je: {FFFFFF}5$" );
		if( kockarkes < 5 ) return GRESKA( playerid,  "Minimalni ulog je: {FFFFFF}5$" );
		if( kockarkes > 150 ) return GRESKA( playerid,  "Maksimalni ulog je: {FFFFFF}150$" );
		if( PlayerInfo[ playerid ][ xNovac ] < kockarkes ) return GRESKA( playerid, "Nemate dovoljno novca!" );
		format( globalstring, sizeof( globalstring ), "* %s stavlja novac u aparat i pocinje igrati.", ImeIgraca( playerid ) );
		PorukaRadius(10.0, playerid, globalstring, LJUBICASTA );
		PutPlayerInSlotMachine( playerid, _, kockarkes );
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
CMD:poker( playerid, params[] )
{
	if( GetPlayerBusinessId( playerid, VRSTA_CASINO ) == -1 ) return GRESKA( playerid, "Morate biti kod u casinu da bi koristili ovu komandu." );
	if( PlayerInfo[ playerid ][ xLevel ] < 3 ) return GRESKA( playerid, "Nisi level 3+." );
	new credit;
	if( !IsPlayerInRangeOfPoint( playerid, 3.0, 1112.5039, -64.2058, 994.1146 ) && !IsPlayerInRangeOfPoint( playerid, 3.0, 1119.7524, -64.1777, 994.1146 ) ) return GRESKA( playerid, "Niste kod poker aparata!");
	if( sscanf( params, "i", credit ) ) return SendUsageMessage( playerid, "/poker [Novac]");
	if( Start[ playerid ] != PlayerText:INVALID_TEXT_DRAW ) return GRESKA( playerid, "Vec koristis poker.");
	if( credit < 5 || credit > 150 ) return GRESKA( playerid, "Maksimalni ulog je 150$, a minimalni 5$!");
	if( PlayerInfo[ playerid ][ xNovac ] < credit ) GRESKA(playerid,  "Nemate dovoljno novca!");
	else
	{
	// .......................................... BackGround
			Start[ playerid ] = CreatePlayerTextDraw(playerid, -0.000, -0.000, "LOADSUK:loadsc7");
			PlayerTextDrawFont(playerid, Start[ playerid ], 4);
			PlayerTextDrawTextSize(playerid, Start[ playerid ], 640.000, 450.000);
			PlayerTextDrawColor(playerid, Start[ playerid ], -1);
			PlayerTextDrawShow(playerid, Start[ playerid ]);
	// ..........................................
			new
					PlayerText:txd = Start[ playerid ],
					Float:t_x = 167.500000;
			for(new i; i < 5; i++)
			{
	// .......................................... CardsText
					txd = CreatePlayerTextDraw(playerid, t_x, 286.500, "LD_TATT:8poker");
					PlayerTextDrawFont(playerid, txd, 4);
					PlayerTextDrawTextSize(playerid, txd, 59.500, 88.000);
					PlayerTextDrawColor(playerid, txd, -1);
					PlayerTextDrawSetSelectable(playerid, txd, 1);
					PlayerTextDrawShow(playerid, txd);
					t_x += 61.500000;
			}
			t_x = 167.500000;
			for(new i; i < 5; i++)
			{
	// .......................................... HoldsText
					txd = CreatePlayerTextDraw(playerid, t_x, 270.500, "LD_POKE:holdon");
					PlayerTextDrawFont(playerid, txd, 4);
					PlayerTextDrawTextSize(playerid, txd, 59.500, 14.500);
					PlayerTextDrawColor(playerid, txd, -1);
					PlayerTextDrawShow(playerid, txd);
					t_x += 61.500000;
			}
	// .......................................... Win_Text
			txd = CreatePlayerTextDraw(playerid, 167.500000, 154.000000, "Royal Flush~n~Straight Flush~n~4 of a Kind~n~Full House~n~Flush~n~Straight~n~3 of a Kind~n~Two Pair");
			PlayerTextDrawFont(playerid, txd, 1);
			PlayerTextDrawLetterSize(playerid, txd, 0.320000, 1.400000);
			PlayerTextDrawSetOutline(playerid, txd, 1);
			PlayerTextDrawSetProportional(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... WinText
			txd = CreatePlayerTextDraw(playerid, 247.500000, 154.000000, "_");
			PlayerTextDrawFont(playerid, txd, 1);
			PlayerTextDrawLetterSize(playerid, txd, 0.320000, 1.400000);
			PlayerTextDrawSetOutline(playerid, txd, 1);
			PlayerTextDrawSetProportional(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... BetCreditText
			txd = CreatePlayerTextDraw(playerid, 320.000000, 379.000000, "_");
			PlayerTextDrawAlignment(playerid, txd, 2);
			PlayerTextDrawBackgroundColor(playerid, txd, 255);
			PlayerTextDrawFont(playerid, txd, 3);
			PlayerTextDrawLetterSize(playerid, txd, 0.300000, 1.600000);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetOutline(playerid, txd, 0);
			PlayerTextDrawSetProportional(playerid, txd, 1);
			PlayerTextDrawSetShadow(playerid, txd, 1);
			PlayerTextDrawUseBox(playerid, txd, 1);
			PlayerTextDrawBoxColor(playerid, txd, 335595560);
			PlayerTextDrawTextSize(playerid, txd, 6.000000, 302.000000);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... DealsText
			txd = CreatePlayerTextDraw(playerid, 229.000, 400.500, "LD_POKE:deal");
			PlayerTextDrawFont(playerid, txd, 4);
			PlayerTextDrawTextSize(playerid, txd, 59.500, 14.500);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetSelectable(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... AddCoinsText
			txd = CreatePlayerTextDraw(playerid, 167.500, 400.500, "LD_POKE:addcoin");
			PlayerTextDrawFont(playerid, txd, 4);
			PlayerTextDrawTextSize(playerid, txd, 59.500, 14.500);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetSelectable(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... ExitPoker
			txd = CreatePlayerTextDraw(playerid, 457.000, 253.000, "LD_BEAT:cross");
			PlayerTextDrawFont(playerid, txd, 4);
			PlayerTextDrawTextSize(playerid, txd, 16.000, 16.000);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetSelectable(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... BetText
			txd = CreatePlayerTextDraw(playerid, 167.500, 377.000, "LD_BEAT:circle");
			PlayerTextDrawFont(playerid, txd, 4);
			PlayerTextDrawTextSize(playerid, txd, 16.000, 16.000);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetSelectable(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);
	// .......................................... ChangeBackGround
			txd = CreatePlayerTextDraw(playerid, 437.000, 253.000, "LD_NONE:warp");
			PlayerTextDrawFont(playerid, txd, 4);
			PlayerTextDrawTextSize(playerid, txd, 16.000, 16.000);
			PlayerTextDrawColor(playerid, txd, -1);
			PlayerTextDrawSetSelectable(playerid, txd, 1);
			PlayerTextDrawShow(playerid, txd);

			if(txd == CHANGEBACKGROUND)
			{
					PP_Info[ playerid ][Credit] = credit;
					DajIgracuNovac( playerid, -credit );
					BussinesMoney( uFirmi[ playerid ], credit );
					TogglePlayerControllable(playerid, false);
					PP_Info[ playerid ][PokerBet] = 5;
					PP_Info[ playerid ][click_dealbutton] = FIRST_CLICKDEALTEXT;

					BetCredit(playerid);
					WinnText(playerid);

					for(new i; i < 5; i++)
					{
							PP_Info[ playerid ][fivecards_hand][i] = 0;
							PP_Info[ playerid ][fivecards_hand][i + 5] = 0;
							PP_Info[ playerid ][holdstate][i] = HOLDOFF;
					}
					SelectTextDraw(playerid, 0x787ab3bb); //0x9999BBBB);
					SendClientMessagee( playerid, NARANDZASTA, "Igraj.");
			}
			else
			{
					GRESKA( playerid, "Pokusajte ponovno.");
					Delete_PokerTextDraw( playerid );
			}
	}
	return 1;
}

//===================================================================
//presenthuntevent

CMD:sniperevent(playerid,params[])
{
	SendInfoMessage(playerid, "Koristite /ostalieventi");
	return 1;
}

CMD:presenthuntevent(playerid,params[])
{
	SendInfoMessage(playerid, "Koristite /ostalieventi");
	return 1;
}

CMD:snipereventinfo(playerid,params[])
{
	new DialogStrgEx1[ 300 ];
	
	strcat( DialogStrgEx1, ""col_balkanstory"Sniper Event"col_white" je mini-event koji je ukljucen na odredjeno vrijeme\nod strane administratora!\n- Poenta eventa jeste da svaki put kada \npostignete headshot sa Sniper Rifle oruzjem,\ndobijete $2000 kao nagradu.");
	ShowPlayerDialog( playerid, dialog_HELP, DSMSG, "Sniper Event - info", DialogStrgEx1, "OK", "" );
	
	return 1;
}

//===================================================================

#if BETA_BUILD == 1

CMD:pubgtest(playerid,params[])
{
	if(PlayerInfo[playerid][xPUBG] == 1) return SendInfoMessage(playerid,"Ti si na PUBG eventu.");
	return SendInfoMessage(playerid,"Ti nisi na PUBG eventu.");
}

stock betadialog(i)
{
	ShowPlayerDialog(i,dialog_BETA,DSI,"Nova Era | Beta test - vase iskustvo","Postovanje i pozdrav.\n\nUpamtite da trenutno igrate na BETA verziji igre.\nTrenutna verzija ne reprezentira konacne rezultate.\n\nSa obzirom da nam je stalo do vasih performansi tokom \nigre na nasem serveru, zelimo cuti Vase povrate informacije o\nVasem iskustvu tokom igre na ovoj beta verziji.\n\nHvala Vam sto ste beta tester ove zajednice,\ni sto pomazete da ucinimo ovaj server zabavnijim i kvalitetnijim.","Unesi","Izlaz");
}

CMD:betainfo(playerid,params[])
{
	betadialog(playerid);
	return 1;
}
#endif
